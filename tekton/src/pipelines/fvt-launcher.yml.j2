---
# There are various integration points in the install pipeline that we can hang FVT off
# 1. suite-verify ............... Triggered after Core install and configuration is verified
# 2. app-cfg-assist ............. Triggered after Assist is installed and configured
# 3. app-cfg-iot ................ Triggered after IoT is installed and configured
# 4. app-cfg-manage ............. Triggered after Manage is installed and configured
# 5. app-cfg-monitor ............ Triggered after Monitor is installed and configured
# 6. app-cfg-optimizer .......... Triggered after Optimizer is installed and configured
# 7. app-cfg-predict ............ Triggered after Predict is installed and configured
# 8. app-cft-visualinspection ... Triggered after Visual Inspection is installed and configured

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mas-fvt-launcher
spec:
  params:
    - name: image_pull_policy
      type: string

    - name: mas_instance_id
      type: string

    - name: sync_with_install
      type: string
      default: "false"
      description: "Set this to 'true' to enable synchronization with a running MAS install pipeline"

    # What to launch
    # -------------------------------------------------------------------------
    - name: setup_manage
      type: string
      default: "false"
      description: "Set this to 'true' to enable Manage setup step"

    - name: launchfvt_core
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the SLS & Core FVT pipelines after suite-verify completes"
    - name: launchfvt_assist
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the Assist FVT pipeline after app-cfg-assist completes"
    - name: launchfvt_iot
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the IoT FVT pipeline after app-cfg-iot completes"
    - name: launchfvt_manage
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the Manage FVT pipeline after app-cfg-manage completes"
    - name: launchfvt_manage_is
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the Manage Industry Solutions FVT pipeline after app-cfg-manage completes"
    - name: launchfvt_mobile
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the Mobile FVT pipeline after app-cfg-manage completes"
    - name: launchfvt_monitor
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the Monitor FVT pipeline after app-cfg-monitor completes"
    - name: launchfvt_optimizer
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the Optimizer FVT pipeline after app-cfg-optimizer completes"
    - name: launchfvt_predict
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the Predict FVT pipeline after app-cfg-predict completes"
    - name: launchfvt_visualinspection
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the Visual Inspection FVT pipeline after app-cfg-visualinspection completes"
    - name: launchivt_manage
      type: string
      default: "false"
      description: "Set this to 'true' to enable launch of the IVT pipeline at the end of applications FVT"

    # Customize Final Wait
    # -------------------------------------------------------------------------
    # When skipping FVT for applications that are installed it will be necessary
    # to customize the delay & retries, which default to values that assume
    # every application installed will have it's FVT executed.
    - name: waitforinstall_delay
      type: string
      default: "300"
      description: "Set this to customize the time that the FVT Launcher pipeline will wait for the install to complete"
    - name: waitforinstall_retries
      type: string
      default: "25"
      description: "Set this to customize the time that the FVT Launcher pipeline will wait for the install to complete"

    # Finalize
    # -------------------------------------------------------------------------
    - name: finalize
      type: string
      default: "true"
      description: "Set this to 'false' to stop the finalize task from running for this launcher"

    # Deprovision Resources
    # -------------------------------------------------------------------------
    - name: deprovision
      type: string
      default: "false"
      description: "Set this to 'true' to enable deprovision of the target cluster & associated resources following the completion of this pipeline"

    # Manage FVT Setup
    # -------------------------------------------------------------------------
    # These properties should not live here, but I don't have the time to fix this.
    #
    # Manage setup should match the same strategy used everywhere else with a launcher that
    # is able to get this information from the various secrets that we put into the namespace
    # so that the FVT launcher parameter space/interface is kept clean and simple
    - name: fvt_image_registry
      type: string
      default: ""
    - name: fvt_digest_manage_pytest
      type: string
      default: ""
    - name: mas_app_channel_manage
      type: string
      default: ""

  tasks:
    # 1. MAS Core FVT
    # -------------------------------------------------------------------------
    - name: waitfor-suite-verify
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-suite-verify
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        # Escape route
        - name: escape_configmap_name
          value: sync-install
        - name: escape_configmap_key
          value: INSTALL_STATUS
        # 25 retries at 5 minute intervals = 2 hours
        - name: delay
          value: "300"
        - name: max_retries
          value: "25"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]

    - name: launchfvt-sls
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-launchfvt-sls
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-sls"
      when:
        - input: $(params.launchfvt_core)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-suite-verify

    - name: launchfvt-core
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-launchfvt-core
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-core"
      when:
        - input: $(params.launchfvt_core)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-suite-verify

    - name: approval-suite-verify
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-suite-verify
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-core
        - launchfvt-sls


    # 2. Application FVT - Assist
    # -------------------------------------------------------------------------
    - name: waitfor-assist
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-assist
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        # Escape route
        - name: escape_configmap_name
          value: sync-install
        - name: escape_configmap_key
          value: INSTALL_STATUS
        # 40 retries at 5 minute intervals = 3 hours
        - name: delay
          value: "300"
        - name: max_retries
          value: "40"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_assist)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-assist
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-assist"
      taskRef:
        kind: Task
        name: mas-launchfvt-assist
      when:
        - input: $(params.launchfvt_assist)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-assist

    - name: approval-assist
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-assist
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-assist


    # 3. Application FVT - IoT
    # -------------------------------------------------------------------------
    - name: waitfor-iot
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-iot
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        # Escape route
        - name: escape_configmap_name
          value: sync-install
        - name: escape_configmap_key
          value: INSTALL_STATUS
        # 40 retries at 5 minute intervals = 3 hours
        - name: delay
          value: "300"
        - name: max_retries
          value: "40"
        - name: ignore_failure
          value: "False"
      when:
        # Wait for IoT to be installed if we are running the IoT and/or the Monitor FVT suite
        - input: "$(params.launchfvt_iot)$(params.launchfvt_monitor)"
          operator: in
          values: ["true", "True", "truetrue", "TrueTrue", "falsetrue", "FalseTrue", "truefalse","TrueFalse" ]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-iot
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-iot"
      taskRef:
        kind: Task
        name: mas-launchfvt-iot
      when:
        - input: $(params.launchfvt_iot)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-iot

    - name: approval-iot
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-iot
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-iot


    # 5. Application FVT - Manage
    # -------------------------------------------------------------------------
    - name: waitfor-manage
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-manage
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        # Escape route
        - name: escape_configmap_name
          value: sync-install
        - name: escape_configmap_key
          value: INSTALL_STATUS
        # 100 retries at 5 minute intervals = 8 hours
        - name: delay
          value: "300"
        - name: max_retries
          value: "100"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
        # All these launchers require manage in place to then run setup, therefore the criteria
        - input: $(params.launchfvt_manage)$(params.launchfvt_mobile)$(params.launchfvt_manage_is)$(params.launchfvt_predict)$(params.launchivt_manage)
          operator: notin
          values: ["falsefalsefalsefalsefalse"] # case sensitive to simplify (here is how launchfvt flags are in fvt template repos)
      runAfter:
        - approval-suite-verify

    # Manage Setup (Data Loader)
    # Required by fvt-manage, fvt-manage-is, fvt-optimizer and fvt-predict pipelines
    - name: manage-setup
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-fvt-manage-pytest
      when:
        - input: "$(params.setup_manage)"
          operator: in
          values: ["true", "True"]
      workspaces:
        - name: configs
          workspace: shared-configs
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: fvt_image_registry
          value: $(params.fvt_image_registry)
        - name: fvt_image_namespace
          value: fvt-manage
        - name: fvt_image_name
          value: fvt-ibm-mas-manage-pytest
        - name: fvt_image_digest
          value: $(params.fvt_digest_manage_pytest)
        - name: product_channel
          value: $(params.mas_app_channel_manage)
        - name: product_id
          value: ibm-mas-manage
        - name: fvt_test_suite
          value: base-api-setup
      runAfter:
        - waitfor-manage

    - name: launchfvt-manage
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-manage"
      taskRef:
        kind: Task
        name: mas-launchfvt-manage
      when:
        - input: $(params.launchfvt_manage)
          operator: in
          values: ["true", "True"]
      runAfter:
        - manage-setup

    - name: launchfvt-manage-is
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-manage-is"
      taskRef:
        kind: Task
        name: mas-launchfvt-manage-is
      when:
        - input: $(params.launchfvt_manage_is)
          operator: in
          values: ["true", "True"]
      runAfter:
        - manage-setup

    - name: approval-manage
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-manage
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-manage
        - launchfvt-manage-is


    # 6. Application FVT - Mobile
    # -------------------------------------------------------------------------
    # Mobile FVT pipeline is launched after Manage is installed, but we do not sync it's progress back to the install pipeline
    - name: launchfvt-mobile
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name_testng
          value: "$(params.mas_instance_id)-fvt-mobile-testng"
        - name: pipelinerun_name_pytest
          value: "$(params.mas_instance_id)-fvt-mobile-pytest"
      taskRef:
        kind: Task
        name: mas-launchfvt-mobile
      when:
        - input: $(params.launchfvt_mobile)
          operator: in
          values: ["true", "True"]
      runAfter:
        - manage-setup


    # 7. Application FVT - Monitor
    # -------------------------------------------------------------------------
    # We only start the Monitor part of the FVT launcher after the IoT part has completed
    - name: waitfor-monitor
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-monitor
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        # Escape route
        - name: escape_configmap_name
          value: sync-install
        - name: escape_configmap_key
          value: INSTALL_STATUS
        # 25 retries at 5 minute intervals = 4 hours
        - name: delay
          value: "300"
        - name: max_retries
          value: "25"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-iot

    - name: launchfvt-monitor
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-monitor"
      taskRef:
        kind: Task
        name: mas-launchfvt-monitor
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-monitor

    - name: approval-monitor
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-monitor
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-monitor


    # 8. Application FVT - Optimizer
    # -------------------------------------------------------------------------
    - name: waitfor-optimizer
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-optimizer
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        # Escape route
        - name: escape_configmap_name
          value: sync-install
        - name: escape_configmap_key
          value: INSTALL_STATUS
        # 25 retries at 5 minute intervals = 2 hours
        - name: delay
          value: "300"
        - name: max_retries
          value: "25"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_optimizer)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-optimizer
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-optimizer"
      taskRef:
        kind: Task
        name: mas-launchfvt-optimizer
      when:
        - input: $(params.launchfvt_optimizer)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-optimizer

    - name: approval-optimizer
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-optimizer
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-optimizer


    # 9. Application FVT - Predict
    # -------------------------------------------------------------------------
    # We only start the Predict part of the FVT launcher after the Monitor part has completed
    - name: waitfor-predict
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-predict
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        # Escape route
        - name: escape_configmap_name
          value: sync-install
        - name: escape_configmap_key
          value: INSTALL_STATUS
        # 25 retries at 5 minute intervals = 2 hours
        - name: delay
          value: "300"
        - name: max_retries
          value: "25"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-monitor
        - approval-manage

    - name: launchfvt-predict
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-predict"
      taskRef:
        kind: Task
        name: mas-launchfvt-predict
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-predict

    - name: approval-predict
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-predict
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-predict


    # 10. Application FVT - Visual Inspection
    # -------------------------------------------------------------------------
    - name: waitfor-visualinspection
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-visualinspection
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        # Escape route
        - name: escape_configmap_name
          value: sync-install
        - name: escape_configmap_key
          value: INSTALL_STATUS
        # 25 retries at 5 minute intervals = 2 hours
        - name: delay
          value: "300"
        - name: max_retries
          value: "25"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_visualinspection)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-visualinspection
      timeout: "0"
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-visualinspection"
      taskRef:
        kind: Task
        name: mas-launchfvt-visualinspection
      when:
        - input: $(params.launchfvt_visualinspection)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-visualinspection

    - name: approval-visualinspection
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-visualinspection
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-visualinspection

    # 11. IVT
    # -------------------------------------------------------------------------
    - name: launchivt-manage
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-launchivt-manage
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-ivt-manage"
      when:
        - input: $(params.launchivt_manage)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-manage
        - approval-monitor
        - launchfvt-mobile

    # Last Sync Point
    # -------------------------------------------------------------------------
    # Guarantee installation pipeline ran till the end;
    # In other words, guarantee sync-install pipeline has install_status key filled
    #
    # Note: this task will start once all the FVTs are approved and will start at the
    # same time install's post-verify starts. It means its timeout must be higher than
    # post-verify + sync-install, which will set the flag needed to finalize this fvt-launcher
    # - Escape Route: INSTALL_STATUS != "" (i.e. FAILED)
    # - Ignore Failures: True
    # -------------------------------------------------------------------------
    - name: waitfor-installation
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: sync-install
        - name: configmap_key
          value: INSTALL_STATUS
        - name: configmap_target_value
          value: Completed,Succeeded,Failed
        # Default to 25 retries at 5 minute intervals = 2 hours
        - name: delay
          value: $(params.waitforinstall_delay)
        - name: max_retries
          value: $(params.waitforinstall_retries)
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-mobile
        - approval-assist
        - approval-optimizer
        - approval-predict # Infers Manage, Monitor and IoT completed
        - approval-visualinspection
        - launchivt-manage

  finally:
    - name: launchfvt-finally
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-launchfvt-finally
      params:
        - name: deprovision
          value: "$(params.deprovision)"
        - name: finalize
          value: "$(params.finalize)"
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-finally"

  workspaces:
    # The generated configuration files
    - name: shared-configs
