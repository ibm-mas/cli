---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mas-fvt-deprovision-after
spec:
  params:
    # Name of the PipelineRun to wait for
    - name: pipelinerun_name
      type: string

    - name: ignore_failure
      type: string
      default: "True"
      description: Set to 'True' or 'False' (case-sensitive) to configure whether this pipeline continue if the pipeline we are waiting for has failed.

    # Tekton Pipeline image pull policy (for ibmmas/cli images)
    - name: image_pull_policy
      type: string
      default: IfNotPresent

    # MAS config
    - name: mas_instance_id
      type: string
      default: ""

    # Cluster to deprovision
    - name: cluster_name
      type: string
      default: ""
    - name: cluster_type
      type: string
      default: "roks"

    # IBM Cloud
    - name: ibmcloud_apikey
      type: string
      default: ""
    - name: ibmcloud_resourcegroup
      type: string
      default: ""
    
    # COS
    - name: ibmcos_resourcegroup
      type: string
      default: ""
    - name: ibmcos_instance_name
      type: string
      default: ""
    - name: cos_type
      type: string
      default: ""
    - name: cos_action
      type: string
      default: ""

    # IBM Event Streams
    - name: eventstreams_resourcegroup
      type: string
      default: ""
    - name: eventstreams_name
      type: string
      default: ""
    - name: eventstreams_location
      type: string
      default: ""
    - name: kafka_provider
      type: string
      default: ""
    - name: kafka_action_system
      type: string
      default: ""

  tasks:
    # 0. Wait for the named pipeline to complete
    # -------------------------------------------------------------------------
    - name: wait-for-pipelinerun
      taskRef:
        kind: Task
        name: mas-fvt-wait-for-pipelinerun
      params:
        - name: pipelinerun_name
          value: $(params.pipelinerun_name)
        - name: ignore_failure
          value: $(params.ignore_failure)

    # 1. Delete IBM Cloud services
    # -------------------------------------------------------------------------
    
    # COS
    - name: deprovision-cos
      taskRef:
        kind: Task
        name: mas-devops-cos-deprovision
      params:
        - name: ibmcloud_apikey
          value: $(params.ibmcloud_apikey)
        - name: ibmcloud_resourcegroup
          value: $(params.ibmcloud_resourcegroup)
        - name: ibmcos_resourcegroup
          value: $(params.ibmcos_resourcegroup)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: cos_type
          value: $(params.cos_type)
        - name: cos_action
          value: $(params.cos_action)
      runAfter:
        - wait-for-pipelinerun

    # Event Streams
    - name: deprovision-kafka
      taskRef:
        kind: Task
        name: mas-devops-kafka-deprovision
      params:
        - name: ibmcloud_apikey
          value: $(params.ibmcloud_apikey)
        - name: ibmcloud_resourcegroup
          value: $(params.ibmcloud_resourcegroup)
        - name: eventstreams_resourcegroup
          value: $(params.eventstreams_resourcegroup)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: kafka_provider
          value: $(params.kafka_provider)
        - name: kafka_action_system
          value: $(params.kafka_action_system)
        - name: eventstreams_name
          value: $(params.eventstreams_name)
        - name: eventstreams_location
          value: $(params.eventstreams_location)
      runAfter:
        - wait-for-pipelinerun

    # 2. Delete the named cluster
    # -------------------------------------------------------------------------
    - name: deprovision-cluster
      taskRef:
        kind: Task
        name: mas-devops-ocp-deprovision
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: cluster_type
          value: $(params.cluster_type)
        - name: ibmcloud_apikey
          value: $(params.ibmcloud_apikey)
      runAfter:
        - deprovision-cos
        - deprovision-kafka
