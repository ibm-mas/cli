name: Build Windows Binary
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  pyinstaller-windows:
    runs-on: windows-latest
    steps:
      # 1. Initialize the build
      # -------------------------------------------------------------------------------------------
      - name: Checkout
        uses: actions/checkout@v3
        # Without this option, we don't get the tag information
        with:
          fetch-depth: 0

      # Obviously none of this will work as we're running on Windows!!
      # - name: Initialise the build system
      #   run: |
      #     chmod u+x $GITHUB_WORKSPACE/build/bin/*.sh
      #     $GITHUB_WORKSPACE/build/bin/initbuild.sh
      #     source $GITHUB_WORKSPACE/build/bin/.functions.sh

      # # 2. Tekton
      # # -------------------------------------------------------------------------------------------
      # - name: Build the Tekton definitions
      #   run: $GITHUB_WORKSPACE/build/bin/build-tekton.sh

      # https://github.com/marketplace/actions/download-workflow-artifact

      - name: Wait for build-cli to succeed
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          check-name: 'build-cli'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build-cli.yml
          commit: ${{ env.GITHUB_SHA }}
          name: ibm-mas-tekton.yaml
          skip_unpack: false
          if_no_artifact_found: fail

      # 3. Run PyInstaller
      # -------------------------------------------------------------------------------------------
      - name: Build the mas-x Windows executables
        run: |
          # We can't sed on Windows
          # sed -i "s#__version__ = \"100.0.0\"#__version__ = \"${{ env.VERSION_NOPREREL }}\"#g" ${GITHUB_WORKSPACE}/python/src/mas/cli/__init__.py
          # cat ${GITHUB_WORKSPACE}/python/src/mas/cli/__init__.py
          cp ibm-mas-tekton.yaml $GITHUB_WORKSPACE/python/src/mas/cli/templates/ibm-mas-tekton.yaml

          cd python
          python -m pip install --upgrade pip
          python -m pip list
          python -m pip install .[dev]

          pyinstaller --onefile --noconfirm --collect-data mas.devops --collect-data mas.cli src/mas-install
          pyinstaller --onefile --noconfirm --collect-data mas.devops --collect-data mas.cli src/mas-upgrade
          pyinstaller --onefile --noconfirm --collect-data mas.devops --collect-data mas.cli src/mas-uninstall

      - name: Upload mas-install
        uses: actions/upload-artifact@v3
        with:
          name: mas-install-windows-${{ env.VERSION_NOPREREL }}.exe
          path: ${{ github.workspace }}/python/dist/mas-install.exe
          retention-days: 30

      - name: Upload mas-upgrade
        uses: actions/upload-artifact@v3
        with:
          name: mas-upgrade-windows-${{ env.VERSION_NOPREREL }}.exe
          path: ${{ github.workspace }}/python/dist/mas-upgrade.exe
          retention-days: 30

      - name: Upload mas-uninstall
        uses: actions/upload-artifact@v3
        with:
          name: mas-uninstall-windows-${{ env.VERSION_NOPREREL }}.exe
          path: ${{ github.workspace }}/python/dist/mas-uninstall.exe
          retention-days: 30
