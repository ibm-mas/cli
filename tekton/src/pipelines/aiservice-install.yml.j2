---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: aiservice-install
spec:
  workspaces:
    # The generated configuration files
    - name: shared-configs
    # Any pre-generated configs that will be copied into the shared-configs workspace during suite-install
    - name: shared-additional-configs
    # The SLS entitlement key file that will be installed during install-sls.
    - name: shared-entitlement
    # Pre-generated certificates that will be copied into certs folder of shared-configs workspace to be used by suite-certs task
    - name: shared-certificates
    # PodTemplates configurations
    - name: shared-pod-templates

  params:
    # 1. Common Parameters
    # -------------------------------------------------------------------------
    {{ lookup('template', params_src_dir ~ '/common.yml.j2', template_vars={'application': 'aiservice'}) | indent(4) }}

    # 2. Installation
    # -------------------------------------------------------------------------
    {{ lookup('template', params_src_dir ~ '/install-ibmcatalogs.yml.j2') | indent(4) }}
    {{ lookup('template', params_src_dir ~ '/install-common.yml.j2') | indent(4)  }}
    {{ lookup('template', params_src_dir ~ '/install-aiservice.yml.j2') | indent(4) }}

  tasks:
    # Content
    # -------
    # 1. Setup Operator Catalog and Certificate Manager
    # 2. Install Universal Dependencies
    # 3. Install & Configure AI Service

    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/cluster-setup/ocp-verify.yml.j2', template_vars={'name': 'pre-install-check', 'devops_suite_name': 'pre-install-check'}) | indent(4) }}

    # 1. Setup Cluster-wide Dependencies & Configure Cluster Monitoring
    # -------------------------------------------------------------------------
    # 1.1 IBM Operator Catalog
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/cluster-setup/ibm-catalogs.yml.j2') | indent(4) }}
      runAfter:
        - pre-install-check

    # 1.2 Red Hat Certificate Manager
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/cluster-setup/cert-manager.yml.j2') | indent(4) }}
      runAfter:
        - ibm-catalogs


    # 2. Install Universal Dependencies
    # -------------------------------------------------------------------------
    # 2.1 MongoDb
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/dependencies/mongo.yml.j2', template_vars={'application': 'aiservice'}) | indent(4) }}
      runAfter:
        - cert-manager

    # 2.2 IBM SLS
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/dependencies/sls.yml.j2', template_vars={'application': 'aiservice'}) | indent(4) }}
      runAfter:
        - mongodb

    # 2.3 DRO
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/dependencies/uds.yml.j2', template_vars={'application': 'aiservice'}) | indent(4) }}
      runAfter:
        - ibm-catalogs


    # 3 Install and Configure AI Broker
    # -------------------------------------------------------------------------
    # 3.1 Install minio storage class
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/aiservice/minio.yml.j2') | indent(4) }}
      runAfter:
        - cert-manager

    # 3.2 Install db2
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/dependencies/db2.yml.j2', template_vars={'suffix': 'aiservice'}) | indent(4) }}
      runAfter:
        - cert-manager

    # 3.3 Install Opendatahub
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/aiservice/odh.yml.j2', template_vars={'application': 'aiservice'}) | indent(4) }}
      runAfter:
        - minio

    # 3.4 Install Kmodels
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/aiservice/kmodels.yml.j2', template_vars={'application': 'aiservice'}) | indent(4) }}
      runAfter:
        - aiservice-odh

    # 3.5 Install and Configure AI Service
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/aiservice/aiservice.yml.j2', template_vars={'application': 'aiservice'}) | indent(4) }}
      runAfter:
        - aiservice-kmodels
        - db2-aiservice

    # 3.6 AI Service tenant creation
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/aiservice/aiservice-tenant.yml.j2') | indent(4) }}
      runAfter:
        - aiservice

    # 3.7 AI Service Post Verification
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/aiservice/aiservice-post-verify.yml.j2') | indent(4) }}
      runAfter:
        - aiservice-tenant

  finally:
    # Update synchronization configmap
    # -------------------------------------------------------------------------
    - name: sync-install
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: sync-install
        - name: configmap_value
          # An aggregate status of all the pipelineTasks under the tasks section (excluding the finally section).
          # This variable is only available in the finally tasks and can have any one of the values (Succeeded, Failed, Completed, or None)
          value: $(tasks.status)
