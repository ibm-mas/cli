#!/bin/bash

function install_help() {
  [[ -n "$1" ]] && echo_warning "$1"
  reset_colors
  cat << EOM
Usage:
  mas install [options]

Options:
  -d, --dev-mode                           Enable developer mode

EOM
  [[ -n "$1" ]] && exit 1 || exit 0
}


function install() {
  # Take the first parameter off (it will be install)
  shift

  while [[ $# -gt 0 ]]
  do
  key="$1"
  shift
  case $key in
    -d|--dev-mode)
    DEV_MODE=true && shift
    ;;
    *)
    # unknown option
    echo -e "${COLOR_RED}Usage Error: Unsupported option \"${key}\"${COLOR_RESET}\n"
    install_help
    exit 1
    ;;
  esac
  done

  connect

  # Check for OCP 4.8
  export OCP_VERSION=$(oc get clusterversion version -o jsonpath="{.status.desired.version}")
  if [[ "$OCP_VERSION" =~ ^4\.7\.* ]]; then
    echo
    echo_warning "Warning: OpenShift Container Platform v${OCP_VERSION} detected!"
    echo_warning " - This version is now out of support by Red Hat and ${TEXT_UNDERLINE}not a supported platform for IBM Maximo Application Suite"
    echo_warning " - The installation of IBM Maximo Application Suite may not proceed, you must upgrade to OCP v4.10 before installing MAS"
    echo
    echo_warning "For more information refer to the Red Hat OpenShift Container Platform Life Cycle Policy:"
    echo "  ${COLOR_CYAN}${TEXT_UNDERLINE}https://access.redhat.com/support/policy/updates/openshift/${COLOR_RESET}${TEXT_RESET}"
    reset_colors
    exit 1
  elif [[ "$OCP_VERSION" =~ ^4\.8\.* ]]; then
    echo
    echo_warning "Warning: OpenShift Container Platform v${OCP_VERSION} detected!"
    echo_warning " - This version is ${TEXT_UNDERLINE}now out of support by Red Hat"
    echo_warning " - The installation of IBM Maximo Application Suite may proceed, but we strongly encourage you to upgrade to OCP v4.10 first"
    echo
    echo_warning "For more information refer to the Red Hat OpenShift Container Platform Life Cycle Policy:"
    echo "  ${COLOR_CYAN}${TEXT_UNDERLINE}https://access.redhat.com/support/policy/updates/openshift/${COLOR_RESET}${TEXT_RESET}"
    reset_colors
    echo
    prompt_for_confirm "Continue anyway?" || exit 0
  fi

  detect_airgap
  detect_sno
  pipeline_install_operator
  pipeline_config
  pipeline_prepare
  pipeline_show_config
  pipeline_run
}