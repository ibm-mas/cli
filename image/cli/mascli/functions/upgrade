#!/bin/bash

function upgrade_help() {
  [[ -n "$1" ]] && echo_warning "$1"
  reset_colors
  cat << EOM
Usage:
  mas upgrade [options]
Where ${COLOR_YELLOW}specified${TEXT_RESET} each option may also be defined by setting the appropriate environment variable.
When no options are specified on the command line, interactive-mode will be enabled by default.

MAS Instance Selection (Required):
  -i, --id ${COLOR_YELLOW}MAS_INSTANCE_ID${TEXT_RESET}     MAS Instance ID to upgrade

Other Commands:
      --no-confirm                      Mirror images without prompting for confirmation
  -h, --help                            Show this help message
EOM
  [[ -n "$1" ]] && exit 1 || exit 0
}


function upgrade_noninteractive() {
  detect_airgap
  while [[ $# -gt 0 ]]
  do
    key="$1"
    shift
    case $key in
      -i|--id)
        MAS_INSTANCE_ID=$1 && shift
        ;;
      --no-confirm)
        NO_CONFIRM=true
        ;;
      -h|--help)
        upgrade_help
        ;;
      *)
        # unknown option
        echo -e "${COLOR_RED}Usage Error: Unsupported option \"${key}\"${COLOR_RESET}\n"
        upgrade_help
        exit 1
        ;;
      esac
  done

  # Check all args have been set
  [[ -z "$MAS_INSTANCE_ID" ]] && upgrade_help "MAS_INSTANCE_ID is not set"
}

function upgrade_interactive() {
  connect
  detect_airgap

  echo
  echo_h2 "Select IBM Maximo Application Suite Upgrade"

  prompt_for_input "MAS Instance ID" MAS_INSTANCE_ID

  # echo -e "${COLOR_YELLOW}MAS Version:"
  # echo "  1. 8.8.x"
  # echo "  2. 8.7.x"
  # prompt_for_input "Select MAS Version" MAS_CHANNEL_SELECTION "1"

  # case $MAS_CHANNEL_SELECTION in
  #   1|8.8|8.8.x)
  #     MAS_CHANNEL=8.8.x
  #     ;;
  #   2|8.7|8.7.x)
  #     MAS_CHANNEL=8.7.x
  #     ;;
  #   *)
  #     echo_warning "Invalid selection"
  #     exit 1
  #     ;;
  # esac
}


function upgrade() {
  # Take the first parameter off (it will be mirror-images)
  shift
  if [[ $# -gt 0 ]]; then
    upgrade_noninteractive "$@"
  else
    upgrade_interactive
  fi

  export MAS_CATALOG_VERSION
  export MAS_CHANNEL=""
  echo
  reset_colors
  echo_h2 "Review Settings"

  echo "${TEXT_DIM}"
  echo_h2 "Maximo Application Suite" "    "
  echo_reset_dim "Instance ID ..................... ${COLOR_MAGENTA}${MAS_INSTANCE_ID}"
  #echo_reset_dim "Target Channel ..................... ${COLOR_MAGENTA}${MAS_CHANNEL}"

  echo
  reset_colors
  if [[ "$NO_CONFIRM" != "true" ]]; then
    prompt_for_confirm "Proceed with these settings" || exit 0
  fi

  echo
  echo_h2 "Launch Upgrade"

  # Create namespace, install MAS Tekton definitions, configure RBAC
  pipeline_install_tasks || exit 1

  # Replace ALL environment variables in templates
  eval "echo \"$(cat $DIR/templates/pipelinerun-upgrade.yaml)\"" > $CONFIG_DIR/pipelinerun-$MAS_INSTANCE_ID-upgrade.yaml

  # Start pipeline execution
  oc -n mas-$MAS_INSTANCE_ID-pipelines create -f $CONFIG_DIR/pipelinerun-$MAS_INSTANCE_ID-upgrade.yaml &>> $LOGFILE || exit 1
  echo -e "${COLOR_GREEN}Upgrade started successfully${COLOR_RESET}"
  echo -e "\nView progress:\n  ${COLOR_CYAN}${TEXT_UNDERLINE}https://${OCP_CONSOLE_ROUTE}/pipelines/ns/mas-$MAS_INSTANCE_ID-pipelines${TEXT_RESET}${COLOR_RESET}"
  echo

}
