#!/bin/bash

function mirror_to_registry() {
  echo
  echo_h2 "1. Configure Target Mirror"
  prompt_for_input "Mirror Registry Host" REGISTRY_PUBLIC_HOST
  prompt_for_input "Mirror Registry Port" REGISTRY_PUBLIC_PORT

  echo
  echo_h2 "2. Configure Authentication"
  prompt_for_input "Mirror Registry Username" REGISTRY_USERNAME
  prompt_for_input "Mirror Registry Password" REGISTRY_PASSWORD

  echo
  echo_h2 "3. Configure Static Catalog Version"

  echo -e "${COLOR_YELLOW}MAS Version:"
  echo "  1. 8.8 (2022-07-17)"
  prompt_for_input "Select Catalog Source" MAS_CHANNEL_SELECTION "1"

  case $MAS_CHANNEL_SELECTION in
    1|8.8|8.8.x)
      MAS_CATALOG_VERSION=v8-220717
      ;;

    *)
      echo_warning "Invalid selection"
      exit 1
      ;;
  esac

  echo
  echo_h2 "4. Configure Images to Mirror"
  echo "${TEXT_DIM}"
  echo "Timing are an estimate only, and will vary based on the quality of the host network connection"
  reset_colors
  prompt_for_confirm "Mirror all images (~1 hour)" MIRROR_EVERYTHING

  if [[ "$MIRROR_EVERYTHING" == "true" ]]; then
    # MIRROR_RH_RELEASE=true
    # prompt_for_input "Red Hat Openshift Release Version (x.y.z)" OPENSHIFT_RELEASE_VERSION "4.10"

    # MIRROR_RH_OPERATORS=true
    # prompt_for_input "Red Hat Openshift Operator Catalog Version (x.y)" OPENSHIFT_OPERATORS_VERSION "4.10.18"

    MIRROR_COMMONSERVICES=true
    MIRROR_DB2=true
    MIRROR_UDS=true
    MIRROR_SLS=true
    MIRROR_TRUSTSTOREMGR=true
    MIRROR_MAS_CORE=true
    MIRROR_MONGOCE=true
  else
    # prompt_for_confirm "Red Hat OpenShift Container Platform Release (x minutes)" MIRROR_RH_RELEASE
    # if [[ "$MIRROR_RH_RELEASE" == "true" ]]; then
    #   prompt_for_input "Release Version (x.y.z)" OPENSHIFT_RELEASE_VERSION "4.10.18"
    # fi

    # prompt_for_confirm "Red Hat OpenShift Container Platform Operator Catalog (x minutes)" MIRROR_RH_OPERATORS
    # if [[ "$MIRROR_RH_OPERATORS" == "true" ]]; then
    #   prompt_for_input "Operator Catalog Version (x.y)" OPENSHIFT_OPERATORS_VERSION "4.10"
    # fi

    prompt_for_confirm "IBM Foundational Services (10 minutes)" MIRROR_COMMONSERVICES
    prompt_for_confirm "IBM Db2 Universal Operator (5 minutes)" MIRROR_DB2
    prompt_for_confirm "IBM User Data Services (5 minutes)" MIRROR_UDS
    prompt_for_confirm "IBM Suite License Service (2 minutes)" MIRROR_SLS
    prompt_for_confirm "IBM Truststore Manager (1 minute)" MIRROR_TRUSTSTOREMGR
    prompt_for_confirm "IBM Maximo Application Suite - Core (5 minutes)" MIRROR_MAS_CORE
    prompt_for_confirm "MongoDb Community Edition (x minutes)" MIRROR_MONGOCE
  fi

  echo
  echo_h2 "5. Configure Authentication for Mirroring"
  prompt_for_input "IBM Entitlement Key" IBM_ENTITLEMENT_KEY
  if [[ $MIRROR_UDS == "true" || $MIRROR_UDS == "true" ]]; then
    prompt_for_input "Red Hat Connect Username" REDHAT_CONNECT_USERNAME
    prompt_for_input "Red Hat Connect Password" REDHAT_CONNECT_PASSWORD
  fi

  export MAS_CATALOG_VERSION
  export REGISTRY_PUBLIC_HOST
  export REGISTRY_PUBLIC_PORT
  export REGISTRY_USERNAME
  export REGISTRY_PASSWORD
  export MIRROR_COMMONSERVICES
  export MIRROR_DB2
  export MIRROR_UDS
  export MIRROR_SLS
  export MIRROR_TRUSTSTOREMGR
  export MIRROR_MAS_CORE
  export MIRROR_MONGOCE
  export OPENSHIFT_RELEASE_VERSION
  export OPENSHIFT_OPERATORS_VERSION

  export IBM_ENTITLEMENT_KEY
  export REDHAT_CONNECT_USERNAME
  export REDHAT_CONNECT_PASSWORD

  echo
  prompt_for_confirm "Proceed with these settings" || exit 0

  echo
  echo_h2 "4. Run Mirror Process"
  TIMESTAMP=$(date "+%Y%m%d-%H%M%S")
  LOG_PREFIX="$DIR/mirror-$TIMESTAMP"

  echo "Mirroring Core Images ..."
  ansible-playbook ibm.mas_airgap.mirror_core | tee $LOG_PREFIX-core.log

  true
}
