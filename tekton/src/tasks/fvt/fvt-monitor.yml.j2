---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-fvt-monitor
spec:
  params:
    # Control the image pull policy for the FVT container image
    - name: image_pull_policy
      type: string
      default: IfNotPresent

    # Test Container Information
    # -------------------------------------------------------------------------
    - name: fvt_image_registry
      type: string
      description: FVT Container Image Registry (required)
    - name: fvt_image_digest
      type: string
      description: FVT Container Image Digest

    # Test Target
    # -------------------------------------------------------------------------
    - name: product_channel
      type: string
      description: "Subscription channel for the product (todo: have the test code look this up instead)"
      default: ""
    - name: mas_instance_id
      type: string
      description: Instance ID of the target test environment
    - name: mas_workspace_id
      type: string
      description: Workspace ID in MAS to use for running the tests

    # Test Framework Information
    # -------------------------------------------------------------------------
    - name: fvt_enable_debug
      type: string
      description: Turn on debug logging (verbose mode)
      default: "true"
    - name: fvt_test_suite
      type: string
      description: If the FVT container image contains multiple suites, use this to control the suite that will be executed
      default: ""
    - name: ctf_is_local
      type: string
      description: Boolean value to check if tests are runninng locally or on fvt
      default: "false"

  steps:
    - name: fvt-monitor
      image: '$(params.fvt_image_registry)/ai-solutions/common-test-framework@$(params.fvt_image_digest)'
      imagePullPolicy: $(params.image_pull_policy)
      timeout: 6h # Ensure bad FVTs don't run forever .. want this to be smaller, but urgh, teams have already created huge suites that run for hours instead of multiple smaller suites
      onError: continue # Ensure bad FVTs don't break the pipeline
      resources: {}
      workingDir: /opt/ibm/test/src
      env:
        # What are we testing?
        - name: PRODUCT_ID
          value: ibm-mas-monitor
        - name: PRODUCT_CHANNEL
          value: $(params.product_channel)
        - name: NAMESPACE
          value: "mas-$(params.mas_instance_id)-core"
        - name: INSTANCE_ID
          value: "$(params.mas_instance_id)"
        - name: WORKSPACE_ID
          value: "$(params.mas_workspace_id)"

       # Enable results to be saved
        - name: DEVOPS_MONGO_URI
          valueFrom:
            secretKeyRef:
              name: mas-devops
              key: DEVOPS_MONGO_URI
              optional: true
        - name: BUILD_NUM
          valueFrom:
            secretKeyRef:
              name: mas-devops
              key: DEVOPS_BUILD_NUMBER
              optional: true

        # Test Data
        - name: FVT_TEST_SUITE
          value: $(params.fvt_test_suite)
        - name: FVT_ENABLE_DEBUG
          value: "$(params.fvt_enable_debug)"
        - name: CTF_IS_LOCAL
          value: $(params.ctf_is_local)
      volumeMounts:
        - mountPath: /dev/shm
          name: dshm
      securityContext:
        privileged: true
        runAsUser: 0
  volumes:
    - name: dshm
      emptyDir:
        medium: Memory

  workspaces:
    - name: configs
