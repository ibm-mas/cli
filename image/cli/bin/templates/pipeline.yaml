---
# MAS One-Click Installation Pipeline
# -------------------
# By default only MAS core will be installed, with no applications installed.
# - To add applications to the pipeline, set the mas_app_channel_x parameter for one or more applications
# - The pipeline will automatically deploy the necessary additional dependencies for any applications enabled this way
#
# This pipeline will deploy a shared instance of Db2 and Kafka suitable for all applications
# - Db2 will only be set up if IoT or Manage applications are set to be installed
# - Db2 will be configured with the default recommended settings as defined in the ansible role
# - Kafka will only be set up if IoT application is set to be installed
#
# This is a **sample** pipeline, you can use this as a template for your own pipelines, we aim to strike a good
# balance between power and complexity in this configuration, if you have any questions about how the pipeline
# works, or how to make adjustments to fir your specific use case, please raise an issue in GitHub:
#   https://github.com/ibm-mas/ansible-devops/issues
#
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mas-devops-install-pipeline
  namespace: mas-{{mas_instance_id}}-pipelines
spec:
  workspaces:
    # The generated configuration files
    - name: shared-configs
    # Any pre-generated configs that will be copied into the shared-configs workspace during suite-install
    - name: shared-additional-configs
    # The SLS entitlement key file that will be installed during install-sls.
    - name: shared-entitlement
    # Shared storage to hold mustgather output for tasks
    - name: shared-mustgather

  params:
    # Development Build Support
    - name: artifactory_username
      default: ""
      type: string
      description: Required to install development MAS catalogs
    - name: artifactory_apikey
      default: ""
      type: string
      description: Required to install development MAS catalogs

    - name: ibm_entitlement_key        # Required
      type: string
      description: IBM Entitlement Key

    # Dependencies - CP4D
    # This will be removed once we wire up CP4D installation to the applications
    - name: temp_deploy_cp4d
      type: string
      default: "skip"

    # Dependencies - SLS
    - name: sls_license_id             # Required
      type: string
    - name: sls_license_file           # Required
      type: string
    - name: sls_mongodb_cfg_file
      type: string
      default: "/workspace/configs/mongo-mongoce.yml"
    - name: sls_catalog_source         # Required
      type: string
    - name: sls_channel                # Required
      type: string 
    - name: sls_icr_cp
      type: string
      default: ""
    - name: sls_icr_cpopen
      type: string
      default: ""
    - name: sls_entitlement_username
      type: string
      default: ""
    - name: sls_entitlement_key
      type: string
      default: ""
      description: Override IBM Entitlement key for SLS installation

    # Dependencies - Mongo
    - name: mongodb_storage_class
      type: string
      default: ""

    # Dependencies - Kafka
    - name: kafka_namespace
      type: string
      default: ""
    - name: kafka_cluster_name
      type: string
      default: ""
    - name: kafka_cluster_size
      type: string
      default: ""
    - name: kafka_user_name
      type: string
      default: ""

    # Dependencies - CP4D
    - name: cpd_operators_namespace
      type: string
      default: ""
    - name: cpd_instance_namespace
      type: string
      default: ""
    - name: cpd_primary_storage_class
      type: string
      default: ""
    - name: cpd_metadata_storage_class
      type: string
      default: ""

    # Dependencies - CP4D Services
    - name: cpd_product_version        # Required
      type: string
    - name: cpd_wd_storage_class
      type: string
      default: ""
    - name: cpd_wml_storage_class
      type: string
      default: ""
    - name: cpd_spark_storage_class
      type: string
      default: ""
    - name: cpd_wsl_storage_class
      type: string
      default: ""

    # Dependencies - UDS
    - name: uds_contact_email          # Required
      type: string
    - name: uds_contact_firstname      # Required
      type: string
    - name: uds_contact_lastname       # Required
      type: string
    - name: uds_event_scheduler_frequency
      type: string
      default: ""
    - name: mas_segment_key
      type: string
      default: ""

    # MAS Configuration
    - name: mas_instance_id            # Required
      type: string
    - name: mas_channel                # Required
      type: string
    - name: mas_catalog_source
      type: string
      default: ibm-operator-catalog
    - name: mas_icr_cp
      type: string
      default: ""
    - name: mas_icr_cpopen
      type: string
      default: ""
    - name: mas_entitlement_username
      type: string
      default: ""
    - name: mas_annotations
      type: string
      default: ""
    - name: mas_entitlement_key
      type: string
      default: ""
      description: Override IBM Entitlement key for MAS installation

    # MAS Configuration - Workspace
    - name: mas_workspace_id
      type: string
      description: Workspace ID used to configure all applications
      default: masdev
    - name: mas_workspace_name
      type: string
      description: Workspace Name used when setting up the workspace
      default: MAS Development

    # MAS Configuration - Manage Application
    - name: mas_appws_components
      type: string
      description: Manage components to configure in the workspace
      default: "base=latest,health=latest"

    # MAS Configuration - Optimizer Application
    - name: mas_app_plan_optimizer
      type: string
      description: Configure install plan of Optimizer application (full or limited)
      default: full

    # MAS Configuration - Application Channels
    - name: mas_app_channel_iot
      type: string
      description: Subscription channel for IoT application operator
      default: ""
    - name: mas_app_channel_manage
      type: string
      description: Subscription channel for Manage application operator
      default: ""
    - name: mas_app_channel_monitor
      type: string
      description: Subscription channel for Monitor application operator
      default: ""
    - name: mas_app_channel_optimizer
      type: string
      description: Subscription channel for Optimizer application operator
      default: ""
    - name: mas_app_channel_predict
      type: string
      description: Subscription channel for Predict application operator
      default: ""
    - name: mas_app_channel_safety
      type: string
      description: Subscription channel for Safety application operator
      default: ""

    # MAS Configuration - Application Sources
    - name: mas_app_source_iot
      type: string
      description: Subscription source for IoT application operator
      default: ibm-operator-catalog
    - name: mas_app_source_manage
      type: string
      description: Subscription source for Manage application operator
      default: ibm-operator-catalog
    - name: mas_app_source_monitor
      type: string
      description: Subscription source for Monitor application operator
      default: ibm-operator-catalog
    - name: mas_app_source_optimizer
      type: string
      description: Subscription source for Optimizer application operator
      default: ibm-operator-catalog
    - name: mas_app_source_predict
      type: string
      description: Subscription source for Predict application operator
      default: ibm-operator-catalog
    - name: mas_app_source_safety
      type: string
      description: Subscription source for Safety application operator
      default: ibm-operator-catalog

    # Persist Results (Optional)
    - name: devops_mongo_uri
      type: string
      default: ""
    - name: devops_build_number
      type: string
      default: ""

  tasks:
    # 0. Cloud Pak for Data
    # -------------------------------------------------------------------------
    # Note: no apps in the pipeline are wired up to use these yet, this is
    # experimental ... turn this part of the pipeline run/skip using the
    # temp_deploy_cp4d parameter (which defaults to "off")
    - name: cp4d
      params:
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-cp4d
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      taskRef:
        kind: Task
        name: mas-devops-cp4d
      runAfter:
        - common-services
      # Toggle this condition run/skip to deploy CP4D for now
      when:
        - input: "$(params.temp_deploy_cp4d)"
          operator: in
          values: ["run"]

    - name: watson-studio
      params:
        - name: devops_suite_name
          value: setup-cp4d-wsl
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: cpd_product_version
          value: "$(params.cpd_product_version)"
        - name: cpd_service_name
          value: wsl
        - name: cpd_service_storage_class
          value: "$(params.cpd_wsl_storage_class)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
      taskRef:
        kind: Task
        name: mas-devops-cp4d-service
      runAfter:
        - cp4d
      # Toggle this condition run/skip to deploy CP4D for now
      when:
        - input: "$(params.temp_deploy_cp4d)"
          operator: in
          values: ["run"]
      workspaces:
        - name: configs
          workspace: shared-configs

    - name: watson-machine-learning
      params:
        - name: devops_suite_name
          value: setup-cp4d-wml
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: cpd_product_version
          value: "$(params.cpd_product_version)"
        - name: cpd_service_name
          value: wml
        - name: cpd_service_storage_class
          value: "$(params.cpd_wml_storage_class)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
      taskRef:
        kind: Task
        name: mas-devops-cp4d-service
      runAfter:
        - cp4d
      # Toggle this condition run/skip to deploy CP4D for now
      when:
        - input: "$(params.temp_deploy_cp4d)"
          operator: in
          values: ["run"]
      workspaces:
        - name: configs
          workspace: shared-configs

    - name: analytics-service
      params:
        - name: devops_suite_name
          value: setup-cp4d-spark
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: cpd_product_version
          value: "$(params.cpd_product_version)"
        - name: cpd_service_name
          value: spark
        - name: cpd_service_storage_class
          value: "$(params.cpd_spark_storage_class)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
      taskRef:
        kind: Task
        name: mas-devops-cp4d-service
      runAfter:
        - cp4d
      # Toggle this condition run/skip to deploy CP4D for now
      when:
        - input: "$(params.temp_deploy_cp4d)"
          operator: in
          values: ["run"]
      workspaces:
        - name: configs
          workspace: shared-configs

    - name: discovery
      params:
        - name: devops_suite_name
          value: setup-cp4d-discovery
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: cpd_product_version
          value: "$(params.cpd_product_version)"
        - name: cpd_service_name
          value: wd
        - name: cpd_service_storage_class
          value: "$(params.cpd_wd_storage_class)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
      taskRef:
        kind: Task
        name: mas-devops-cp4d-service
      runAfter:
        - cp4d
      # Toggle this condition run/skip to deploy CP4D for now
      when:
        - input: "$(params.temp_deploy_cp4d)"
          operator: in
          values: ["run"]
      workspaces:
        - name: configs
          workspace: shared-configs


    # 1. Setup the cluster-wide dependencies & configure cluster monitoring
    # -------------------------------------------------------------------------
    - name: ibm-catalogs
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-ibm-catalogs
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
      taskRef:
        kind: Task
        name: mas-devops-ibm-catalogs

    - name: common-services
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-common-services
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      taskRef:
        kind: Task
        name: mas-devops-common-services
      runAfter:
        - ibm-catalogs

    - name: cert-manager
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-cert-manager
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_channel
          value: $(params.mas_channel)
      taskRef:
        kind: Task
        name: mas-devops-cert-manager
      runAfter:
        - common-services

    - name: sbo
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-sbo
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_channel
          value: $(params.mas_channel)
      taskRef:
        kind: Task
        name: mas-devops-sbo

    - name: cluster-monitoring
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-cluster-monitoring
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      taskRef:
        kind: Task
        name: mas-devops-cluster-monitoring


    # 2. Install MongoDb
    # -------------------------------------------------------------------------
    - name: mongodb
      params:
        - name: devops_suite_name
          value: dependencies-mongodb
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-mongodb
      runAfter:
        - cert-manager
      workspaces:
        - name: configs
          workspace: shared-configs


    # 3. Install AMQStream (Kafka)
    # -------------------------------------------------------------------------
    - name: kafka
      params:
        - name: devops_suite_name
          value: dependencies-kafka
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: kafka_namespace
          value: "$(params.kafka_namespace)"
        - name: kafka_cluster_name
          value: "$(params.kafka_cluster_name)"
        - name: kafka_cluster_size
          value: "$(params.kafka_cluster_size)"
        - name: kafka_user_name
          value: "$(params.kafka_user_name)"
      # Only install Kafka if the IoT application is being installed
      when:
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]
      taskRef:
        kind: Task
        name: mas-devops-kafka
      workspaces:
        - name: configs
          workspace: shared-configs


    # 4. Install Db2
    # -------------------------------------------------------------------------
    - name: db2
      params:
        - name: devops_suite_name
          value: dependencies-db2
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: db2_instance_name
          value: db2u-shared
        - name: mas_instance_id
          value: $(params.mas_instance_id)
      # Only install Db2 if IoT or Manage are being installed
      when:
        # See: https://github.com/tektoncd/pipeline/issues/3591#issuecomment-1073901961
        - input: "$(params.mas_app_channel_iot)$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      taskRef:
        name: mas-devops-db2
        kind: Task
      runAfter:
        - cert-manager
      workspaces:
        - name: configs
          workspace: shared-configs


    # 5. Install IBM SLS
    # -------------------------------------------------------------------------
    - name: sls
      params:
        - name: devops_suite_name
          value: dependencies-sls
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: sls_mongodb_cfg_file
          value: $(params.sls_mongodb_cfg_file)
        - name: sls_catalog_source
          value: $(params.sls_catalog_source)
        - name: sls_channel
          value: $(params.sls_channel)
        - name: sls_license_id
          value: $(params.sls_license_id)
        - name: sls_license_file
          value: $(params.sls_license_file)
        - name: sls_icr_cp
          value: $(params.sls_icr_cp)
        - name: sls_icr_cpopen
          value: $(params.sls_icr_cpopen)
        - name: sls_entitlement_username
          value: $(params.sls_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: sls_entitlement_key
          value: $(params.sls_entitlement_key)
      taskRef:
        kind: Task
        name: mas-devops-sls
      runAfter:
        - mongodb
      workspaces:
        - name: configs
          workspace: shared-configs
        - name: entitlement
          workspace: shared-entitlement


    # 6. Install UDS
    # -------------------------------------------------------------------------
    - name: uds
      params:
        - name: devops_suite_name
          value: dependencies-uds
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_segment_key
          value: $(params.mas_segment_key)
        - name: uds_contact_email
          value: "$(params.uds_contact_email)"
        - name: uds_contact_firstname
          value: "$(params.uds_contact_firstname)"
        - name: uds_contact_lastname
          value: "$(params.uds_contact_lastname)"
        - name: uds_event_scheduler_frequency
          value: "$(params.uds_event_scheduler_frequency)"
      taskRef:
        kind: Task
        name: mas-devops-uds
      runAfter:
        - common-services
      workspaces:
        - name: configs
          workspace: shared-configs


    # 7. Configure Workspace
    # -------------------------------------------------------------------------
    - name: gencfg-workspace
      params:
        - name: devops_suite_name
          value: gencfg-workspace
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
        - name: mas_workspace_name
          value: $(params.mas_workspace_name)
      taskRef:
        kind: Task
        name: mas-devops-gencfg-workspace
      workspaces:
        - name: configs
          workspace: shared-configs


    # 8. Install & configure IBM MAS
    # -------------------------------------------------------------------------
    # 8.1 DNS Setup (only support IBMCloud CIS today)
    - name: suite-dns
      params:
        - name: devops_suite_name
          value: suite-dns
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-dns
      runAfter:
        - cert-manager

    # 8.2 Suite Installation
    - name: suite-install
      params:
        - name: devops_suite_name
          value: suite-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_channel
          value: $(params.mas_channel)
        - name: mas_catalog_source
          value: $(params.mas_catalog_source)
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_icr_cpopen
          value: $(params.mas_icr_cpopen)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
        - name: mas_annotations
          value: $(params.mas_annotations)

      taskRef:
        kind: Task
        name: mas-devops-suite-install
      runAfter:
        - sbo
        - sls
        - uds
        - gencfg-workspace
        - suite-dns
      workspaces:
        # This is the stage at which we copy across any user-provided additional configs
        - name: configs
          workspace: shared-configs
        - name: additional-configs
          workspace: shared-additional-configs

    # 8.3 Suite Configuration
    - name: suite-config
      params:
        - name: devops_suite_name
          value: suite-config
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      runAfter:
        - suite-install
      workspaces:
        - name: configs
          workspace: shared-configs

    # 8.4 Suite Verification
    - name: suite-verify
      params:
        - name: devops_suite_name
          value: suite-verify
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-verify
      runAfter:
        - suite-config


    # 9. Configure Db2 in MAS
    # -------------------------------------------------------------------------
    - name: suite-config-db2
      params:
        - name: devops_suite_name
          value: suite-config-db2
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      # Only load the JDBCCfg if IoT or Manage are being installed
      # See: https://github.com/tektoncd/pipeline/issues/3591#issuecomment-1073901961
      when:
        - input: "$(params.mas_app_channel_iot)$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify
        - db2
      workspaces:
        - name: configs
          workspace: shared-configs


    # 10. Configure Kafka in MAS
    # -------------------------------------------------------------------------
    - name: suite-config-kafka
      params:
        - name: devops_suite_name
          value: cfg-suite-kafka
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      # Only load the KafkaCfg if IoT is being installed
      when:
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify
        - kafka
      workspaces:
        - name: configs
          workspace: shared-configs


    # 11. Install IBM MAS IoT application
    # -------------------------------------------------------------------------
    # 11.1 Install IoT
    - name: app-install-iot
      params:
        - name: devops_suite_name
          value: app-iot-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: iot
        - name: mas_app_channel
          value: "$(params.mas_app_channel_iot)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_iot)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)

      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install IoT if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]
      runAfter:
        - suite-config-db2
        - suite-config-kafka

    # 11.2 Configure IoT workspace
    - name: app-cfg-iot
      params:
        - name: devops_suite_name
          value: app-iot-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: iot
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only configure a workspace for IoT if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-iot


    # 12. Install IBM MAS Monitor application
    # -------------------------------------------------------------------------
    # 12.1 Install Monitor
    - name: app-install-monitor
      params:
        - name: devops_suite_name
          value: app-monitor-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: monitor
        - name: mas_app_channel
          value: "$(params.mas_app_channel_monitor)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_monitor)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)

      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Monitor if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_monitor)"
          operator: notin
          values: [""]
      runAfter:
        - app-cfg-iot

    # 12.2 Configure Monitor workspace
    - name: app-cfg-monitor
      params:
        - name: devops_suite_name
          value: app-monitor-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: monitor
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only configure a workspace for Monitor if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_monitor)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-monitor


    # 13. Install IBM MAS Safety application
    # -------------------------------------------------------------------------
    # 13.1 Install Safety
    - name: app-install-safety
      params:
        - name: devops_suite_name
          value: app-safety-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: safety
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_safety)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_safety)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Safety if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_safety)"
          operator: notin
          values: [""]
      runAfter:
        - app-cfg-iot

    # 13.2 Configure Safety workspace
    - name: app-cfg-safety
      params:
        - name: devops_suite_name
          value: app-safety-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: safety
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Safety if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_safety)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-safety


    # 14. Install IBM MAS Manage application
    # -------------------------------------------------------------------------
    # 14.1. Prepare database to Maxinst
    - name: suite-db2-setup-for-manage
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: suite-db2-setup-for-manage
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: db2_instance_name
          value: "db2u-shared"
      # Only perform the hack if Manage is being installed
      when:
        - input: "$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      taskRef:
        name: mas-devops-suite-db2-setup-for-manage
        kind: Task
      runAfter:
        - suite-config-db2

    # 14.2 Manage Install
    - name: app-install-manage
      params:
        - name: devops_suite_name
          value: app-manage-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: manage
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_manage)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_manage)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Manage if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      runAfter:
        - suite-db2-setup-for-manage

    # 14.3 Configure Manage workspace
    - name: app-cfg-manage
      params:
        - name: devops_suite_name
          value: app-manage-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: manage
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
        - name: mas_appws_components
          value: "$(params.mas_appws_components)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Manage if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-manage


    # 15. Predict
    # -------------------------------------------------------------------------
    # 15.1 Predict Install
    - name: app-install-predict
      params:
        - name: devops_suite_name
          value: app-predict-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: predict
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_predict)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_predict)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Predict if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_predict)"
          operator: notin
          values: [""]
      runAfter:
        - app-cfg-manage
        - app-cfg-monitor

    # 15.2 Configure Predict workspace
    - name: app-cfg-predict
      params:
        - name: devops_suite_name
          value: app-predict-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: predict
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Predict if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_predict)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-predict


    # 16. Optimizer
    # -------------------------------------------------------------------------
    # 16.1 Optimizer Install
    - name: app-install-optimizer
      params:
        - name: devops_suite_name
          value: app-optimizer-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: optimizer
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_optimizer)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_optimizer)"
        - name: mas_app_plan
          value: "$(params.mas_app_plan_optimizer)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Optimizer if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_optimizer)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify

    # 16.2 Configure Optimizer workspace
    - name: app-cfg-optimizer
      params:
        - name: devops_suite_name
          value: app-optimizer-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: optimizer
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"

      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Optimizer if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_optimizer)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-optimizer


  # 17. Mustgather executed in finally block. Use suite_mustgather_download
  # playbook to retrieve the output on your local machine
  # -------------------------------------------------------------------------
  finally:
    - name: suite-mustgather
      params:
        - name: base_output_dir
          value: "/workspace/mustgather/$(context.pipelineRun.name)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-mustgather
      workspaces:
        - name: mustgather
          workspace: shared-mustgather
