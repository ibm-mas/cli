
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/appconnect.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-appconnect
spec:
  params:
    - name: mas_instance_id
      type: string
      description: Instance ID
      default: ""

    # Entitlement
    - name: appconnect_entitlement_username
      type: string
      default: ""
      description: "AppConnect Entitlement Username"
    - name: ibm_entitlement_key
      type: string
      default: ""
      description: "IBM Entitlement Key"
    - name: appconnect_entitlement_key
      type: string
      default: ""
      description: "Optional AppConnect-specific override for the IBM entitlement key"

    # Storage Clas
    - name: appconnect_storage_class
      type: string
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

      # Entitlement
      - name: APPCONNECT_ENTITLEMENT_USERNAME
        value: $(params.appconnect_entitlement_username)
      - name: IBM_ENTITLEMENT_KEY
        value: $(params.ibm_entitlement_key)
      - name: APPCONNECT_ENTITLEMENT_KEY
        value: $(params.appconnect_entitlement_key)

      # Storage Class
      - name: APPCONNECT_STORAGE_CLASS
        value: $(params.appconnect_storage_class)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: appconnect
      command:
        - /opt/app-root/src/run-role.sh
        - appconnect
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/cert-manager.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-cert-manager
spec:
  params:
    - name: mas_channel
      type: string
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: mas_instance_id
      type: string
      description: Optional MAS instance Id, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CHANNEL
        value: $(params.mas_channel)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: cert-manager
      command:
        - /opt/app-root/src/run-role.sh
        - cert_manager
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/cluster-monitoring.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-cluster-monitoring
spec:
  params:
    - name: prometheus_retention_period
      type: string
      default: ""
    - name: prometheus_storage_class
      type: string
      default: ""
    - name: prometheus_storage_size
      type: string
      default: ""
    - name: prometheus_alertmgr_storage_class
      type: string
      default: ""
    - name: prometheus_alertmgr_storage_size
      type: string
      default: ""
    - name: prometheus_userworkload_retention_period
      type: string
      default: ""
    - name: prometheus_userworkload_storage_class
      type: string
      default: ""
    - name: prometheus_userworkload_storage_size
      type: string
      default: ""
    - name: grafana_instance_storage_class
      type: string
      default: ""
    - name: grafana_instance_storage_size
      type: string
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: mas_instance_id
      type: string
      description: Optional MAS instance Id, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: PROMETHEUS_RETENTION_PERIOD
        value: $(params.prometheus_retention_period)
      - name: PROMETHEUS_STORAGE_CLASS
        value: $(params.prometheus_storage_class)
      - name: PROMETHEUS_STORAGE_SIZE
        value: $(params.prometheus_storage_size)
      - name: PROMETHEUS_ALERTMGR_STORAGE_CLASS
        value: $(params.prometheus_alertmgr_storage_class)
      - name: PROMETHEUS_ALERTMGR_STORAGE_SIZE
        value: $(params.prometheus_alertmgr_storage_size)
      - name: PROMETHEUS_USERWORKLOAD_RETENTION_PERIOD
        value: $(params.prometheus_userworkload_retention_period)
      - name: PROMETHEUS_USERWORKLOAD_STORAGE_CLASS
        value: $(params.prometheus_userworkload_storage_class)
      - name: PROMETHEUS_USERWORKLOAD_STORAGE_SIZE
        value: $(params.prometheus_userworkload_storage_size)
      - name: GRAFANA_INSTANCE_STORAGE_CLASS
        value: $(params.grafana_instance_storage_class)
      - name: GRAFANA_INSTANCE_STORAGE_SIZE
        value: $(params.grafana_instance_storage_size)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: cluster-monitoring
      command:
        - /opt/app-root/src/run-role.sh
        - cluster_monitoring
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/common-services.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-common-services
spec:
  params:
    - name: common_services_catalog_source
      type: string
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: mas_instance_id
      type: string
      description: Optional MAS instance Id, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: COMMON_SERVICES_CATALOG_SOURCE
        value: $(params.common_services_catalog_source)
      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: common-services
      command:
        - /opt/app-root/src/run-role.sh
        - common_services
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/cos.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-cos
spec:
  params:
    - name: mas_instance_id
      type: string

    # COS Details
    - name: cos_type
      type: string
      description: COS Provider (ibm and ocs are supported)
      default: "ibm"
    - name: ibmcloud_apikey
      type: string
      description: IBM Cloud API Key
    - name: ibmcloud_resourcegroup
      type: string
      description: Name of an existing Resource Group in IBM Cloud account
      default: "Default"

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

      # COS Details
      - name: COS_TYPE
        value: $(params.cos_type)
      - name: IBMCLOUD_APIKEY
        value: $(params.ibmcloud_apikey)
      - name: IBMCLOUD_RESOURCEGROUP
        value: $(params.ibmcloud_resourcegroup)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: cos
      command:
        - /opt/app-root/src/run-role.sh
        - cos
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/cp4d_service.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-cp4d-service
spec:
  params:
    # Namespace configuration (Optional, defaults built into Ansible role)
    - name: cpd_operator_namespace
      type: string
      default: ""
    - name: cpd_instance_namespace
      type: string
      default: ""

    # CPD Service Name (Required)
    - name: cpd_service_name
      type: string

    # CPD product Version (Required)
    - name: cpd_product_version
      type: string

    # CPD Storage class (Optional, defaults built into Ansible role)
    - name: cpd_service_storage_class
      type: string
      default: ""

    # CPD Watson Studio Analytics Project (Optional)
    - name: cpd_wsl_project_name
      type: string
      default: ""

    - name: mas_instance_id
      type: string
      description: Instance ID
      default: ""
    - name: mas_workspace_id
      type: string
      description: Workspace ID
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: MAS_WORKSPACE_ID
        value: $(params.mas_workspace_id)

      - name: CPD_OPERATOR_NAMESPACE
        value: $(params.cpd_operator_namespace)
      - name: CPD_INSTANCE_NAMESPACE
        value: $(params.cpd_instance_namespace)

      - name: CPD_PRODUCT_VERSION
        value: $(params.cpd_product_version)
      - name: CPD_SERVICE_NAME
        value: $(params.cpd_service_name)
      - name: CPD_SERVICE_STORAGE_CLASS
        value: $(params.cpd_service_storage_class)

      - name: CPD_WSL_PROJECT_NAME
        value: $(params.cpd_wsl_project_name)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: cp4d-service
      command:
        - /opt/app-root/src/run-role.sh
        - cp4d_service
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/cp4d.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-cp4d
spec:
  params:
    # Namespace configuration (Optional, defaults built into Ansible role)
    - name: cpd_operator_namespace
      type: string
      default: ""
    - name: cpd_instance_namespace
      type: string
      default: ""

    # Storage classes (Optional, defaults built into Ansible role)
    - name: cpd_primary_storage_class
      type: string
      default: ""
    - name: cpd_metadata_storage_class
      type: string
      default: ""

    # Entitlement
    - name: ibm_entitlement_key
      type: string
    - name: cpd_entitlement_key
      type: string
      default: ""
      description: "Optional CP4D-specific override for the IBM entitlement key"

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: mas_instance_id
      type: string
      description: Optional MAS instance Id, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: CPD_OPERATOR_NAMESPACE
        value: $(params.cpd_operator_namespace)
      - name: CPD_INSTANCE_NAMESPACE
        value: $(params.cpd_instance_namespace)

      - name: CPD_PRIMARY_STORAGE_CLASS
        value: $(params.cpd_primary_storage_class)
      - name: CPD_METADATA_STORAGE_CLASS
        value: $(params.cpd_metadata_storage_class)

      # Entitlement
      - name: IBM_ENTITLEMENT_KEY
        value: $(params.ibm_entitlement_key)
      - name: CPD_ENTITLEMENT_KEY
        value: $(params.cpd_entitlement_key)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: cp4d
      command:
        - /opt/app-root/src/run-role.sh
        - cp4d
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/db2.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-db2
spec:
  params:
    # Configure DB2W
    - name: db2_instance_name
      type: string
      default: "" # By default, no config will be generated
    - name: db2_version
      type: string
      default: "" # Use the default built into the ansible role
    - name: db2_table_org
      type: string
      default: "" # Use the default built into the ansible role

    # Configure JDBCCfg
    - name: mas_config_scope
      type: string
      default: "" # By default, no config will be generated
    - name: mas_instance_id
      type: string
      description: Instance ID
      default: "" # By default, no config will be generated
    - name: mas_workspace_id
      type: string
      default: "" # Only required if config_scope = ws or wsapp
    - name: mas_application_id
      type: string
      default: "" # Only required if config_scope = app or wsapp

    # Configure storage classes
    - name: db2_meta_storage_class
      type: string
      default: ""
    - name: db2_data_storage_class
      type: string
      default: ""
    - name: db2_backup_storage_class
      type: string
      default: ""
    - name: db2_logs_storage_class
      type: string
      default: ""
    - name: db2_temp_storage_class
      type: string
      default: ""

    # Configure storage sizes
    - name: db2_meta_storage_size
      type: string
      default: ""
    - name: db2_data_storage_size
      type: string
      default: ""
    - name: db2_backup_storage_size
      type: string
      default: ""
    - name: db2_logs_storage_size
      type: string
      default: ""
    - name: db2_temp_storage_size
      type: string
      default: ""

    # Optionally set up a db2 LDAP user
    - name: db2_ldap_username
      type: string
      default: ""
    - name: db2_ldap_password
      type: string
      default: ""

    # Entitlement
    - name: ibm_entitlement_key
      type: string
    - name: db2_entitlement_key
      type: string
      default: ""
      description: "Optional Db2-specific override for the IBM entitlement key"

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      # Configure JdbcCfg
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_CONFIG_SCOPE
        value: $(params.mas_config_scope)
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: MAS_APP_ID
        value: $(params.mas_application_id)
      - name: MAS_WORKSPACE_ID
        value: $(params.mas_workspace_id)

      # Configure Db2uCluster
      - name: DB2_INSTANCE_NAME
        value: $(params.db2_instance_name)
      - name: DB2_VERSION
        value: $(params.db2_version)
      - name: DB2_TABLE_ORG
        value: $(params.db2_table_org)

      # Configure storage classes
      - name: DB2_META_STORAGE_CLASS
        value: $(params.db2_meta_storage_class)
      - name: DB2_DATA_STORAGE_CLASS
        value: $(params.db2_data_storage_class)
      - name: DB2_BACKUP_STORAGE_CLASS
        value: $(params.db2_backup_storage_class)
      - name: DB2_LOGS_STORAGE_CLASS
        value: $(params.db2_logs_storage_class)
      - name: DB2_TEMP_STORAGE_CLASS
        value: $(params.db2_temp_storage_class)

      # Configure storage sizes
      - name: DB2_META_STORAGE_SIZE
        value: $(params.db2_meta_storage_size)
      - name: DB2_DATA_STORAGE_SIZE
        value: $(params.db2_data_storage_size)
      - name: DB2_BACKUP_STORAGE_SIZE
        value: $(params.db2_backup_storage_size)
      - name: DB2_LOGS_STORAGE_SIZE
        value: $(params.db2_logs_storage_size)
      - name: DB2_TEMP_STORAGE_SIZE
        value: $(params.db2_temp_storage_size)

    # Optionally set up a db2 LDAP user
      - name: DB2_LDAP_USERNAME
        value: $(params.db2_ldap_username)
      - name: DB2_LDAP_PASSWORD
        value: $(params.db2_ldap_password)

      # Entitlement
      - name: IBM_ENTITLEMENT_KEY
        value: $(params.ibm_entitlement_key)
      - name: DB2_ENTITLEMENT_KEY
        value: $(params.db2_entitlement_key)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: db2
      command:
        - /opt/app-root/src/run-role.sh
        - db2
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/gencfg-workspace.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-gencfg-workspace
spec:
  params:
    - name: mas_instance_id
      type: string
      description: Instance ID
    - name: mas_workspace_id
      type: string
      description: Workspace ID
    - name: mas_workspace_name
      type: string
      description: Workspace Name

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: MAS_WORKSPACE_ID
        value: $(params.mas_workspace_id)
      - name: MAS_WORKSPACE_NAME
        value: $(params.mas_workspace_name)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: gencfg-workspace
      command:
        - /opt/app-root/src/run-role.sh
        - gencfg_workspace
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/ibm-catalogs.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-ibm-catalogs
spec:
  params:
    - name: artifactory_username
      default: ''
      type: string
      description: Required to install development MAS catalogs
    - name: artifactory_apikey
      default: ''
      type: string
      description: Required to install development MAS catalogs
    - name: mas_catalog_version
      type: string
      description: Optional version of the IBM Maximo Operator Catalog to install
      default: "v8"

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: mas_instance_id
      type: string
      description: Optional MAS instance Id, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: ARTIFACTORY_USERNAME
        value: $(params.artifactory_username)
      - name: ARTIFACTORY_APIKEY
        value: $(params.artifactory_apikey)

      - name: MAS_CATALOG_VERSION
        value: $(params.mas_catalog_version)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: ibm-catalogs
      command:
        - /opt/app-root/src/run-role.sh
        - ibm_catalogs
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/kafka.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-kafka
spec:
  params:
    - name: mas_instance_id
      type: string
      description: Instance ID
      default: "" # By default, no config will be generated

    - name: kafka_namespace
      type: string
      default: "amq-streams"
    - name: kafka_cluster_name
      type: string
      default: "maskafka"
    - name: kafka_cluster_size
      type: string
      default: "small"
    - name: kafka_user_name
      type: string
      default: "masuser"
    - name: kafka_storage_class
      type: string
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

      - name: KAFKA_NAMESPACE
        value: $(params.kafka_namespace)
      - name: KAFKA_CLUSTER_NAME
        value: $(params.kafka_cluster_name)
      - name: KAFKA_CLUSTER_SIZE
        value: $(params.kafka_cluster_size)
      - name: KAFKA_USER_NAME
        value: $(params.kafka_user_name)
      - name: KAFKA_STORAGE_CLASS
        value: $(params.kafka_storage_class)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: kafka
      command:
        - /opt/app-root/src/run-role.sh
        - kafka
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/mongodb.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-mongodb
spec:
  params:
    - name: mas_instance_id
      type: string
      description: Instance ID
      default: "" # By default, no config will be generated

    # Storage Classs
    - name: mongodb_storage_class
      type: string
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

      # Storage Classs
      - name: MONGODB_STORAGE_CLASS
        value: $(params.mongodb_storage_class)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: mongodb
      command:
        - /opt/app-root/src/run-role.sh
        - mongodb
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/nvidia-gpu.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-nvidia-gpu
spec:
  params:
    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: mas_instance_id
      type: string
      description: Optional MAS instance Id, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: nvidi-gpu
      command:
        - /opt/app-root/src/run-role.sh
        - nvidia_gpu
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/sbo.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-sbo
spec:
  params:
    - name: mas_channel
      type: string

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: mas_instance_id
      type: string
      description: Optional MAS instance Id, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CHANNEL
        value: $(params.mas_channel)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: sbo
      command:
        - /opt/app-root/src/run-role.sh
        - sbo
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/sls.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-sls
spec:
  params:
    - name: mas_instance_id
      type: string
      description: Instance ID
      default: "" # By default, no config will be generated

    - name: sls_license_id
      type: string
    - name: sls_license_file
      type: string
    - name: sls_mongodb_cfg_file
      type: string
    - name: sls_catalog_source
      type: string
      default: ""
    - name: sls_channel
      type: string
      default: ""
    - name: sls_icr_cp
      type: string
      default: ""
    - name: sls_icr_cpopen
      type: string
      default: ""

    # Entitlement
    - name: sls_entitlement_username
      type: string
      default: ""
    - name: ibm_entitlement_key
      type: string
    - name: sls_entitlement_key
      type: string
      default: ""
      description: "Optional SLS-specific override for the IBM entitlement key"

    - name: artifactory_username
      default: ''
      type: string
      description: Required to use development MAS builds
    - name: artifactory_apikey
      default: ''
      type: string
      description: Required to use development MAS builds

    - name: artifactory_username
      default: ''
      type: string
      description: Required to use development MAS builds
    - name: artifactory_apikey
      default: ''
      type: string
      description: Required to use development MAS builds

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

      - name: SLS_MONGODB_CFG_FILE
        value: $(params.sls_mongodb_cfg_file)
      - name: SLS_LICENSE_ID
        value: $(params.sls_license_id)
      - name: SLS_LICENSE_FILE
        value: $(params.sls_license_file)
      - name: SLS_CATALOG_SOURCE
        value: $(params.sls_catalog_source)
      - name: SLS_CHANNEL
        value: $(params.sls_channel)
      - name: SLS_ICR_CP
        value: $(params.sls_icr_cp)
      - name: SLS_ICR_CPOPEN
        value: $(params.sls_icr_cpopen)
      - name: SLS_ENTITLEMENT_USERNAME
        value: $(params.sls_entitlement_username)
      - name: IBM_ENTITLEMENT_KEY
        value: $(params.ibm_entitlement_key)
      - name: SLS_ENTITLEMENT_KEY
        value: $(params.sls_entitlement_key)

      - name: ARTIFACTORY_USERNAME
        value: $(params.artifactory_username)
      - name: ARTIFACTORY_APIKEY
        value: $(params.artifactory_apikey)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: sls
      command:
        - /opt/app-root/src/run-role.sh
        - sls
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: entitlement
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/suite-app-config.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-suite-app-config
spec:
  params:
    - name: mas_app_id
      type: string
      description: Maximo Application Suite Application ID
    - name: mas_appws_components
      type: string
      description: Components to configure in the workspace
      default: ""
    - name: mas_instance_id
      type: string
      description: Instance ID
    - name: mas_workspace_id
      type: string
      description: Maximo Application Suite Workspace ID

    - name: cpd_ws_project_id
      type: string
      description: Analytics Project Id
      default: ""
    - name: cpd_ws_project_name
      type: string
      description: Analytics Project Name
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: MAS_WORKSPACE_ID
        value: $(params.mas_workspace_id)
      - name: MAS_APP_ID
        value: $(params.mas_app_id)
      - name: MAS_APPWS_COMPONENTS
        value: $(params.mas_appws_components)

      - name: CPD_WS_PROJECT_ID
        value: $(params.cpd_ws_project_id)
      - name: CPD_WS_PROJECT_NAME
        value: $(params.cpd_ws_project_name)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: suite-app-config
      command:
        - /opt/app-root/src/run-role.sh
        - suite_app_config
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/suite-app-install.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-suite-app-install
spec:
  params:
    - name: artifactory_username
      default: ''
      type: string
      description: Required to use development MAS builds
    - name: artifactory_apikey
      default: ''
      type: string
      description: Required to use development MAS builds

    - name: mas_instance_id
      type: string
      description: Instance ID
    - name: mas_app_id
      type: string
      description: Maximo Applicaiton Suite Application Id
    - name: mas_app_channel
      type: string
      description: Catalog channel for the application operator subscription

    - name: mas_app_catalog_source
      default: 'ibm-operator-catalog'
      type: string
      description: Catalog source for the application operator subscription

    - name: mas_icr_cp
      type: string
      default: ""

    - name: mas_entitlement_username
      type: string
      default: ""
    - name: ibm_entitlement_key
      type: string
    - name: mas_entitlement_key
      type: string
      default: ""
      description: "Optional MAS-specific override for the IBM entitlement key"

    - name: mas_app_spec
      default: ""
      type: string
      description: Application specifications such as binding, settings, etc

    - name: mas_app_plan
      type: string
      description: Application installation plan
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

      - name: ARTIFACTORY_USERNAME
        value: $(params.artifactory_username)
      - name: ARTIFACTORY_APIKEY
        value: $(params.artifactory_apikey)

      - name: MAS_ICR_CP
        value: $(params.mas_icr_cp)

      - name: MAS_ENTITLEMENT_USERNAME
        value: $(params.mas_entitlement_username)
      - name: IBM_ENTITLEMENT_KEY
        value: $(params.ibm_entitlement_key)
      - name: MAS_ENTITLEMENT_KEY
        value: $(params.mas_entitlement_key)

      - name: MAS_APP_ID
        value: $(params.mas_app_id)
      - name: MAS_APP_CHANNEL
        value: $(params.mas_app_channel)
      - name: MAS_APP_CATALOG_SOURCE
        value: $(params.mas_app_catalog_source)
      - name: MAS_APP_SPEC
        value: $(params.mas_app_spec)
      - name: MAS_APP_PLAN
        value: $(params.mas_app_plan)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: suite-app-install
      command:
        - /opt/app-root/src/run-role.sh
        - suite_app_install
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/suite-config.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-suite-config
spec:
  params:
    - name: mas_instance_id
      type: string
      description: Instance ID

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: suite-config
      command:
        - /opt/app-root/src/run-role.sh
        - suite_config
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/suite-db2-setup-for-manage.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-suite-db2-setup-for-manage
spec:
  params:
    - name: db2_instance_name
      type: string
      description: Name (specifically, not the ID) of the DB2 Warehouse instance to execute the hack
    - name: db2_namespace
      type: string
      description: Namespace where the DB2 Warehouse instance to execute the hack resides
      default: "db2u"

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: mas_instance_id
      type: string
      description: Optional MAS instance Id, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: DB2_INSTANCE_NAME
        value: $(params.db2_instance_name)
      - name: DB2_NAMESPACE
        value: $(params.db2_namespace)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: suite-db2-setup-for-manage
      command:
        - /opt/app-root/src/run-role.sh
        - suite_db2_setup_for_manage
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/suite-dns.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-suite-dns
spec:
  params:
    - name: dns_provider
      type: string
      default: ""
    - name: mas_instance_id
      type: string
    - name: mas_domain
      type: string
      default: ""

    # Cloudflare support
    - name: cloudflare_email
      type: string
      default: ""
    - name: cloudflare_apitoken
      type: string
      default: ""
    - name: cloudflare_zone
      type: string
      default: ""
    - name: cloudflare_subdomain
      type: string
      default: ""

    # IBM Cloud Internet Services support
    - name: cis_email
      type: string
      default: ""
    - name: cis_apikey
      type: string
      default: ""
    - name: cis_crn
      type: string
      default: ""
    - name: cis_subdomain
      type: string
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: DNS_PROVIDER
        value: $(params.dns_provider)
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: MAS_DOMAIN
        value: $(params.mas_domain)

      - name: CLOUDFLARE_EMAIL
        value: $(params.cloudflare_email)
      - name: CLOUDFLARE_APITOKEN
        value: $(params.cloudflare_apitoken)
      - name: CLOUDFLARE_ZONE
        value: $(params.cloudflare_zone)
      - name: CLOUDFLARE_SUBDOMAIN
        value: $(params.cloudflare_subdomain)

      - name: CIS_EMAIL
        value: $(params.cis_email)
      - name: CIS_APIKEY
        value: $(params.cis_apikey)
      - name: CIS_CRN
        value: $(params.cis_crn)
      - name: CIS_SUBDOMAIN
        value: $(params.cis_subdomain)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: suite-dns
      command:
        - /opt/app-root/src/run-role.sh
        - suite_dns
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/suite-install.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-suite-install
spec:
  params:
    - name: mas_instance_id
      type: string
    - name: mas_channel
      type: string
    - name: mas_catalog_source
      type: string
      default: ""

    - name: mas_annotations
      default: ''
      type: string
      description: Required to install  MAS with annotations (e.g. for saas)
    - name: mas_domain
      default: ''
      type: string
      description: Optional. If not provided the role will use the default cluster subdomain
    - name: mas_cluster_issuer
      default: ''
      type: string
      description: Optional. If not provided MAS will generate it's own self-signed cluster issuer when installed
    - name: mas_upgrade_strategy
      type: string
      description: Optional identifier for the Upgrade strategy for MAS Operator. Default is set to Automatic
      default: ""

    - name: mas_add_catalog
      default: ''
      type: string
    - name: mas_add_channel
      default: ''
      type: string

    - name: mas_icr_cp
      type: string
      default: ""
    - name: mas_icr_cpopen
      type: string
      default: ""

    - name: mas_entitlement_username
      type: string
      default: ""
    - name: ibm_entitlement_key
      type: string
    - name: mas_entitlement_key
      type: string
      default: ""
      description: "Optional MAS-specific override for the IBM entitlement key"

    - name: artifactory_username
      default: ''
      type: string
      description: Required to install development MAS catalogs
    - name: artifactory_apikey
      default: ''
      type: string
      description: Required to install development MAS catalogs

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_CHANNEL
        value: $(params.mas_channel)
      - name: MAS_CATALOG_SOURCE
        value: $(params.mas_catalog_source)

      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: MAS_CHANNEL
        value: $(params.mas_channel)
      - name: MAS_CATALOG_SOURCE
        value: $(params.mas_catalog_source)

      - name: MAS_ADD_CATALOG
        value: $(params.mas_add_catalog)
      - name: MAS_ADD_CHANNEL
        value: $(params.mas_add_channel)

      - name: MAS_ANNOTATIONS
        value: $(params.mas_annotations)
      - name: MAS_DOMAIN
        value: $(params.mas_domain)
      - name: MAS_CLUSTER_ISSUER
        value: $(params.mas_cluster_issuer)
      - name: MAS_UPGRADE_STRATEGY
        value: $(params.mas_upgrade_strategy)

      - name: ARTIFACTORY_USERNAME
        value: $(params.artifactory_username)
      - name: ARTIFACTORY_APIKEY
        value: $(params.artifactory_apikey)

      - name: MAS_ICR_CP
        value: $(params.mas_icr_cp)
      - name: MAS_ICR_CPOPEN
        value: $(params.mas_icr_cpopen)

      - name: MAS_ENTITLEMENT_USERNAME
        value: $(params.mas_entitlement_username)
      - name: IBM_ENTITLEMENT_KEY
        value: $(params.ibm_entitlement_key)
      - name: MAS_ENTITLEMENT_KEY
        value: $(params.mas_entitlement_key)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: suite-install
      command:
        - /opt/app-root/src/run-role.sh
        - suite_install
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
    - name: additional-configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/suite-mustgather.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-suite-mustgather
spec:
  params:
    - name: base_output_dir
      type: string
      description: Locaton for the output of mustgather. Set as a sub-path of /workspace/mustgather to ensure that data is persisted.
      default: "/workspace/mustgather"
    - name: mas_instance_id
      type: string

  stepTemplate:
    env:
      - name: BASE_OUTPUT_DIR
        value: $(params.base_output_dir)
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

  steps:
    - name: clear-mustgather
      command:
        - /opt/app-root/src/clear-mustgather-workspace.sh
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/mustgather
    - name: suite-mustgather
      command:
        - /opt/app-root/src/run-role.sh
        - suite_mustgather
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/mustgather

  workspaces:
    - name: mustgather
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/suite-verify.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-suite-verify
spec:
  params:
    - name: mas_instance_id
      type: string

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: suite-verify
      command:
        - /opt/app-root/src/run-role.sh
        - suite_verify
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/tasks/uds.yaml
# --------------------------------------------------------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-devops-uds
spec:
  params:
    - name: mas_instance_id
      type: string
      default: ""
    - name: mas_segment_key
      type: string
      default: ""
    - name: uds_contact_email
      type: string
      default: ""
    - name: uds_contact_firstname
      type: string
      default: ""
    - name: uds_contact_lastname
      type: string
      default: ""
    - name: uds_event_scheduler_frequency
      type: string
      default: ""
    - name: uds_storage_class
      type: string
      default: ""

    # Optional support built into the ansible-devops image
    # for saving task execution results to a MongoDb instance
    - name: devops_mongo_uri
      type: string
      description: Optional MongoDb connection URI, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_suite_name
      type: string
      description: Optional name for the junit suite, used to enable save-junit-to-mongo.py
      default: ""
    - name: devops_build_number
      type: string
      description: Optional identifier for the execution run, used to enable save-junit-to-mongo.py
      default: ""

  stepTemplate:
    env:
      # Properties for generating a MAS configuration
      - name: MAS_CONFIG_DIR
        value: /workspace/configs
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: MAS_SEGMENT_KEY
        value: $(params.mas_segment_key)
      - name: UDS_CONTACT_EMAIL
        value: $(params.uds_contact_email)
      - name: UDS_CONTACT_FIRSTNAME
        value: $(params.uds_contact_firstname)
      - name: UDS_CONTACT_LASTNAME
        value: $(params.uds_contact_lastname)
      - name: UDS_STORAGE_CLASS
        value: $(params.uds_storage_class)

      # Properties to configure the UDS install
      - name: UDS_EVENT_SCHEDULER_FREQUENCY
        value: $(params.uds_event_scheduler_frequency)

      # Optional support built into the ansible-devops image
      # for saving task execution results to a MongoDb instance
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DEVOPS_SUITE_NAME
        value: $(params.devops_suite_name)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)

  steps:
    - name: uds
      command:
        - /opt/app-root/src/run-role.sh
        - uds
      image: quay.io/ibmmas/cli:local
      imagePullPolicy: Always
      workingDir: /workspace/configs

  workspaces:
    - name: configs
# --------------------------------------------------------------------------------
# /home/david/ibm-mas/installer/build/bin/../../tekton/pipelines/install.yaml
# --------------------------------------------------------------------------------
---
# MAS One-Click Installation Pipeline
# -------------------
# By default only MAS core will be installed, with no applications installed.
# - To add applications to the pipeline, set the mas_app_channel_x parameter for one or more applications
# - The pipeline will automatically deploy the necessary additional dependencies for any applications enabled this way
#
# This pipeline will deploy a shared instance of Db2 and Kafka suitable for all applications
# - Db2 will only be set up if IoT or Manage applications are set to be installed
# - Db2 will be configured with the default recommended settings as defined in the ansible role
# - Kafka will only be set up if IoT application is set to be installed
#
# This is a **sample** pipeline, you can use this as a template for your own pipelines, we aim to strike a good
# balance between power and complexity in this configuration, if you have any questions about how the pipeline
# works, or how to make adjustments to fir your specific use case, please raise an issue in GitHub:
#   https://github.com/ibm-mas/ansible-devops/issues
#
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mas-install-pipeline
spec:
  workspaces:
    # The generated configuration files
    - name: shared-configs
    # Any pre-generated configs that will be copied into the shared-configs workspace during suite-install
    - name: shared-additional-configs
    # The SLS entitlement key file that will be installed during install-sls.
    - name: shared-entitlement
    # Shared storage to hold mustgather output for tasks
    - name: shared-mustgather

  params:
    # Development Build Support
    - name: artifactory_username
      default: ""
      type: string
      description: Required to install development MAS catalogs
    - name: artifactory_apikey
      default: ""
      type: string
      description: Required to install development MAS catalogs

    - name: storage_class_rwo
      type: string
      default: ""
      description: ReadWriteOnce storage class

    - name: storage_class_rwx
      type: string
      default: ""
      description: ReadWriteMany storage class

    - name: ibm_entitlement_key        # Required
      type: string
      description: IBM Entitlement Key

    # Dependencies - Foundation Services
    - name: common_services_catalog_source
      type: string
      default: ""

    # Dependencies - SLS
    - name: sls_license_id             # Required
      type: string
    - name: sls_license_file           # Required
      type: string
    - name: sls_mongodb_cfg_file
      type: string
      default: "/workspace/configs/mongo-mongoce.yml"
    - name: sls_catalog_source
      type: string
      default: ""
    - name: sls_channel
      type: string
      default: ""
    - name: sls_icr_cp
      type: string
      default: ""
    - name: sls_icr_cpopen
      type: string
      default: ""
    - name: sls_entitlement_username
      type: string
      default: ""
    - name: sls_entitlement_key
      type: string
      default: ""
      description: Override IBM Entitlement key for SLS installation

    # Dependencies - Mongo
    - name: mongodb_storage_class
      type: string
      default: ""

    # Dependencies - Kafka
    - name: kafka_namespace
      type: string
      default: ""
    - name: kafka_cluster_name
      type: string
      default: ""
    - name: kafka_cluster_size
      type: string
      default: ""
    - name: kafka_user_name
      type: string
      default: ""

    # Dependencies - CP4D
    - name: cpd_operators_namespace
      type: string
      default: ""
    - name: cpd_instance_namespace
      type: string
      default: ""
    - name: cpd_primary_storage_class
      type: string
      default: ""
    - name: cpd_metadata_storage_class
      type: string
      default: ""

    # Dependencies - CP4D Services
    - name: cpd_product_version        # Required
      type: string
    - name: cpd_wd_storage_class
      type: string
      default: ""
    - name: cpd_wml_storage_class
      type: string
      default: ""
    - name: cpd_spark_storage_class
      type: string
      default: ""
    - name: cpd_wsl_storage_class
      type: string
      default: ""

    # Dependencies - UDS
    - name: uds_contact_email          # Required
      type: string
    - name: uds_contact_firstname      # Required
      type: string
    - name: uds_contact_lastname       # Required
      type: string

    # Dependencies - AppConnect
    - name: appconnect_entitlement_username
      type: string
      default: ""
    - name: appconnect_entitlement_key
      type: string
      default: ""
      description: Override IBM Entitlement key for AppConnect installation

    # Dependencies - COS
    - name: cos_type
      type: string
      description: COS Provider (ibm or ocs)
    - name: ibmcloud_apikey
      type: string
      description: API Key used to create COS instance in IBM Cloud
    - name: uds_event_scheduler_frequency
      type: string
      default: ""
    - name: mas_segment_key
      type: string
      default: ""

    # MAS DNS Integrations - General
    - name: dns_provider
      type: string
      default: ""
    # MAS DNS Integrations - Cloudflare Support
    - name: cloudflare_email
      type: string
      default: ""
    - name: cloudflare_apitoken
      type: string
      default: ""
    - name: cloudflare_zone
      type: string
      default: ""
    - name: cloudflare_subdomain
      type: string
      default: ""
    # MAS DNS Integrations - IBM Cloud Internet Services Support
    - name: cis_email
      type: string
      default: ""
    - name: cis_apikey
      type: string
      default: ""
    - name: cis_crn
      type: string
      default: ""
    - name: cis_subdomain
      type: string
      default: ""

    # MAS Configuration
    - name: mas_instance_id            # Required
      type: string
    - name: mas_channel                # Required
      type: string
    - name: mas_catalog_source
      type: string
      default: ibm-operator-catalog
    - name: mas_catalog_version
      type: string
      default: v8

    - name: mas_domain
      type: string
      default: ""
    - name: mas_cluster_issuer
      type: string
      default: ""

    - name: mas_icr_cp
      type: string
      default: ""
    - name: mas_icr_cpopen
      type: string
      default: ""
    - name: mas_entitlement_username
      type: string
      default: ""
    - name: mas_annotations
      type: string
      default: ""
    - name: mas_entitlement_key
      type: string
      default: ""
      description: Override IBM Entitlement key for MAS installation

    # MAS Configuration - Workspace
    - name: mas_workspace_id
      type: string
      description: Workspace ID used to configure all applications
      default: masdev
    - name: mas_workspace_name
      type: string
      description: Workspace Name used when setting up the workspace
      default: MAS Development

    # MAS Configuration - Manage Application
    - name: mas_appws_components
      type: string
      description: Manage components to configure in the workspace
      default: "base=latest,health=latest"

    # MAS Configuration - Optimizer Application
    - name: mas_app_plan_optimizer
      type: string
      description: Configure install plan of Optimizer application (full or limited)
      default: full

    # MAS Configuration - Application Channels
    - name: mas_app_channel_iot
      type: string
      description: Subscription channel for IoT application operator
      default: ""
    - name: mas_app_channel_manage
      type: string
      description: Subscription channel for Manage application operator
      default: ""
    - name: mas_app_channel_monitor
      type: string
      description: Subscription channel for Monitor application operator
      default: ""
    - name: mas_app_channel_optimizer
      type: string
      description: Subscription channel for Optimizer application operator
      default: ""
    - name: mas_app_channel_predict
      type: string
      description: Subscription channel for Predict application operator
      default: ""
    - name: mas_app_channel_safety
      type: string
      description: Subscription channel for Safety application operator
      default: ""
    - name: mas_app_channel_hputilities
      type: string
      description: Subscription channel for Health & Predict - Utilities application operator
      default: ""
    - name: mas_app_channel_assist
      type: string
      description: Subscription channel for Assist application operator
      default: ""
    - name: mas_app_channel_visualinspection
      type: string
      description: Subscription channel for MVI application operator
      default: ""

    # MAS Configuration - Application Sources
    - name: mas_app_source_iot
      type: string
      description: Subscription source for IoT application operator
      default: ibm-operator-catalog
    - name: mas_app_source_manage
      type: string
      description: Subscription source for Manage application operator
      default: ibm-operator-catalog
    - name: mas_app_source_monitor
      type: string
      description: Subscription source for Monitor application operator
      default: ibm-operator-catalog
    - name: mas_app_source_optimizer
      type: string
      description: Subscription source for Optimizer application operator
      default: ibm-operator-catalog
    - name: mas_app_source_predict
      type: string
      description: Subscription source for Predict application operator
      default: ibm-operator-catalog
    - name: mas_app_source_safety
      type: string
      description: Subscription source for Safety application operator
      default: ibm-operator-catalog
    - name: mas_app_source_hputilities
      type: string
      description: Subscription source for Health & Predict - Utilities application operator
      default: ""
    - name: mas_app_source_assist
      type: string
      description: Subscription source for Assist application operator
      default: ""
    - name: mas_app_source_visualinspection
      type: string
      description: Subscription source for MVI application operator
      default: ""

    # Persist Results (Optional)
    - name: devops_mongo_uri
      type: string
      default: ""
    - name: devops_build_number
      type: string
      default: ""

  tasks:

    # 1. Setup the cluster-wide dependencies & configure cluster monitoring
    # -------------------------------------------------------------------------
    - name: ibm-catalogs
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-ibm-catalogs
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_catalog_version
          value: $(params.mas_catalog_version)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
      taskRef:
        kind: Task
        name: mas-devops-ibm-catalogs

    - name: common-services
      params:
        - name: common_services_catalog_source
          value: $(params.common_services_catalog_source)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-common-services
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      taskRef:
        kind: Task
        name: mas-devops-common-services
      runAfter:
        - ibm-catalogs

    - name: cert-manager
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-cert-manager
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_channel
          value: $(params.mas_channel)
      taskRef:
        kind: Task
        name: mas-devops-cert-manager
      runAfter:
        - common-services

    - name: sbo
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-sbo
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_channel
          value: $(params.mas_channel)
      taskRef:
        kind: Task
        name: mas-devops-sbo

    - name: cluster-monitoring
      params:
        - name: prometheus_storage_class
          value: $(params.storage_class_rwo)
        - name: prometheus_alertmgr_storage_class
          value: $(params.storage_class_rwo)
        - name: prometheus_userworkload_storage_class
          value: $(params.storage_class_rwo)
        - name: grafana_instance_storage_class
          value: $(params.storage_class_rwo)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-cluster-monitoring
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      taskRef:
        kind: Task
        name: mas-devops-cluster-monitoring


    # 2. Install MongoDb
    # -------------------------------------------------------------------------
    - name: mongodb
      params:
        - name: mongodb_storage_class
          value: $(params.storage_class_rwo)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: dependencies-mongodb
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      taskRef:
        kind: Task
        name: mas-devops-mongodb
      runAfter:
        - cert-manager
      workspaces:
        - name: configs
          workspace: shared-configs


    # 3. Install AMQStream (Kafka)
    # -------------------------------------------------------------------------
    - name: kafka
      params:
        - name: kafka_namespace
          value: "$(params.kafka_namespace)"
        - name: kafka_cluster_name
          value: "$(params.kafka_cluster_name)"
        - name: kafka_cluster_size
          value: "$(params.kafka_cluster_size)"
        - name: kafka_user_name
          value: "$(params.kafka_user_name)"
        - name: kafka_storage_class
          value: $(params.storage_class_rwo)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: dependencies-kafka
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      # Only install Kafka if the IoT application is being installed
      when:
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]
      taskRef:
        kind: Task
        name: mas-devops-kafka
      workspaces:
        - name: configs
          workspace: shared-configs


    # 4. Install Db2
    # -------------------------------------------------------------------------
    - name: db2
      params:
        - name: db2_meta_storage_class
          value: $(params.storage_class_rwx)
        - name: db2_data_storage_class
          value: $(params.storage_class_rwo)
        - name: db2_backup_storage_class
          value: $(params.storage_class_rwx)
        - name: db2_logs_storage_class
          value: $(params.storage_class_rwo)
        - name: db2_temp_storage_class
          value: $(params.storage_class_rwo)

        - name: devops_suite_name
          value: dependencies-db2
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: db2_instance_name
          value: db2u-shared
        - name: mas_instance_id
          value: $(params.mas_instance_id)
      # Only install Db2 if IoT or Manage are being installed
      when:
        # See: https://github.com/tektoncd/pipeline/issues/3591#issuecomment-1073901961
        - input: "$(params.mas_app_channel_iot)$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
        # If there is no RWX storage class available then we can't deploy Db2.
        # TODO: Test Db2 install using RWO storage only
        - input: "$(params.storage_class_rwx)"
          operator: notin
          values: ["none"]
      taskRef:
        name: mas-devops-db2
        kind: Task
      runAfter:
        - cert-manager
      workspaces:
        - name: configs
          workspace: shared-configs


    # 5. Install IBM SLS
    # -------------------------------------------------------------------------
    - name: sls
      params:
        - name: devops_suite_name
          value: dependencies-sls
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: sls_mongodb_cfg_file
          value: $(params.sls_mongodb_cfg_file)
        - name: sls_catalog_source
          value: $(params.sls_catalog_source)
        - name: sls_channel
          value: $(params.sls_channel)
        - name: sls_license_id
          value: $(params.sls_license_id)
        - name: sls_license_file
          value: $(params.sls_license_file)
        - name: sls_icr_cp
          value: $(params.sls_icr_cp)
        - name: sls_icr_cpopen
          value: $(params.sls_icr_cpopen)
        - name: sls_entitlement_username
          value: $(params.sls_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: sls_entitlement_key
          value: $(params.sls_entitlement_key)
      taskRef:
        kind: Task
        name: mas-devops-sls
      runAfter:
        - mongodb
      workspaces:
        - name: configs
          workspace: shared-configs
        - name: entitlement
          workspace: shared-entitlement


    # 6. Install UDS
    # -------------------------------------------------------------------------
    - name: uds
      params:
        - name: uds_contact_email
          value: "$(params.uds_contact_email)"
        - name: uds_contact_firstname
          value: "$(params.uds_contact_firstname)"
        - name: uds_contact_lastname
          value: "$(params.uds_contact_lastname)"
        - name: uds_event_scheduler_frequency
          value: "$(params.uds_event_scheduler_frequency)"
        - name: uds_storage_class
          value: $(params.storage_class_rwo)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_segment_key
          value: $(params.mas_segment_key)

        - name: devops_suite_name
          value: dependencies-uds
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      taskRef:
        kind: Task
        name: mas-devops-uds
      runAfter:
        - common-services
      workspaces:
        - name: configs
          workspace: shared-configs


    # 7. Configure Workspace
    # -------------------------------------------------------------------------
    - name: gencfg-workspace
      params:
        - name: devops_suite_name
          value: gencfg-workspace
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
        - name: mas_workspace_name
          value: $(params.mas_workspace_name)
      taskRef:
        kind: Task
        name: mas-devops-gencfg-workspace
      workspaces:
        - name: configs
          workspace: shared-configs


    # 8. Install & configure IBM MAS
    # -------------------------------------------------------------------------
    # 8.1 DNS Setup
    - name: suite-dns
      params:
        - name: devops_suite_name
          value: suite-dns
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_domain
          value: $(params.mas_domain)

        - name: dns_provider
          value: $(params.dns_provider)

        - name: cloudflare_email
          value: $(params.cloudflare_email)
        - name: cloudflare_apitoken
          value: $(params.cloudflare_apitoken)
        - name: cloudflare_zone
          value: $(params.cloudflare_zone)
        - name: cloudflare_subdomain
          value: $(params.cloudflare_subdomain)

        - name: cis_email
          value: $(params.cis_email)
        - name: cis_apikey
          value: $(params.cis_apikey)
        - name: cis_crn
          value: $(params.cis_crn)
        - name: cis_subdomain
          value: $(params.cis_subdomain)

      taskRef:
        kind: Task
        name: mas-devops-suite-dns
      runAfter:
        - cert-manager


    # 8.2 Suite Installation
    - name: suite-install
      params:
        - name: devops_suite_name
          value: suite-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_annotations
          value: $(params.mas_annotations)
        - name: mas_domain
          value: $(params.mas_domain)
        - name: mas_cluster_issuer
          value: $(params.mas_cluster_issuer)

        - name: mas_channel
          value: $(params.mas_channel)
        - name: mas_catalog_source
          value: $(params.mas_catalog_source)
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_icr_cpopen
          value: $(params.mas_icr_cpopen)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        kind: Task
        name: mas-devops-suite-install
      runAfter:
        - sbo
        - sls
        - uds
        - gencfg-workspace
        - suite-dns
      workspaces:
        # This is the stage at which we copy across any user-provided additional configs
        - name: configs
          workspace: shared-configs
        - name: additional-configs
          workspace: shared-additional-configs

    # 8.3 Suite Configuration
    - name: suite-config
      params:
        - name: devops_suite_name
          value: suite-config
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      runAfter:
        - suite-install
      workspaces:
        - name: configs
          workspace: shared-configs

    # 8.4 Suite Verification
    - name: suite-verify
      params:
        - name: devops_suite_name
          value: suite-verify
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-verify
      runAfter:
        - suite-config


    # 9. Configure Db2 in MAS
    # -------------------------------------------------------------------------
    - name: suite-config-db2
      params:
        - name: devops_suite_name
          value: suite-config-db2
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      # Only load the JDBCCfg if IoT or Manage are being installed
      # See: https://github.com/tektoncd/pipeline/issues/3591#issuecomment-1073901961
      when:
        - input: "$(params.mas_app_channel_iot)$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify
        - db2
      workspaces:
        - name: configs
          workspace: shared-configs


    # 10. Configure Kafka in MAS
    # -------------------------------------------------------------------------
    - name: suite-config-kafka
      params:
        - name: devops_suite_name
          value: cfg-suite-kafka
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      # Only load the KafkaCfg if IoT is being installed
      when:
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify
        - kafka
      workspaces:
        - name: configs
          workspace: shared-configs


    # 11. Cloud Pak for Data - Platform
    # -------------------------------------------------------------------------
    - name: cp4d
      params:
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: setup-cp4d
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)
      taskRef:
        kind: Task
        name: mas-devops-cp4d
      runAfter:
        - common-services
      # Only needed if either Predict, HPUtilities or Assist are being installed
      when:
        - input: "$(params.mas_app_channel_predict)$(params.mas_app_channel_hputilities)$(params.mas_app_channel_assist)"
          operator: notin
          values: [""]


    # 12. Cloud Pak for Data - Watson Studio
    # -------------------------------------------------------------------------
    - name: watson-studio
      params:
        - name: devops_suite_name
          value: setup-cp4d-wsl
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: cpd_product_version
          value: "$(params.cpd_product_version)"
        - name: cpd_service_name
          value: wsl
        - name: cpd_service_storage_class
          value: "$(params.cpd_wsl_storage_class)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
      taskRef:
        kind: Task
        name: mas-devops-cp4d-service
      runAfter:
        - cp4d
      # Only needed if either Predict or HPUtilities are being installed
      when:
        - input: "$(params.mas_app_channel_predict)$(params.mas_app_channel_hputilities)"
          operator: notin
          values: [""]
      workspaces:
        - name: configs
          workspace: shared-configs


    # 13. Cloud Pak for Data - Watson Machine Learning
    # -------------------------------------------------------------------------
    - name: watson-machine-learning
      params:
        - name: devops_suite_name
          value: setup-cp4d-wml
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: cpd_product_version
          value: "$(params.cpd_product_version)"
        - name: cpd_service_name
          value: wml
        - name: cpd_service_storage_class
          value: "$(params.cpd_wml_storage_class)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
      taskRef:
        kind: Task
        name: mas-devops-cp4d-service
      runAfter:
        - cp4d
      # Only needed if Predict is being installed
      when:
        - input: "$(params.mas_app_channel_predict)"
          operator: notin
          values: [""]
      workspaces:
        - name: configs
          workspace: shared-configs


    # 14. Cloud Pak for Data - Analytics Service (Spark)
    # -------------------------------------------------------------------------
    - name: analytics-service
      params:
        - name: devops_suite_name
          value: setup-cp4d-spark
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: cpd_product_version
          value: "$(params.cpd_product_version)"
        - name: cpd_service_name
          value: spark
        - name: cpd_service_storage_class
          value: "$(params.cpd_spark_storage_class)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
      taskRef:
        kind: Task
        name: mas-devops-cp4d-service
      runAfter:
        - cp4d
      # Only needed if Predict is being installed
      when:
        - input: "$(params.mas_app_channel_predict)"
          operator: notin
          values: [""]
      workspaces:
        - name: configs
          workspace: shared-configs


    # 15. Cloud Pak for Data - Watson Discovery
    # -------------------------------------------------------------------------
    - name: discovery
      params:
        - name: devops_suite_name
          value: setup-cp4d-discovery
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: cpd_product_version
          value: "$(params.cpd_product_version)"
        - name: cpd_service_name
          value: wd
        - name: cpd_service_storage_class
          value: "$(params.cpd_wd_storage_class)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
      taskRef:
        kind: Task
        name: mas-devops-cp4d-service
      runAfter:
        - cp4d
      # Only needed if Assist is being installed
      when:
        - input: "$(params.mas_app_channel_assist)"
          operator: notin
          values: [""]
      workspaces:
        - name: configs
          workspace: shared-configs


    # 16. Configure Watson Studio in MAS
    # -------------------------------------------------------------------------
    - name: suite-config-watson-studio
      params:
        - name: devops_suite_name
          value: cfg-suite-appconnect
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
       # Only needed if either Predict or HPUtilities are being installed
      when:
        - input: "$(params.mas_app_channel_predict)$(params.mas_app_channel_hputilities)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify
        - watson-studio
      workspaces:
        - name: configs
          workspace: shared-configs


    # 17. Configure Watson Discovery in MAS
    # -------------------------------------------------------------------------
    - name: suite-config-discovery
      params:
        - name: devops_suite_name
          value: cfg-suite-appconnect
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      # Only needed if Assist is being installed
      when:
        - input: "$(params.mas_app_channel_assist)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-assist
        - discovery
      workspaces:
        - name: configs
          workspace: shared-configs


    # 18. Cloud Object Storage (COS)
    # -------------------------------------------------------------------------
    # 18.1 Install COS
    - name: cos
      params:
        - name: devops_suite_name
          value: dependencies-cos
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)

        - name: cos_type
          value: $(params.cos_type)
        - name: ibmcloud_apikey
          value: $(params.ibmcloud_apikey)
      taskRef:
        kind: Task
        name: mas-devops-cos
      # Only needed if Assist is being installed
      when:
        - input: "$(params.mas_app_channel_assist)"
          operator: notin
          values: [""]
      workspaces:
        - name: configs
          workspace: shared-configs

    # 18.2 Configure COS in MAS
    - name: suite-config-cos
      params:
        - name: devops_suite_name
          value: cfg-suite-appconnect
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      # Only load COS if Assist is being installed
      when:
        - input: "$(params.mas_app_channel_assist)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify
        - cos
      workspaces:
        - name: configs
          workspace: shared-configs


    # 19. AppConnect
    # -------------------------------------------------------------------------
    # 19.1 Install AppConnect
    - name: appconnect
      params:
        - name: devops_suite_name
          value: dependencies-appconnect
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)

        - name: appconnect_entitlement_username
          value: $(params.appconnect_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: appconnect_entitlement_key
          value: $(params.appconnect_entitlement_key)
      taskRef:
        kind: Task
        name: mas-devops-appconnect
      # Only needed if HPUtilities is being installed
      when:
        - input: "$(params.mas_app_channel_hputilities)"
          operator: notin
          values: [""]
      runAfter:
        - ibm-catalogs
      workspaces:
        - name: configs
          workspace: shared-configs

    # 19.2 Configure AppConnect in MAS
    - name: suite-config-appconnect
      params:
        - name: devops_suite_name
          value: cfg-suite-appconnect
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-config
      # Only load AppConnect if HPUtilities is being installed
      when:
        - input: "$(params.mas_app_channel_hputilities)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify
        - appconnect
      workspaces:
        - name: configs
          workspace: shared-configs


    # 20. Install IBM MAS IoT application
    # -------------------------------------------------------------------------
    # 20.1 Install IoT
    - name: app-install-iot
      params:
        - name: devops_suite_name
          value: app-iot-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: iot
        - name: mas_app_channel
          value: "$(params.mas_app_channel_iot)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_iot)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)

      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install IoT if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]
      runAfter:
        - suite-config-db2
        - suite-config-kafka
        - suite-verify

    # 20.2 Configure IoT workspace
    - name: app-cfg-iot
      params:
        - name: devops_suite_name
          value: app-iot-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: iot
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only configure a workspace for IoT if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-iot
      workspaces:
        - name: configs
          workspace: shared-configs


    # 21. Install IBM MAS Monitor application
    # -------------------------------------------------------------------------
    # 21.1 Install Monitor
    - name: app-install-monitor
      params:
        - name: devops_suite_name
          value: app-monitor-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: monitor
        - name: mas_app_channel
          value: "$(params.mas_app_channel_monitor)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_monitor)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)

      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Monitor if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_monitor)"
          operator: notin
          values: [""]
      runAfter:
        - app-cfg-iot

    # 21.2 Configure Monitor workspace
    - name: app-cfg-monitor
      params:
        - name: devops_suite_name
          value: app-monitor-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: monitor
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only configure a workspace for Monitor if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_monitor)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-monitor
      workspaces:
        - name: configs
          workspace: shared-configs


    # 22. Install IBM MAS Safety application
    # -------------------------------------------------------------------------
    # 22.1 Install Safety
    - name: app-install-safety
      params:
        - name: devops_suite_name
          value: app-safety-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: safety
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_safety)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_safety)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Safety if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_safety)"
          operator: notin
          values: [""]
      runAfter:
        - app-cfg-iot

    # 22.2 Configure Safety workspace
    - name: app-cfg-safety
      params:
        - name: devops_suite_name
          value: app-safety-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: safety
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Safety if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_safety)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-safety
      workspaces:
        - name: configs
          workspace: shared-configs


    # 23. Install IBM MAS Manage application
    # -------------------------------------------------------------------------
    # 23.1. Prepare database to Maxinst
    - name: suite-db2-setup-for-manage
      params:
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: devops_suite_name
          value: suite-db2-setup-for-manage
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: db2_instance_name
          value: "db2u-shared"
      # Only perform the hack if Manage is being installed
      when:
        - input: "$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      taskRef:
        name: mas-devops-suite-db2-setup-for-manage
        kind: Task
      runAfter:
        - suite-config-db2

    # 23.2 Manage Install
    - name: app-install-manage
      params:
        - name: devops_suite_name
          value: app-manage-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: manage
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_manage)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_manage)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Manage if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      runAfter:
        - suite-db2-setup-for-manage
        - suite-verify

    # 23.3 Configure Manage workspace
    - name: app-cfg-manage
      params:
        - name: devops_suite_name
          value: app-manage-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: manage
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
        - name: mas_appws_components
          value: "$(params.mas_appws_components)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Manage if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-manage
      workspaces:
        - name: configs
          workspace: shared-configs


    # 24. Predict
    # -------------------------------------------------------------------------
    # 24.1 Predict Install
    - name: app-install-predict
      params:
        - name: devops_suite_name
          value: app-predict-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: predict
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_predict)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_predict)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Predict if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_predict)"
          operator: notin
          values: [""]
      runAfter:
        - app-cfg-manage
        - app-cfg-monitor
        - suite-config-watson-studio
        - watson-machine-learning
        - analytics-service


    # 24.2 Configure Predict workspace
    - name: app-cfg-predict
      params:
        - name: devops_suite_name
          value: app-predict-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: predict
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Predict if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_predict)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-predict
      workspaces:
        - name: configs
          workspace: shared-configs


    # 25. Optimizer
    # -------------------------------------------------------------------------
    # 25.1 Optimizer Install
    - name: app-install-optimizer
      params:
        - name: devops_suite_name
          value: app-optimizer-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: optimizer
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_optimizer)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_optimizer)"
        - name: mas_app_plan
          value: "$(params.mas_app_plan_optimizer)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Optimizer if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_optimizer)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify

    # 25.2 Configure Optimizer workspace
    - name: app-cfg-optimizer
      params:
        - name: devops_suite_name
          value: app-optimizer-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: optimizer
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"

      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Optimizer if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_optimizer)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-optimizer
      workspaces:
        - name: configs
          workspace: shared-configs


    # 26. Health & Predict - Utilities
    # -------------------------------------------------------------------------
    # 26.1 HPUtilities Install
    - name: app-install-hputilities
      params:
        - name: devops_suite_name
          value: app-hputilities-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: hputilities
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_hputilities)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_hputilities)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install HPUtilities if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_hputilities)"
          operator: notin
          values: [""]
      runAfter:
        - app-cfg-manage # Requires Health as an add-on
        - suite-config-watson-studio
        - suite-config-appconnect

    # 26.2 Configure HPUtilities workspace
    - name: app-cfg-hputilities
      params:
        - name: devops_suite_name
          value: app-hputilities-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: hputilities
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install HPUtilities if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_hputilities)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-hputilities
      workspaces:
        - name: configs
          workspace: shared-configs


    # 27. Assist
    # -------------------------------------------------------------------------
    # 27.1 Assist Install
    - name: app-install-assist
      params:
        - name: devops_suite_name
          value: app-assist-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: assist
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_assist)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_assist)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install Assist if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_assist)"
          operator: notin
          values: [""]
      runAfter:
        - suite-config-cos
        - suite-verify

    # 27.2 Configure Assist workspace
    - name: app-cfg-assist
      params:
        - name: devops_suite_name
          value: app-assist-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: assist
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install Assist if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_assist)"
          operator: notin
          values: [""]
      runAfter:
        - suite-config-discovery
      workspaces:
        - name: configs
          workspace: shared-configs


    # 28. Maximo Visual Inspection (MVI)
    # -------------------------------------------------------------------------
    # 28.1 MVI Install
    - name: app-install-visualinspection
      params:
        - name: devops_suite_name
          value: app-visualinspection-install
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: visualinspection
        - name: artifactory_username
          value: $(params.artifactory_username)
        - name: artifactory_apikey
          value: $(params.artifactory_apikey)
        - name: mas_app_channel
          value: "$(params.mas_app_channel_visualinspection)"
        - name: mas_app_catalog_source
          value: "$(params.mas_app_source_visualinspection)"
        - name: mas_icr_cp
          value: $(params.mas_icr_cp)
        - name: mas_entitlement_username
          value: $(params.mas_entitlement_username)
        - name: ibm_entitlement_key
          value: $(params.ibm_entitlement_key)
        - name: mas_entitlement_key
          value: $(params.mas_entitlement_key)
      taskRef:
        name: mas-devops-suite-app-install
        kind: Task
      # Only install MVI if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_visualinspection)"
          operator: notin
          values: [""]
      runAfter:
        - suite-verify

    # 28.2 Configure MVI workspace
    - name: app-cfg-visualinspection
      params:
        - name: devops_suite_name
          value: app-visualinspection-cfg
        - name: devops_build_number
          value: $(params.devops_build_number)
        - name: devops_mongo_uri
          value: $(params.devops_mongo_uri)

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: visualinspection
        - name: mas_workspace_id
          value: "$(params.mas_workspace_id)"
      taskRef:
        name: mas-devops-suite-app-config
        kind: Task
      # Only install MVI if a channel has been chosen
      when:
        - input: "$(params.mas_app_channel_visualinspection)"
          operator: notin
          values: [""]
      runAfter:
        - app-install-visualinspection
      workspaces:
        - name: configs
          workspace: shared-configs


  # Mustgather executed in finally block. Use suite_mustgather_download
  # playbook to retrieve the output on your local machine
  # -------------------------------------------------------------------------
  finally:
    - name: suite-mustgather
      params:
        - name: base_output_dir
          value: "/workspace/mustgather/$(context.pipelineRun.name)"
        - name: mas_instance_id
          value: $(params.mas_instance_id)
      taskRef:
        kind: Task
        name: mas-devops-suite-mustgather
      workspaces:
        - name: mustgather
          workspace: shared-mustgather
