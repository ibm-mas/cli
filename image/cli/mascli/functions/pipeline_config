#!/bin/bash

. $DIR/functions/pipeline_config_additional_configs
. $DIR/functions/pipeline_config_applications
. $DIR/functions/pipeline_config_db2
. $DIR/functions/pipeline_config_dns
. $DIR/functions/pipeline_config_sno
. $DIR/functions/pipeline_config_storage_classes
. $DIR/functions/pipeline_config_storage_classes_sno

function pipeline_config() {
  echo_h2 "3. Configure Installation"

  MAS_CATALOG_SOURCE=ibm-operator-catalog

  # MAS instance ID
  if [[ ! -z "$1" ]]; then
    MAS_INSTANCE_ID=$1
  fi
  prompt_for_input "MAS Instance ID" MAS_INSTANCE_ID
  prompt_for_input "MAS Workspace ID" MAS_WORKSPACE_ID
  prompt_for_input "MAS Workspace Display Name" MAS_WORKSPACE_NAME

  if [[ -n "$DEV_MODE" ]]; then
    # Development mode
    prompt_for_input "Select Catalog Source" MAS_CATALOG_VERSION "v8-master-amd64"
    prompt_for_input "Select Subscription Channel" MAS_CHANNEL "dev"
  elif [[ -z "$AIRGAP_MODE" ]]; then
    # Online (GA) mode
    prompt_for_confirm "Use online catalog?" USE_ONLINE_CATALOG
    if [[ "$USE_ONLINE_CATALOG" == "true" ]]; then
      MAS_CATALOG_VERSION=v8-amd64
    else
      echo -e "${COLOR_YELLOW}Catalog Version:"
      echo "  1. v8 (2023-02-17)"
      echo "  2. v8 (2023-01-11)"
      echo "  3. v8 (2022-12-28)"
      echo "  4. v8 (2022-11-29)"
      prompt_for_input "Select Catalog Source" MAS_CATALOG_SELECTION "1"

      case $MAS_CATALOG_SELECTION in
        1|230217|2023-02-17)
          MAS_CATALOG_VERSION=v8-230217-amd64
          ;;
        2|230111|2023-01-11)
          MAS_CATALOG_VERSION=v8-230111-amd64
          ;;
        3|221228|2022-12-28)
          MAS_CATALOG_VERSION=v8-221228-amd64
          ;;
        4|221129|2022-11-29)
          MAS_CATALOG_VERSION=v8-221129-amd64
          ;;
        *)
          exit 1
          ;;
      esac
    fi

    if [[ "$SNO_MODE" == "true" ]]; then
      echo -e "${COLOR_YELLOW}MAS Version:"
      echo "  1. 8.9"
    else
      echo -e "${COLOR_YELLOW}MAS Version:"
      echo "  1. 8.9"
      echo "  2. 8.8"
    fi
    prompt_for_input "Select Subscription Channel" MAS_CHANNEL_SELECTION "1"

    case $MAS_CHANNEL_SELECTION in
      1|8.9|8.9.x)
        MAS_CHANNEL=8.9.x
        ;;

      2|8.8|8.8.x)
        MAS_CHANNEL=8.8.x
        ;;

      *)
        MAS_CHANNEL=$MAS_CHANNEL_SELECTION
        ;;
    esac
  else
    # Airgap (GA) mode
    echo -e "${COLOR_YELLOW}MAS Version:"
    echo "February 17 2023 Update"
    echo "  1. 8.9.2"
    echo "  2. 8.8.6"
    echo "January 11 2023 Update"
    echo "  3. 8.9.1"
    echo "  4. 8.8.5"
    echo "December 28 2022 Update"
    echo "  5. 8.9.0"
    echo "  6. 8.8.4"
    echo "November 29 2022 Update"
    echo "  7. 8.9.0"
    echo "  8. 8.8.3"
    prompt_for_input "Select Catalog Source" MAS_CHANNEL_SELECTION "1"

    case $MAS_CHANNEL_SELECTION in
      # Feb 2023 Catalog
      # -----------------------------------------------------------------------
      1)
        MAS_CHANNEL=8.9.x
        MAS_CATALOG_VERSION=v8-230217-amd64
        ;;
      2)
        MAS_CHANNEL=8.8.x
        MAS_CATALOG_VERSION=v8-230217-amd64
        ;;
      # Jan 2023 Catalog
      # -----------------------------------------------------------------------
      3)
        MAS_CHANNEL=8.9.x
        MAS_CATALOG_VERSION=v8-230111-amd64
        ;;
      4)
        MAS_CHANNEL=8.8.x
        MAS_CATALOG_VERSION=v8-230111-amd64
        ;;
      # Dec 2022 Catalog
      # -----------------------------------------------------------------------
      5)
        MAS_CHANNEL=8.9.x
        MAS_CATALOG_VERSION=v8-221228-amd64
        ;;
      6)
        MAS_CHANNEL=8.8.x
        MAS_CATALOG_VERSION=v8-221228-amd64
        ;;
      # Nov 2022 Catalog
      # -----------------------------------------------------------------------
      7)
        MAS_CHANNEL=8.9.x
        MAS_CATALOG_VERSION=v8-221129-amd64
        ;;
      8)
        MAS_CHANNEL=8.8.x
        MAS_CATALOG_VERSION=v8-221129-amd64
        ;;
      *)
        echo_warning "Invalid selection"
        exit 1
        ;;
    esac
  fi
  true

  config_pipeline_sno
  config_pipeline_dns
  config_pipeline_applications
  config_pipeline_storage_db2
  config_pipeline_additional_configs

  if [[ "$SNO_MODE" == "true" ]]; then
    config_pipeline_storage_classes_sno
  else
    config_pipeline_storage_classes
  fi

  echo ""
  if [[ "$DEV_MODE" == "true" && -z "$AIRGAP_MODE" ]]; then
    # Development Mode -- offer the ability to set MAS and SLS source independently
    echo_h2 "9.1 Configure Artifactory"
    prompt_for_input "Artifactory Username" ARTIFACTORY_USERNAME
    prompt_for_input "Artifactory API Key" ARTIFACTORY_APIKEY

    echo
    echo_h2 "9.2 Configure IBM Container Registry"
    prompt_for_input "IBM Entitlement Key" IBM_ENTITLEMENT_KEY $IBM_ENTITLEMENT_KEY

    echo
    echo_h2 "9.3 Configure IBM Container Registry (MAS)"
    prompt_for_input "IBM Container Registry (cp)" MAS_ICR_CP wiotp-docker-local.artifactory.swg-devops.com override
    prompt_for_input "IBM Container Registry (cpopen)" MAS_ICR_CPOPEN wiotp-docker-local.artifactory.swg-devops.com/cpopen override
    MAS_ENTITLEMENT_USERNAME=cp
    MAS_ENTITLEMENT_KEY=$IBM_ENTITLEMENT_KEY

    echo
    echo_h2 "9.4 Configure IBM Container Registry (SLS)"
    prompt_for_input "IBM Container Registry (cp)" SLS_ICR_CP wiotp-docker-local.artifactory.swg-devops.com override
    prompt_for_input "IBM Container Registry (cpopen)" SLS_ICR_CPOPEN wiotp-docker-local.artifactory.swg-devops.com/cpopen override
    SLS_ENTITLEMENT_USERNAME=cp
    SLS_ENTITLEMENT_KEY=$IBM_ENTITLEMENT_KEY
  else
    # Production Mode -- everything comes from the same registry (IBM container registry)
    echo_h2 "9. Configure IBM Container Registry"
    prompt_for_secret "IBM Entitlement Key" IBM_ENTITLEMENT_KEY "Re-use saved IBM Entitlement Key?"

    # Use defaults
    MAS_ICR_CP=cp.icr.io/cp
    MAS_ICR_CPOPEN=icr.io/cpopen
    MAS_ENTITLEMENT_USERNAME=cp
    MAS_ENTITLEMENT_KEY=$IBM_ENTITLEMENT_KEY

    SLS_ICR_CP=cp.icr.io/cp
    SLS_ICR_CPOPEN=icr.io/cpopen
    SLS_ENTITLEMENT_USERNAME=cp
    SLS_ENTITLEMENT_KEY=$IBM_ENTITLEMENT_KEY
  fi

  SLS_CATALOG_SOURCE=ibm-operator-catalog

  echo
  echo_h2 "10. Configure Product License"
  prompt_for_input "License ID" SLS_LICENSE_ID
  prompt_for_input "License File" SLS_LICENSE_FILE_LOCAL
  if [[ ! -e "$SLS_LICENSE_FILE_LOCAL" ]]; then
    echo_warning "Error: File does not exist: $SLS_LICENSE_FILE_LOCAL"
    exit 1
  fi
  SLS_LICENSE_FILE="/workspace/entitlement/$(basename $SLS_LICENSE_FILE_LOCAL)"

  echo
  echo_h2 "11. Configure UDS"
  prompt_for_input "UDS Contact Email" UDS_CONTACT_EMAIL
  prompt_for_input "UDS Contact First Name" UDS_CONTACT_FIRSTNAME
  prompt_for_input "UDS Contact Last Name" UDS_CONTACT_LASTNAME

}
