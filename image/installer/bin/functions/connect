#!/bin/bash

function connect() {
  echo
  echo_h2 "1. Set Target OpenShift Cluster"

  PROMPT_FOR_LOGIN=false
  oc whoami &>> $LOGFILE
  if [[ $? == "0" ]]; then
    OCP_CONSOLE_ROUTE=$(oc -n openshift-console get route console -o=jsonpath='{.spec.host}')
    echo -e "Connected to OCP cluster: \n   ${COLOR_CYAN}${TEXT_UNDERLINE}https://$OCP_CONSOLE_ROUTE${COLOR_RESET}${TEXT_RESET}" | tee $LOGFILE
    if prompt_for_confirm "Connect to a different cluster"; then
      PROMPT_FOR_LOGIN=true
    fi
  else
    PROMPT_FOR_LOGIN=true
  fi

  if [[ $PROMPT_FOR_LOGIN == "true" ]]; then
    read -e -p "$COLOR_YELLOW  Server URL ..... $COLOR_BLUE> " -i "$OCP_LOGIN_URL" OCP_LOGIN_URL
    read -e -p "$COLOR_YELLOW  Login Token  ... $COLOR_BLUE> " -i "$OCP_LOGIN_TOKEN" OCP_LOGIN_TOKEN
    echo -ne "${COLOR_RESET}\033[1K"

    oc login --token=$OCP_LOGIN_TOKEN --server=$OCP_LOGIN_URL &>> $LOGFILE
    OCP_CONSOLE_ROUTE=$(oc -n openshift-console get route console -o=jsonpath='{.spec.host}')
    echo -e "Connected to OCP cluster: \n   ${COLOR_CYAN}${TEXT_UNDERLINE}https://$OCP_CONSOLE_ROUTE${TEXT_RESET}${COLOR_RESET}" | tee $LOGFILE
    prompt_for_confirm "Proceed with installation on this cluster" || exit 0
  fi
  ALREADY_CONFIRMED=true
  echo -ne "${COLOR_RESET}\033[1K"
}
