---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
{% if wait_for_provision == true %}
  name: gitops-provision-mas-instance-after-provision
{% else %}
  name: gitops-provision-mas-instance
{% endif %}
spec:
  workspaces:
    - name: configs
    - name: shared-entitlement
    - name: certificates
    # Any pre-generated configs that will be copied into the shared-configs workspace during suite-install
    - name: shared-additional-configs
  description: Provision MAS GitOps Instance
  params:
{% if wait_for_provision == true %}
      # Name of the PipelineRun to wait for
    - name: pipelinerun_name
      type: string
    - name: ignore_failure
      type: string
      default: "False"
      description: Set to 'True' or 'False' (case-sensitive) to configure whether this pipeline continue if the pipeline we are waiting for has failed.
{% endif %}
    - name: cluster_name
      type: string
    - name: account
      type: string
    - name: secrets_path
      type: string
    - name: avp_aws_secret_region
      type: string
    - name: avp_aws_secret_key
      type: string
    - name: avp_aws_access_key
      type: string

    # 1. Gitops git Parameters
    # -------------------------------------------------------------------------
    {{ lookup('template', params_src_dir ~ '/gitops-git.yml.j2') | indent(4) }}

    - name: github_url
      type: string
    - name: mas_instance_id
      type: string
    - name: vpc_ipv4_cidr
      type: string
    - name: mongo_provider
      type: string
      default: aws
    - name: sls_channel
      type: string
    - name: mas_channel
      type: string
    - name: mas_annotations
      type: string
    - name: mas_image_tags
      type: string
    - name: mas_labels
      type: string
    - name: mas_domain
      type: string
    - name: workspace_id
      type: string
    - name: workspace_name
      type: string
    - name: aws_key_pair_name
      type: string
    - name: ec2_linux_ami_id
      type: string
      default: ""
    - name: docdb_user_action
      type: string
      default: add
    - name: smtp_host
      type: string
    - name: smtp_port
      type: string
    - name: smtp_security
      type: string
    - name: smtp_authentication
      type: string
    - name: smtp_default_sender_email
      type: string
    - name: smtp_default_sender_name
      type: string
    - name: smtp_default_recipient_email
      type: string
    - name: smtp_default_should_email_passwords
      type: string
    - name: smtp_username
      type: string
    - name: smtp_password
      type: string
    - name: ldap_url
      type: string
    - name: ldap_basedn
      type: string
    - name: ldap_userid_map
      type: string
    - name: ldap_certificate_file
      type: string
    - name: ldap_bind_dn
      type: string
    - name: ldap_bind_password
      type: string
    - name: cloud_provider
      type: string
      default: aws
    - name: kafka_provider
      type: string
      default: aws
    - name: kafka_version
      type: string
      default: 3.3.1
    - name: kafka_action
      type: string
    - name: icr_cp
      type: string
    - name: icr_cp_open
      type: string
    - name: kafkacfg_file_name
      type: string
      default: ""
    - name: dns_provider
      type: string
      default: cis
    - name: cis_subdomain
      type: string
    - name: mas_workspace_id
      type: string
    - name: mas_manual_cert_mgmt
      type: string
    - name: cis_enhanced_security
      type: string
    - name: cis_proxy
      type: string
    - name: override_edge_certs
      type: string
    - name: cis_email
      type: string
    - name: cis_crn
      type: string
    - name: cis_apikey
      type: string
    - name: mas_config_dir
      type: string
    - name: cis_service_name
      type: string

  tasks:
{% if wait_for_provision == true %}
    # 0. Wait for the provsion pipeline to complete
    # -------------------------------------------------------------------------
    - name: wait-for-provision
      params:
        - name: pipelinerun_name
          value: $(params.pipelinerun_name)
        - name: ignore_failure
          value: $(params.ignore_failure)
      taskRef:
        kind: Task
        name: mas-fvt-wait-for-pipelinerun
{% endif %}
    - name: gitops-process-mongo-user
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-provision
{% endif %}
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: vpc_ipv4_cidr
          value: $(params.vpc_ipv4_cidr)
        - name: mongo_provider
          value: $(params.mongo_provider)
        - name: user_action
          value: $(params.docdb_user_action)
        - name: aws_key_pair_name
          value: $(params.aws_key_pair_name)
        - name: ec2_linux_ami_id
          value: $(params.ec2_linux_ami_id)
      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-process-mongo-user
    - name: gitops-license
      runAfter:
        - gitops-process-mongo-user
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
      workspaces:
        - name: shared-entitlement
          workspace: shared-entitlement
      taskRef:
        kind: Task
        name: gitops-license
    - name: gitops-suite-dns
      runAfter:
        - gitops-process-mongo-user
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: dns_provider
          value: $(params.dns_provider)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_domain
          value: $(params.mas_domain)
        - name: cis_subdomain
          value: $(params.cis_subdomain)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
        - name: mas_manual_cert_mgmt
          value: $(params.mas_manual_cert_mgmt)
        - name: cis_enhanced_security
          value: $(params.cis_enhanced_security)
        - name: cis_proxy
          value: $(params.cis_proxy)
        - name: override_edge_certs
          value: $(params.override_edge_certs)
        - name: cis_email
          value: $(params.cis_email)
        - name: cis_crn
          value: $(params.cis_crn)
        - name: cis_apikey
          value: $(params.cis_apikey)
        - name: mas_config_dir
          value: $(params.mas_config_dir)
        - name: cis_service_name
          value: $(params.cis_service_name)
      taskRef:
        kind: Task
        name: gitops-suite-dns
      when:
        - input: "$(params.dns_provider)"
          operator: notin
          values: [""]
        - input: "$(params.mas_manual_cert_mgmt)"
          operator: in
          values: ["False"]
      workspaces:
        - name: configs
          workspace: configs
    - name: gitops-suite-certs
      runAfter:
        - gitops-process-mongo-user
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: dns_provider
          value: $(params.dns_provider)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_domain
          value: $(params.mas_domain)
        - name: cis_subdomain
          value: $(params.cis_subdomain)
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
        - name: mas_manual_cert_mgmt
          value: $(params.mas_manual_cert_mgmt)
        - name: cis_proxy
          value: $(params.cis_proxy)
        - name: cis_crn
          value: $(params.cis_crn)
        - name: cis_apikey
          value: $(params.cis_apikey)
        - name: mas_config_dir
          value: $(params.mas_config_dir)
      taskRef:
        kind: Task
        name: gitops-suite-certs
      when:
        - input: "$(params.mas_manual_cert_mgmt)"
          operator: in
          values: ["True"]
      workspaces:
        - name: configs
          workspace: configs
        - name: certificates
          workspace: shared-certificates
    - name: gitops-suite
      runAfter:
        - gitops-license
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mongo_provider
          value: $(params.mongo_provider)
        - name: git_branch
          value: $(params.git_branch)
        - name: github_org
          value: $(params.github_org)
        - name: github_repo
          value: $(params.github_repo)
        - name: github_host
          value: $(params.github_host)
        - name: git_commit_msg
          value: $(params.git_commit_msg)
        - name: sls_channel
          value: $(params.sls_channel)
        - name: mas_channel
          value: $(params.mas_channel)
        - name: mas_annotations
          value: $(params.mas_annotations)
        - name: mas_image_tags
          value: $(params.mas_image_tags)
        - name: mas_labels
          value: $(params.mas_labels)
        - name: mas_domain
          value: $(params.mas_domain)
        - name: github_pat
          value: $(params.github_pat)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: icr_cp
          value: $(params.icr_cp)
        - name: icr_cp_open
          value: $(params.icr_cp_open)
      taskRef:
        kind: Task
        name: gitops-suite
      workspaces:
        - name: configs
          workspace: configs
    - name: gitops-suite-config
      runAfter:
        - gitops-suite
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mongo_provider
          value: $(params.mongo_provider)
        - name: git_branch
          value: $(params.git_branch)
        - name: github_org
          value: $(params.github_org)
        - name: github_repo
          value: $(params.github_repo)
        - name: github_host
          value: $(params.github_host)
        - name: git_commit_msg
          value: $(params.git_commit_msg)
        - name: github_pat
          value: $(params.github_pat)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        name: gitops-suite-config
        kind: Task
    - name: gitops-suite-workspace
      runAfter:
        - gitops-suite-config
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: workspace_id
          value: $(params.workspace_id)
        - name: workspace_name
          value: $(params.workspace_name)
        - name: git_branch
          value: $(params.git_branch)
        - name: github_org
          value: $(params.github_org)
        - name: github_repo
          value: $(params.github_repo)
        - name: github_host
          value: $(params.github_host)
        - name: git_commit_msg
          value: $(params.git_commit_msg)
        - name: github_pat
          value: $(params.github_pat)
      taskRef:
        kind: Task
        name: gitops-suite-workspace
      workspaces:
        - name: configs
          workspace: configs
    - name: gitops-suite-smtp-config
      runAfter:
        - gitops-suite-config
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: git_branch
          value: $(params.git_branch)
        - name: github_org
          value: $(params.github_org)
        - name: github_repo
          value: $(params.github_repo)
        - name: github_host
          value: $(params.github_host)
        - name: git_commit_msg
          value: $(params.git_commit_msg)
        - name: github_pat
          value: $(params.github_pat)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: smtp_host
          value: $(params.smtp_host)
        - name: smtp_port
          value: $(params.smtp_port)
        - name: smtp_security
          value: $(params.smtp_security)
        - name: smtp_authentication
          value: $(params.smtp_authentication)
        - name: smtp_default_sender_email
          value: $(params.smtp_default_sender_email)
        - name: smtp_default_sender_name
          value: $(params.smtp_default_sender_name)
        - name: smtp_default_recipient_email
          value: $(params.smtp_default_recipient_email)
        - name: smtp_default_should_email_passwords
          value: $(params.smtp_default_should_email_passwords)
        - name: smtp_username
          value: $(params.smtp_username)
        - name: smtp_password
          value: $(params.smtp_password)
      taskRef:
        kind: Task
        name: gitops-suite-smtp-config
      when:
        - input: "$(params.smtp_host)"
          operator: notin
          values: [""]
      workspaces:
        - name: configs
          workspace: configs
    - name: gitops-suite-idp-config
      runAfter:
        - gitops-suite-config
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: git_branch
          value: $(params.git_branch)
        - name: github_org
          value: $(params.github_org)
        - name: github_repo
          value: $(params.github_repo)
        - name: github_host
          value: $(params.github_host)
        - name: git_commit_msg
          value: $(params.git_commit_msg)
        - name: github_pat
          value: $(params.github_pat)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: ldap_url
          value: $(params.ldap_url)
        - name: ldap_basedn
          value: $(params.ldap_basedn)
        - name: ldap_userid_map
          value: $(params.ldap_userid_map)
        - name: ldap_certificate_file
          value: $(params.ldap_certificate_file)
        - name: ldap_bind_dn
          value: $(params.ldap_bind_dn)
        - name: ldap_bind_password
          value: $(params.ldap_bind_password)
      taskRef:
        kind: Task
        name: gitops-suite-idp-config
      when:
        - input: "$(params.ldap_url)"
          operator: notin
          values: [""]
      workspaces:
        - name: configs
          workspace: configs
        - name: shared-additional-configs
          workspace: shared-additional-configs
    - name: gitops-efs
      runAfter:
        - gitops-suite-config
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: cloud_provider
          value: $(params.cloud_provider)
      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-efs
    - name: gitops-kafka
      runAfter:
        - gitops-suite-config
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: github_repo
          value: $(params.github_repo)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: kafka_provider
          value: $(params.kafka_provider)
        - name: kafka_version
          value: $(params.kafka_version)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: vpc_ipv4_cidr
          value: $(params.vpc_ipv4_cidr)
        - name: kafkacfg_file_name
          value: $(params.kafkacfg_file_name)
      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-kafka
      when:
        - input: "$(params.kafka_action)"
          operator: notin
          values: [""]
    - name: gitops-kafka-config
      runAfter:
        - gitops-kafka
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: git_branch
          value: $(params.git_branch)
        - name: github_org
          value: $(params.github_org)
        - name: github_repo
          value: $(params.github_repo)
        - name: github_host
          value: $(params.github_host)
        - name: git_commit_msg
          value: $(params.git_commit_msg)
        - name: github_pat
          value: $(params.github_pat)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-kafka-config
      when:
        - input: "$(params.kafka_action)"
          operator: notin
          values: [""]
