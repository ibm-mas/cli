#!/bin/bash

function update_help() {
  [[ -n "$1" ]] && echo_warning "$1"
  reset_colors
  cat << EOM
Usage:
  mas update [options]
Where ${COLOR_YELLOW}specified${TEXT_RESET} each option may also be defined by setting the appropriate environment variable.
When no options are specified on the command line, interactive-mode will be enabled by default.

Maximo Operator Catalog Selection (Required):
  -c, --catalog ${COLOR_YELLOW}MAS_CATALOG_VERSION${TEXT_RESET}     Maximo Operator Catalog Version (e.g. v8-220805)

Other Commands:
      --no-confirm                      Mirror images without prompting for confirmation
  -h, --help                            Show this help message
EOM
  [[ -n "$1" ]] && exit 1 || exit 0
}


function update_noninteractive() {
  while [[ $# -gt 0 ]]
  do
    key="$1"
    shift
    case $key in
      -c|--catalog)
        MAS_CATALOG_VERSION=$1 && shift
        ;;
      --no-confirm)
        NO_CONFIRM=true
        ;;
      -h|--help)
        update_help
        ;;
      *)
        # unknown option
        echo -e "${COLOR_RED}Usage Error: Unsupported option \"${key}\"${COLOR_RESET}\n"
        update_help
        exit 1
        ;;
      esac
  done

  # Check all args have been set
  [[ -z "$MAS_CATALOG_VERSION" ]] && update_help "MAS_CATALOG_VERSION is not set"
}

function update_interactive() {
  connect

  echo
  echo_h2 "Select IBM Maximo Operator Catalog Version"

  echo -e "${COLOR_YELLOW}MAS Catalog:"
  echo "  1. v8 (2022-10-25)"
  echo "  2. v8 (2022-09-27)"
  echo "  3. v8 (2022-08-05)"
  echo "  4. v8 (2022-07-17)"
  prompt_for_input "Select Catalog Version" MAS_CATALOG_SELECTION "1"

  case $MAS_CATALOG_SELECTION in
    1|221025|2022-10-25)
      MAS_CATALOG_VERSION=v8-221025-amd64
      ;;
    2|220927|2022-09-27)
      MAS_CATALOG_VERSION=v8-220927-amd64
      ;;
    3|220805|2022-08-05)
      MAS_CATALOG_VERSION=v8-220805-amd64
      ;;
    4|220717|2022-07-17)
      MAS_CATALOG_VERSION=v8-220717-amd64
      ;;
    *)
      echo_warning "Invalid selection"
      exit 1
      ;;
  esac
}


function update() {
  # Take the first parameter off (it will be "update")
  shift
  if [[ $# -gt 0 ]]; then
    update_noninteractive "$@"
  else
    update_interactive
  fi

  export MAS_CATALOG_VERSION
  echo
  reset_colors
  echo_h2 "Review Settings"

  echo "${TEXT_DIM}"
  echo_h2 "IBM Operator Catalog" "    "
  echo_reset_dim "Catalog Version ..................... ${COLOR_MAGENTA}${MAS_CATALOG_VERSION}"

  echo
  reset_colors
  if [[ "$NO_CONFIRM" != "true" ]]; then
    prompt_for_confirm "Proceed with these settings" || exit 0
  fi

  echo
  echo_h2 "Launch Update"

  # Create namespace, install MAS Tekton definitions, configure RBAC
  pipeline_install_tasks || exit 1

  # Replace ALL environment variables in templates
  eval "echo \"$(cat $DIR/templates/pipelinerun-update.yaml)\"" > $CONFIG_DIR/pipelinerun-$MAS_INSTANCE_ID-update.yaml

  # Start pipeline execution
  oc -n mas-$MAS_INSTANCE_ID-pipelines create -f $CONFIG_DIR/pipelinerun-$MAS_INSTANCE_ID-update.yaml &>> $LOGFILE || exit 1
  echo -e "${COLOR_GREEN}Update started successfully${COLOR_RESET}"
  echo -e "\nView progress:\n  ${COLOR_CYAN}${TEXT_UNDERLINE}https://${OCP_CONSOLE_ROUTE}/pipelines/ns/mas-$MAS_INSTANCE_ID-pipelines${TEXT_RESET}${COLOR_RESET}"
  echo

}
