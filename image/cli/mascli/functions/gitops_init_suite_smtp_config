#!/usr/bin/env bash

function gitops_init_suite_smtp_config_help() {
  [[ -n "$1" ]] && echo_warning "$1"
  reset_colors
  cat << EOM
Usage:
  mas gitops_init_suite_smtp_config [options]
Where ${COLOR_YELLOW}specified${TEXT_RESET} each option may also be defined by setting the appropriate environment variable.
When no options are specified on the command line, interactive-mode will be enabled by default.

Options:

GitOps Configuration:
  -d, --dir ${COLOR_YELLOW}GITOPS_WORKING_DIR${TEXT_RESET}           Working directory for GitOps repository
  -g, --gitops-version ${COLOR_YELLOW}GITOPS_VERSION${TEXT_RESET}    Version of ibm-mas/gitops to use
  -a, --account-id ${COLOR_YELLOW}ACCOUNT_ID${TEXT_RESET}            Account name that the cluster belongs to
  -c, --cluster-id ${COLOR_YELLOW}CLUSTER_ID${TEXT_RESET}            Cluster ID
  -m, --mas-instance-id ${COLOR_YELLOW}MAS_INSTANCE_ID${TEXT_RESET}  IBM Suite Maximo Application Suite Instance ID

Secrets Manager:
      --secrets-path ${COLOR_YELLOW}SECRETS_PATH${TEXT_RESET}                    Secrets Manager path
      --secrets-key-seperator ${COLOR_YELLOW}SECRETS_KEY_SEPERATOR${TEXT_RESET}  Secrets Manager key seperator string

MAS SMTP Options:
      --smtp-display-name ${COLOR_YELLOW}SMTP_DISPLAY_NAME${TEXT_RESET}                                       Display name for SmtpCfg resource
      --smtp-host ${COLOR_YELLOW}SMTP_HOST{TEXT_RESET}                                                        Host of the SMTP server
      --smtp-port ${COLOR_YELLOW}SMTP_PORT${TEXT_RESET}                                                       Port of the SMTP server
      --smtp-security ${COLOR_YELLOW}SMTP_SECURITY${TEXT_RESET}                                               Security protocol. None, STARTTLS or SSL
      --smtp-authentication ${COLOR_YELLOW}SMTP_AUTHENTICATION${TEXT_RESET}                                   true or false on whether to authenticate
      --smtp-default-sender-email ${COLOR_YELLOW}SMTP_DEFAULT_SENDER_EMAIL${TEXT_RESET}                       The default sender email
      --smtp-default-sender-name ${COLOR_YELLOW}SMTP_DEFAULT_SENDER_NAME${TEXT_RESET}                         The default sender name
      --smtp-default-recipient-email ${COLOR_YELLOW}SMTP_DEFAULT_RECIPIENT_EMAIL${TEXT_RESET}                 The default recipient email
      --smtp-default-should-email-passwords ${COLOR_YELLOW}SMTP_DEFAULT_SHOULD_EMAIL_PASSWORDS${TEXT_RESET}   true or false on sending email passwords
      --smtp-username ${COLOR_YELLOW}SMTP_USERNAME${TEXT_RESET}                                               Username for SMTP server authentication
      --smtp-password ${COLOR_YELLOW}SMTP_PASSWORD${TEXT_RESET}                                               Password for SMTP server authenticaiton

Automatic GitHub Push:
  -P, --github-push ${COLOR_YELLOW}GITHUB_PUSH${TEXT_RESET}        Enable automatic push to GitHub
  -H, --github-host ${COLOR_YELLOW}GITHUB_HOST${TEXT_RESET}        GitHub Hostname for your GitOps repository
  -O, --github-org  ${COLOR_YELLOW}GITHUB_ORG${TEXT_RESET}         Github org for your GitOps repository
  -R, --github-repo ${COLOR_YELLOW}GITHUB_REPO${TEXT_RESET}        Github repo for your GitOps repository
  -B, --git-branch ${COLOR_YELLOW}GIT_BRANCH${TEXT_RESET}          Git branch to commit to of your GitOps repository
  -M, --git-commit-msg ${COLOR_YELLOW}GIT_COMMIT_MSG${TEXT_RESET}  Git commit message to use when committing to of your GitOps repository
  -S , --github-ssh  ${COLOR_YELLOW}GIT_SSH${TEXT_RESET}           Git ssh key path

Other Commands:
  -h, --help                                      Show this help message
EOM
  [[ -n "$1" ]] && exit 1 || exit 0
}

function gitops_init_suite_smtp_config_noninteractive() {
  GITOPS_WORKING_DIR=$PWD/working-dir
  SECRETS_KEY_SEPERATOR="/"
  GIT_COMMIT_MSG="gitops-init-mas-smtp-config commit"
  export GITOPS_VERSION=${GITOPS_VERSION:-poc}
  export SMTP_DISPLAY_NAME=${SMTP_DISPLAY_NAME:="Suite SMTP"}

  while [[ $# -gt 0 ]]
  do
    key="$1"
    shift
    case $key in
      -d|--dir)
        export GITOPS_WORKING_DIR=$1 && shift
        ;;
      -g|--gitops-version)
        export GITOPS_VERSION=$1 && shift
        ;;
      -a|--account-id)
        export ACCOUNT_ID=$1 && shift
        ;;
      -c|--cluster-id)
        export CLUSTER_ID=$1 && shift
        ;;
      -m|--mas-instance-id)
        export MAS_INSTANCE_ID=$1 && shift
        ;;

      # Secrets Manager
      --secrets-path)
        export SECRETS_PATH=$1 && shift
        ;;
      --secrets-key-seperator)
        export SECRETS_KEY_SEPERATOR=$1 && shift
        ;;

      # SMTP
      --smtp-display-name)
        export SMTP_DISPLAY_NAME=$1 && shift
        ;;
      --smtp-host)
        export SMTP_HOST=$1 && shift
        ;;
      --smtp-port)
        export SMTP_PORT=$1 && shift
        ;;
      --smtp-security)
        export SMTP_SECURITY=$1 && shift
        ;;
      --smtp-authentication)
        export SMTP_AUTHENTICATION=$1 && shift
        ;; 
      --smtp-default-sender-email)
        export SMTP_DEFAULT_SENDER_EMAIL=$1 && shift
        ;;
      --smtp-default-sender-name)
        export SMTP_DEFAULT_SENDER_NAME=$1 && shift
        ;;
      --smtp-default-recipient-email)
        export SMTP_DEFAULT_RECIPIENT_EMAIL=$1 && shift
        ;;
      --smtp-default-should-email-passwords)
        export SMTP_DEFAULT_SHOULD_EMAIL_PASSWORDS=$1 && shift
        ;;
      --smtp-username)
        export SMTP_USERNAME=$1 && shift
        ;;
      --smtp-password)
        export SMTP_PASSWORD=$1 && shift
        ;;

      # Automatic GitHub Push
      -P|--github-push)
        export GITHUB_PUSH=true
        ;;
      -H|--github-host)
        export GITHUB_HOST=$1 && shift
        ;;
      -O|--github-org)
        export GITHUB_ORG=$1 && shift
        ;;
      -R|--github-repo)
        export GITHUB_REPO=$1 && shift
        ;;
      -B|--git-branch)
        export GIT_BRANCH=$1 && shift
        ;;
      -M|--git-commit-msg)
        export GIT_COMMIT_MSG=$1 && shift
        ;;
       -S|--github-ssh)
        export GIT_SSH=$1 && shift
        ;;

      -h|--help)
        gitops_init_suite_smtp_config_help
        ;;
      *)
        # unknown option
        echo -e "${COLOR_RED}Usage Error: Unsupported option \"${key}\"${COLOR_RESET}\n"
        gitops_init_suite_smtp_config_help  "Usage Error: Unsupported option \"${key}\" "
        exit 1
        ;;
      esac
  done

  [[ -z "$GITOPS_WORKING_DIR" ]] && gitops_init_suite_smtp_config_help "GITOPS_WORKING_DIR is not set"
  [[ -z "$GITOPS_VERSION" ]] && gitops_init_suite_smtp_config_help "GITOPS_VERSION is not set"
  [[ -z "$CLUSTER_ID" ]] && gitops_init_suite_smtp_config_help "CLUSTER_ID is not set"
  [[ -z "$ACCOUNT_ID" ]] && gitops_init_suite_smtp_config_help "ACCOUNT_ID is not set"
  if [[ "$GITHUB_PUSH" == "true" ]]; then
    [[ -z "$GITHUB_HOST" ]] && gitops_init_suite_smtp_config_help "GITHUB_HOST is not set"
    [[ -z "$GITHUB_ORG" ]] && gitops_init_suite_smtp_config_help "GITHUB_ORG is not set"
    [[ -z "$GITHUB_REPO" ]] && gitops_init_suite_smtp_config_help "GITHUB_REPO is not set"
    [[ -z "$GIT_BRANCH" ]] && gitops_init_suite_smtp_config_help "GIT_BRANCH is not set"
  fi
  [[ -z "$SMTP_HOST" ]] && gitops_init_suite_smtp_config_help "SMTP_HOST is not set"
  [[ -z "$SMTP_PORT" ]] && gitops_init_suite_smtp_config_help "SMTP_PORT is not set"
  [[ -z "$SMTP_SECURITY" ]] && gitops_init_suite_smtp_config_help "SMTP_SECURITY is not set"
  [[ -z "$SMTP_AUTHENTICATION" ]] && gitops_init_suite_smtp_config_help "SMTP_AUTHENTICATION is not set"
  [[ -z "$SMTP_DEFAULT_SENDER_EMAIL" ]] && gitops_init_suite_smtp_config_help "SMTP_DEFAULT_SENDER_EMAIL is not set"
  [[ -z "$SMTP_DEFAULT_SENDER_NAME" ]] && gitops_init_suite_smtp_config_help "SMTP_DEFAULT_SENDER_NAME is not set"
  [[ -z "$SMTP_DEFAULT_RECIPIENT_EMAIL" ]] && gitops_init_suite_smtp_config_help "SMTP_DEFAULT_RECIPIENT_EMAIL is not set"
  [[ -z "$SMTP_DEFAULT_SHOULD_EMAIL_PASSWORDS" ]] && gitops_init_suite_smtp_config_help "SMTP_DEFAULT_SHOULD_EMAIL_PASSWORDS is not set"
  [[ -z "$SMTP_USERNAME" ]] && gitops_init_suite_smtp_config_help "SMTP_USERNAME is not set"
  [[ -z "$SMTP_PASSWORD" ]] && gitops_init_suite_smtp_config_help "SMTP_PASSWORD is not set"
}

function gitops_init_suite_smtp_config() {
  # Take the first parameter off (it will be create-gitops)
  shift
  if [[ $# -gt 0 ]]; then
    gitops_init_suite_smtp_config_noninteractive "$@"
  else
    echo "Not supported yet"
    exit 1
    gitops_init_suite_smtp_config_interactive
  fi

  mkdir -p ${GITOPS_WORKING_DIR}
  GITOPS_CLUSTER_DIR=${GITOPS_WORKING_DIR}/${GITHUB_REPO}/${CLUSTER_ID}
  GITOPS_APPS_DIR=${GITOPS_CLUSTER_DIR}/apps

  echo
  reset_colors
  echo_h2 "Review Settings"

  echo "${TEXT_DIM}"
  echo_h2 "Target" "    "
  echo_reset_dim "Account ID............................. ${COLOR_MAGENTA}${ACCOUNT_ID}"
  echo_reset_dim "Cluster ID ............................ ${COLOR_MAGENTA}${CLUSTER_ID}"
  echo_reset_dim "Application Directory ................. ${COLOR_MAGENTA}${GITOPS_APPS_DIR}"
  reset_colors

  echo "${TEXT_DIM}"
  echo_h2 "Secrets Manager" "    "
  echo_reset_dim "Secrets Path .......................... ${COLOR_MAGENTA}${SECRETS_PATH}"
  reset_colors

  echo "${TEXT_DIM}"
  echo_h2 "GitOps Source" "    "
  echo_reset_dim "GitOps URL ............................ ${COLOR_MAGENTA}https://github.com/ibm-mas/gitops"
  echo_reset_dim "GitOps Version ........................ ${COLOR_MAGENTA}${GITOPS_VERSION}"
  reset_colors

  echo "${TEXT_DIM}"
  if [[ "$GITHUB_PUSH" == "true" ]]; then
    echo_h2 "GitOps Target" "    "
    echo_reset_dim "Automatic Push ........................ ${COLOR_GREEN}Enabled"
    echo_reset_dim "Working Directory ..................... ${COLOR_MAGENTA}${GITOPS_WORKING_DIR}"
    echo_reset_dim "Host .................................. ${COLOR_MAGENTA}${GITHUB_HOST}"
    echo_reset_dim "Organization .......................... ${COLOR_MAGENTA}${GITHUB_ORG}"
    echo_reset_dim "Repository ............................ ${COLOR_MAGENTA}${GITHUB_REPO}"
    echo_reset_dim "Branch ................................ ${COLOR_MAGENTA}${GIT_BRANCH}"
  else
    echo_h2 "GitOps Target" "    "
    echo_reset_dim "Automatic Push ........................ ${COLOR_RED}Disabled"
    echo_reset_dim "Working Directory ..................... ${COLOR_MAGENTA}${GITOPS_WORKING_DIR}"
  fi
  reset_colors  

  echo "${TEXT_DIM}"
  echo_h2 "IBM Maximo Application Suite" "    "
  echo_reset_dim "Instance ID ........................... ${COLOR_MAGENTA}${MAS_INSTANCE_ID}"
  reset_colors

  echo "${TEXT_DIM}"
  echo_h2 "IBM Maximo Application Suite SMTP Config" "    "
  echo_reset_dim "SmtpCfg Display Name ........................... ${COLOR_MAGENTA}${SMTP_DISPLAY_NAME}"
  echo_reset_dim "Smtp Server Host ............................... ${COLOR_MAGENTA}${SMTP_HOST}"
  echo_reset_dim "Smtp Server Port ............................... ${COLOR_MAGENTA}${SMTP_PORT}"
  echo_reset_dim "Smtp Security Protocol ......................... ${COLOR_MAGENTA}${SMTP_SECURITY}"
  echo_reset_dim "Smtp Authentication ............................ ${COLOR_MAGENTA}${SMTP_AUTHENTICATION}"
  echo_reset_dim "Smtp Default Sender Email ...................... ${COLOR_MAGENTA}${SMTP_DEFAULT_SENDER_EMAIL}"
  echo_reset_dim "Smtp Default Sender Name ....................... ${COLOR_MAGENTA}${SMTP_DEFAULT_SENDER_NAME}"
  echo_reset_dim "Smtp Default Recipient Email ................... ${COLOR_MAGENTA}${SMTP_DEFAULT_RECIPIENT_EMAIL}"
  echo_reset_dim "Smtp Should Email Passwords .................... ${COLOR_MAGENTA}${SMTP_DEFAULT_SHOULD_EMAIL_PASSWORDS}"
  echo_reset_dim "Smtp Server Username ........................... ${COLOR_MAGENTA}${SMTP_USERNAME}"
  echo_reset_dim "Smtp Server Password ........................... ${COLOR_MAGENTA}${SMTP_PASSWORD:0:4}<snip>"
  reset_colors

  # Set up Suite secrets
  # ---------------------------------------------------------------------------
  echo
  echo_h2 "Configuring Suite secrets"
  AVP_TYPE=aws  # Support for IBM will be added later
  sm_login

  # Set the instance-level values to used
  # ---------------------------------------------------------------------------
  SECRET_NAME_SMTP=${SECRET_PREFIX}${ACCOUNT_ID}${SECRETS_KEY_SEPERATOR}${CLUSTER_ID}${SECRETS_KEY_SEPERATOR}${MAS_INSTANCE_ID}${SECRETS_KEY_SEPERATOR}smtp
  sm_update_secret $SECRET_NAME_SMTP "{\"username\": \"$SMTP_USERNAME\", \"password\": \"$SMTP_PASSWORD\"}"
  export SECRET_KEY_SMTP_USERNAME=${SECRET_NAME_SMTP}#username
  export SECRET_KEY_SMTP_PASSWORD=${SECRET_NAME_SMTP}#password

  CURRENT_DIR=$PWD
  TEMP_DIR=$CURRENT_DIR/tmp-mas-smtp-config-init
  rm -rf $TEMP_DIR
  mkdir -p $TEMP_DIR

  if [ -z $GIT_SSH ]; then
    export GIT_SSH="false"
  fi

  # Clone github target repo
  # ---------------------------------------------------------------------------
  if [ "$GITHUB_PUSH" == "true" ]; then
    echo
    echo_h2 "Cloning GitHub repo $GITHUB_ORG $GITHUB_REPO"
    clone_target_git_repo $GITHUB_HOST $GITHUB_ORG $GITHUB_REPO $GIT_BRANCH $GITOPS_WORKING_DIR $GIT_SSH
  fi
  mkdir -p ${GITOPS_APPS_DIR}

  # Generate ArgoApps
  # ---------------------------------------------------------------------------
  # Per MAS instance
  jinja -X .+ $DIR/templates/gitops/ibm-mas-smtp-config.yaml.j2 -o ${GITOPS_APPS_DIR}/${MAS_INSTANCE_ID}.ibm-mas-smtp-config.yaml

  # Commit and push to github target repo
  # ---------------------------------------------------------------------------
  if [ "$GITHUB_PUSH" == "true" ]; then
    echo
    echo_h2 "Commit and push changes to GitHub repo $GITHUB_ORG $GITHUB_REPO"
    save_to_target_git_repo $GITHUB_HOST $GITHUB_ORG $GITHUB_REPO $GIT_BRANCH $GITOPS_APPS_DIR "${GIT_COMMIT_MSG}"
    remove_git_repo_clone $GITOPS_WORKING_DIR/$GITHUB_REPO

    argocd_login
    argocd_sync ${CLUSTER_ID}-watcher
    argocd_hard_refresh mas-${MAS_INSTANCE_ID}-mas-smtp-config
    check_argo_app_synced mas-${MAS_INSTANCE_ID}-mas-smtp-config
    check_argo_app_healthy mas-${MAS_INSTANCE_ID}-mas-smtp-config
  fi

  rm -rf $TEMP_DIR

}
