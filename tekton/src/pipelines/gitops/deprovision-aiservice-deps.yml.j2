---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
{% if wait_for_deprovision == true %}
  name: gitops-deprovision-aiservice-deps-after-deprovision
{% else %}
  name: gitops-deprovision-aiservice-deps
{% endif %}
spec:
  description: Deprovision docDb, kafka and COS
  workspaces:
    - name: configs
  params:
{% if wait_for_deprovision == true %}
      # Name of the PipelineRun to wait for
    - name: pipelinerun_name
      type: string
    - name: ignore_failure
      type: string
      default: "False"
      description: Set to 'True' or 'False' (case-sensitive) to configure whether this pipeline continue if the pipeline we are waiting for has failed.
{% endif %}
    - name: cluster_name
      type: string
    - name: ocp_version
      type: string
    - name: avp_type
      type: string
    - name: avp_aws_secret_region
      type: string
    - name: avp_aws_secret_key
      type: string
    - name: avp_aws_access_key
      type: string

    # 1. Gitops git Parameters
    # -------------------------------------------------------------------------
    {{ lookup('template', params_src_dir ~ '/gitops-git.yml.j2') | indent(4) }}

    - name: github_url
      type: string
    - name: rosa_token
      type: string
    - name: account
      type: string
    - name: secrets_path
      type: string
    - name: ibmcloud_resourcegroup
      type: string
      description: Name of an existing Resource Group in IBM Cloud account
      default: "Default"
    - name: ibmcloud_apikey
      type: string
      default: ""
    - name: mas_instance_id
      type: string
    - name: aws_docdb_instance_number
      type: string
      default: 3
    - name: jdbc_type_aiservice
      type: string
    - name: jdbc_instance_name_aiservice
      type: string
    - name: jdbc_connection_url_aiservice
      type: string
      default: ""
    - name: jdbc_certificate_file_aiservice
      type: string
      default: ""
    - name: jdbc_route_aiservice
      type: string
      default: ""

    # Setting Parameters
    # -----------------------------------------------------------------------------
    - name: cloud_provider
      type: string
      default: aws
    - name: efs_action
      type: string
      description: efs action to be performed (provision or deprovision)
      default: ""
    - name: cluster_url
      type: string
      default: ""
    - name: mas_app_channel_aiservice
      type: string
      description: Subscription channel for AI Service application operator
      default: ""
    - name: mas_edition
      type: string
      default: ""
    - name: mas_workspace_id
      type: string
      default: ""
    - name: mongo_provider
      type: string
      default: aws
    - name: mongodb_action
      type: string
      description: Optional. Used to uninstall MongoDB
      default: ""
    - name: region
      type: string
    - name: vpc_ipv4_cidr
      type: string

  tasks:
{% if wait_for_deprovision == true %}
    # 0. Wait for the deprovsion mas pipeline to complete
    # -------------------------------------------------------------------------
    - name: wait-for-deprovision
      timeout: "0"
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: $(params.pipelinerun_name)
        - name: delay
          value: 120  # seconds between checking the status of the pipelinerun
        - name: max_retries
          value: 120  # attempts before giving up
        - name: ignore_failure
          value: $(params.ignore_failure)  # fails and exit once the first failure is detected
{% endif %}

    # Deprovision EFS
    # -------------------------------------------------------------------------
    - name: gitops-deprovision-efs
{% if wait_for_deprovision == true %}
      runAfter:
        - wait-for-deprovision
{% endif %}
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        - name: cluster_name
          value: $(params.cluster_name)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: cloud_provider
          value: $(params.cloud_provider)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: efs_action
          value: $(params.efs_action)
      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-deprovision-efs

    # Deprovision Mongo
    # -------------------------------------------------------------------------
    - name: gitops-deprovision-mongo
      runAfter:
        - gitops-deprovision-efs
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: vpc_ipv4_cidr
          value: $(params.vpc_ipv4_cidr)
        - name: mongo_provider
          value: $(params.mongo_provider)
        - name: aws_docdb_instance_number
          value: $(params.aws_docdb_instance_number)
      taskRef:
        kind: Task
        name: gitops-deprovision-mongo
      workspaces:
        - name: configs
          workspace: configs
      when:
        - input: "$(params.mongodb_action)"
          operator: notin
          values: [""]

    # Deprovision DB2 Database
    # -------------------------------------------------------------------------
    - name: gitops-delete-jdbc-config-aiservice
      runAfter:
        - gitops-deprovision-mongo
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: aiservice
        - name: mas_config_scope
          value: system
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)
        - name: jdbc_type
          value: $(params.jdbc_type_aiservice)
        - name: jdbc_instance_name
          value: $(params.jdbc_instance_name_aiservice)
        - name: jdbc_connection_url
          value: $(params.jdbc_connection_url_aiservice)
        - name: jdbc_certificate_file
          value: $(params.jdbc_certificate_file_aiservice)
        - name: jdbc_route
          value: $(params.jdbc_route_aiservice)
      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-delete-jdbc-config
      when:
        - input: "$(params.mas_app_channel_aiservice)"
          operator: in
          values: [""]
        - input: "$(params.mas_edition)"
          operator: in
          values: [ "standard", "premium"]

    - name: gitops-deprovision-db2u-database-aiservice
      runAfter:
        - gitops-delete-jdbc-config-aiservice
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: aiservice

      taskRef:
        kind: Task
        name: gitops-deprovision-db2u-database
      workspaces:
        - name: configs
          workspace: configs
      when:
        - input: "$(params.mas_app_channel_aiservice)"
          operator: in
          values: [""]
        - input: "$(params.mas_edition)"
          operator: in
          values: ["standard", "premium"]

    # Deprovision DB2U Operator
    # -------------------------------------------------------------------------
    - name: gitops-deprovision-db2u-aiservice
      runAfter:
        - gitops-deprovision-db2u-database-aiservice
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)

      taskRef:
        kind: Task
        name: gitops-deprovision-db2u
      workspaces:
        - name: configs
          workspace: configs
