#!/bin/bash

function mirror_to_registry_help() {
  [[ -n "$1" ]] && echo_warning "$1"
  reset_colors
  cat << EOM
Usage:
  mas mirror-images [options]
Where ${COLOR_YELLOW}specified${TEXT_RESET} each option may also be defined by setting the appropriate environment variable.
When no options are specified on the command line, interactive-mode will be enabled by default.

Registry Details (Required):
  -H, --host ${COLOR_YELLOW}REGISTRY_PUBLIC_HOST${TEXT_RESET}                 Hostname of the target registry
  -P, --port ${COLOR_YELLOW}REGISTRY_PUBLIC_PORT${TEXT_RESET}                 Port number for the target registry

Registry Authentication (Optional):
  -u, --username ${COLOR_YELLOW}REGISTRY_USERNAME${TEXT_RESET}                Username to authenticate to the target registry
  -p, --password ${COLOR_YELLOW}REGISTRY_PASSWORD${TEXT_RESET}                Password to authenticate to the target registry

Source Registry Entitlements (Required based on what content you choose to mirror):
      --ibm-entitlement ${COLOR_YELLOW}IBM_ENTITLEMENT_KEY${TEXT_RESET}       IBM Entitlement Key
      --redhat-username ${COLOR_YELLOW}REDHAT_CONNECT_USERNAME${TEXT_RESET}   Red Hat Connect Username
      --redhat-password ${COLOR_YELLOW}REDHAT_CONNECT_PASSWORD${TEXT_RESET}   Red Hat Connect Password

Red Hat Catalog Selection (Optional):
      --mirror-redhat-release ${COLOR_YELLOW}OPENSHIFT_RELEASE_VERSION${TEXT_RESET}      Mirror Red Hat Operator catalog image at the specified release (e.g. 4.10)
      --mirror-redhat-operators ${COLOR_YELLOW}OPENSHIFT_OPERATORS_VERSION${TEXT_RESET}  Mirror Red Hat Release catalog images at the specified version (e.g. 4.10.18)

Maximo Operator Catalog Selection (Optional):
  -c, --catalog ${COLOR_YELLOW}MAS_CATALOG_VERSION${TEXT_RESET}               Maximo Operator Catalog Version to mirror (e.g. v8-220805)
      --mirror-core                               Mirror images for IBM Maximo Application Suite Core & dependencies
      --mirror-assist                             Mirror images for IBM Maximo Assist
      --mirror-hputilities                        Mirror images for IBM Maximo Health & Predict Utilities
      --mirror-iot                                Mirror images for IBM Maximo IoT & dependencies
      --mirror-manage                             Mirror images for IBM Maximo Manage & dependencies
      --mirror-monitor                            Mirror images for IBM Maximo Monitor
      --mirror-predict                            Mirror images for IBM Maximo Predict
      --mirror-optimizer                          Mirror images for IBM Maximo Optimizer
      --mirror-visualinspection                   Mirror images for IBM Maximo Visual Inspection

Maximo Core Image Mirroring Configuration (Optional):
      --skip-cfs                                  Skip mirroring images for IBM Cloud Pak Foundation Services
      --skip-uds                                  Skip mirroring images for IBM User Data Services
      --skip-sls                                  Skip mirroring images for IBM Suite License Service
      --skip-tsm                                  Skip mirroring images for IBM Truststore Manager
      --skip-mongo                                Skip mirroring images for MongoDb Community Edition

Maximo IoT Image Mirroring Configuration (Optional):
      --skip-db2                                  Skip mirroring images for IBM Db2

Maximo Manage Image Mirroring Configuration (Optional):
      --skip-db2                                  Skip mirroring images for IBM Db2

Other Commands:
      --no-confirm                                Mirror images without prompting for confirmation
  -h, --help                                      Show this help message
EOM
  [[ -n "$1" ]] && exit 1 || exit 0
}


function mirror_to_registry_noninteractive() {
  # Red Hat
  MIRROR_RH_RELEASE=false
  MIRROR_RH_OPERATORS=false
  # Main content
  MIRROR_MAS_CORE=false
  MIRROR_MAS_ASSIST=false
  MIRROR_MAS_HPUTILITIES=false
  MIRROR_MAS_IOT=false
  MIRROR_MAS_MANAGE=false
  MIRROR_MAS_MONITOR=false
  MIRROR_MAS_PREDICT=false
  MIRROR_MAS_OPTIMIZER=false
  MIRROR_MAS_VISUALINSPECTION=false
  MIRROR_MAS_X=false
  # Dependencies
  MIRROR_COMMONSERVICES=true
  MIRROR_UDS=true
  MIRROR_SLS=true
  MIRROR_TRUSTSTOREMGR=true
  MIRROR_MONGOCE=true
  MIRROR_DB2U=true
  while [[ $# -gt 0 ]]
  do
    key="$1"
    shift
    case $key in
      -H|--host)
        REGISTRY_PUBLIC_HOST=$1 && shift
        ;;
      -P|--port)
        REGISTRY_PUBLIC_PORT=$1 && shift
        ;;
      -u|--username)
        REGISTRY_USERNAME=$1 && shift
        ;;
      -p|--password)
        REGISTRY_PASSWORD=$1 && shift
        ;;
      --ibm-entitlement)
        IBM_ENTITLEMENT_KEY=$1 && shift
        ;;
      --redhat-username)
        REDHAT_CONNECT_USERNAME=$1 && shift
        ;;
      --redhat-password)
        REDHAT_CONNECT_PASSWORD=$1 && shift
        ;;
      --mirror-redhat-release)
        MIRROR_RH_RELEASE=true
        OPENSHIFT_RELEASE_VERSION=$1 && shift
        ;;
      --mirror-redhat-operators)
        MIRROR_RH_OPERATORS=true
        OPENSHIFT_OPERATORS_VERSION=$1 && shift
        ;;
      -c|--catalog)
        MAS_CATALOG_VERSION=$1 && shift
        ;;
      --mirror-core)
        MIRROR_MAS_CORE=true
        MIRROR_MAS_X=true
        ;;
      --mirror-assist)
        MIRROR_MAS_ASSIST=true
        MIRROR_MAS_X=true
        ;;
      --mirror-hputilities)
        MIRROR_MAS_HPUTILITIES=true
        MIRROR_MAS_X=true
        ;;
      --mirror-iot)
        MIRROR_MAS_IOT=true
        MIRROR_MAS_X=true
        ;;
      --mirror-manage)
        MIRROR_MAS_MANAGE=true
        MIRROR_MAS_X=true
        ;;
      --mirror-monitor)
        MIRROR_MAS_MONITOR=true
        MIRROR_MAS_X=true
        ;;
      --mirror-predict)
        MIRROR_MAS_PREDICT=true
        MIRROR_MAS_X=true
        ;;
      --mirror-optimizer)
        MIRROR_MAS_OPTIMIZER=true
        MIRROR_MAS_X=true
        ;;
      --mirror-visualinspection)
        MIRROR_MAS_VISUALINSPECTION=true
        MIRROR_MAS_X=true
        ;;
      --skip-cfs)
        MIRROR_COMMONSERVICES=false
        ;;
      --skip-uds)
        MIRROR_UDS=false
        ;;
      --skip-sls)
        MIRROR_SLS=false
        ;;
      --skip-tsm)
        MIRROR_TRUSTSTOREMGR=false
        ;;
      --skip-mongo)
        MIRROR_MONGOCE=false
        ;;
      --skip-db2)
        MIRROR_DB2U=false
        ;;
      --no-confirm)
        NO_CONFIRM=true
        ;;
      -h|--help)
        mirror_to_registry_help
        ;;
      *)
        # unknown option
        echo -e "${COLOR_RED}Usage Error: Unsupported option \"${key}\"${COLOR_RESET}\n"
        mirror_to_registry_help
        exit 1
        ;;
      esac
  done

  # Check all args have been set
  [[ -z "$REGISTRY_PUBLIC_HOST" ]] && mirror_to_registry_help "REGISTRY_PUBLIC_HOST is not set"
  [[ -z "$REGISTRY_PUBLIC_PORT" ]] && mirror_to_registry_help "REGISTRY_PUBLIC_PORT is not set"
  if [[ $MIRROR_MAS_X == "true" ]]; then
    [[ -z "$MAS_CATALOG_VERSION" ]] && mirror_to_registry_help "MAS_CATALOG_VERSION is not set"
    [[ -z "$IBM_ENTITLEMENT_KEY" ]] && mirror_to_registry_help "IBM_ENTITLEMENT_KEY is not set"
  fi
  if [[ $MIRROR_MAS_CORE == "true" ]]; then
    if [[ $MIRROR_UDS == "true" || $MIRROR_RH_RELEASE == "true" || $MIRROR_RH_OPERATORS == "true" ]]; then
      [[ -z "$REDHAT_CONNECT_USERNAME" ]] && mirror_to_registry_help "REDHAT_CONNECT_USERNAME is not set"
      [[ -z "$REDHAT_CONNECT_PASSWORD" ]] && mirror_to_registry_help "REDHAT_CONNECT_PASSWORD is not set"
    fi
  fi
}

function mirror_to_registry_interactive() {
  echo
  echo_h2 "1. Configure Target Mirror"
  prompt_for_input "Mirror Registry Host" REGISTRY_PUBLIC_HOST
  prompt_for_input "Mirror Registry Port" REGISTRY_PUBLIC_PORT

  echo
  echo_h2 "2. Configure Authentication"
  prompt_for_input "Mirror Registry Username" REGISTRY_USERNAME
  prompt_for_input "Mirror Registry Password" REGISTRY_PASSWORD

  echo
  echo_h2 "3. Configure Static Catalog Version"

  echo -e "${COLOR_YELLOW}MAS Version:"
  echo "  1. 8.8.1 (2022-09-27)"
  echo "  2. 8.8.0 (2022-08-05)"
  echo "  3. 8.8.0 (2022-07-17)"
  prompt_for_input "Select Catalog Source" MAS_CHANNEL_SELECTION "1"

  case $MAS_CHANNEL_SELECTION in
    1|220927|2022-09-27)
      MAS_CHANNEL=8.8.x
      MAS_CATALOG_SOURCE=ibm-operator-catalog
      MAS_CATALOG_VERSION=v8-220927-amd64
      ;;
    2|220805|2022-08-05)
      MAS_CHANNEL=8.8.x
      MAS_CATALOG_SOURCE=ibm-operator-catalog
      MAS_CATALOG_VERSION=v8-220805-amd64
      ;;
    3|220717|2022-07-17)
      MAS_CHANNEL=8.8.x
      MAS_CATALOG_SOURCE=ibm-operator-catalog
      MAS_CATALOG_VERSION=v8-220717
      # We are deliberately leaving this without the -amd64 to ensure this is not a breaking change
      # for anyone already using v8-220717
      ;;
    *)
      echo_warning "Invalid selection"
      exit 1
      ;;
  esac

  echo
  echo_h2 "4. Configure Images to Mirror"
  echo "${TEXT_DIM}"
  echo "Timing are an estimate only, and will vary based on the quality of the host network connection"
  reset_colors
  prompt_for_confirm "Mirror all images (~1 hour)" MIRROR_EVERYTHING

  if [[ "$MIRROR_EVERYTHING" == "true" ]]; then
    MIRROR_RH_RELEASE=true
    prompt_for_input "Red Hat Openshift Release Version (x.y.z)" OPENSHIFT_RELEASE_VERSION "4.10.18"

    MIRROR_RH_OPERATORS=true
    prompt_for_input "Red Hat Openshift Operator Catalog Version (x.y)" OPENSHIFT_OPERATORS_VERSION "4.10"

    # Core + Dependencies
    MIRROR_MAS_CORE=true
    MIRROR_COMMONSERVICES=true
    MIRROR_UDS=true
    MIRROR_SLS=true
    MIRROR_TRUSTSTOREMGR=true
    MIRROR_MONGOCE=true
    # Apps
    MIRROR_MAS_ASSIST=true
    MIRROR_MAS_HPUTILITIES=true
    MIRROR_MAS_IOT=true
    MIRROR_MAS_MANAGE=true
    MIRROR_MAS_MONITOR=true
    MIRROR_MAS_PREDICT=true
    MIRROR_MAS_OPTIMIZER=true
    MIRROR_MAS_VISUALINSPECTION=true
    # App Dependencies
    MIRROR_DB2U=true
  else
    prompt_for_confirm "Red Hat OpenShift Container Platform Release" MIRROR_RH_RELEASE
    if [[ "$MIRROR_RH_RELEASE" == "true" ]]; then
      prompt_for_input "Release Version (x.y.z)" OPENSHIFT_RELEASE_VERSION "4.10.18"
    fi

    prompt_for_confirm "Red Hat OpenShift Container Platform Operator Catalog" MIRROR_RH_OPERATORS
    if [[ "$MIRROR_RH_OPERATORS" == "true" ]]; then
      prompt_for_input "Operator Catalog Version (x.y)" OPENSHIFT_OPERATORS_VERSION "4.10"
    fi

    prompt_for_confirm_default_yes "IBM Maximo Application Suite - Core" MIRROR_MAS_CORE
    if [[ "$MIRROR_MAS_CORE" == "true" ]]; then
      prompt_for_confirm_default_yes " + IBM Foundational Services" MIRROR_COMMONSERVICES
      prompt_for_confirm_default_yes " + IBM User Data Services" MIRROR_UDS
      prompt_for_confirm_default_yes " + IBM Suite License Service" MIRROR_SLS
      prompt_for_confirm_default_yes " + IBM Truststore Manager" MIRROR_TRUSTSTOREMGR
      prompt_for_confirm_default_yes " + MongoDb Community Edition" MIRROR_MONGOCE
    fi

    prompt_for_confirm "IBM Maximo Application Suite - IoT" MIRROR_MAS_IOT
    prompt_for_confirm "IBM Maximo Application Suite - HP Utilities" MIRROR_MAS_HPUTILITIES
    prompt_for_confirm "IBM Maximo Application Suite - Manage" MIRROR_MAS_MANAGE
    prompt_for_confirm "IBM Maximo Application Suite - Monitor" MIRROR_MAS_MONITOR
    prompt_for_confirm "IBM Maximo Application Suite - Predict" MIRROR_MAS_PREDICT
    prompt_for_confirm "IBM Maximo Application Suite - Optimizer" MIRROR_MAS_OPTIMIZER
    prompt_for_confirm "IBM Maximo Application Suite - Visual Inspection" MIRROR_MAS_VISUALINSPECTION
    if [[ "$MIRROR_MAS_IOT" == "true" || "$MIRROR_MAS_MANAGE" == "true" ]]; then
      prompt_for_confirm_default_yes " + IBM Db2" MIRROR_DB2U
    fi
  fi

  echo
  echo_h2 "5. Configure Authentication"
  prompt_for_input "IBM Entitlement Key" IBM_ENTITLEMENT_KEY

  if [[ $MIRROR_UDS == "true" || $MIRROR_RH_RELEASE == "true"  || $MIRROR_RH_OPERATORS == "true" ]]; then
    prompt_for_input "Red Hat Connect Username" REDHAT_CONNECT_USERNAME
    prompt_for_input "Red Hat Connect Password" REDHAT_CONNECT_PASSWORD
  fi
}


function mirror_one_thing() {
    MOT_RUNMIRROR=$1
    MOT_NAME=$2
    MOT_LOGFILE=$3
    MOT_PLAYBOOK=$4
    if [[ "$MOT_RUNMIRROR" == "true" ]]; then
    echo -en "\033[s" # Save cursor position
    echo -n "Mirroring ${MOT_NAME} ... ${MOT_LOGFILE}"
    ansible-playbook ibm.mas_airgap.${MOT_PLAYBOOK} &> ${MOT_LOGFILE}
    mirror_result=$?
    echo -en "\033[1K" # Clear current line
    echo -en "\033[u" # Restore cursor position
    if [[ $mirror_result == "0" ]];
    then echo -e "${COLOR_GREEN}[SUCCESS] ${MOT_NAME}: ${MOT_LOGFILE}${COLOR_RESET}"
    else echo -e "${COLOR_RED}[FAILURE] ${MOT_NAME}: ${MOT_LOGFILE}${COLOR_RESET}"
    fi
  else
    echo -e "${COLOR_MAGENTA}[SKIPPED] ${MOT_NAME}${COLOR_RESET}"
  fi
}


function show_mirror_status() {
  if [[ "$2" == "true" ]]
  then echo_reset_dim "$1 ${COLOR_GREEN}Mirror"
  else echo_reset_dim "$1 ${COLOR_RED}Skip"
  fi
}

function mirror_to_registry() {
  # Take the first parameter off (it will be mirror-images)
  shift
  if [[ $# -gt 0 ]]; then
    mirror_to_registry_noninteractive "$@"
  else
    mirror_to_registry_interactive
  fi

  # Ensure all environment variables are available to ansible-playbook

  # General Config
  export MAS_CATALOG_VERSION
  export REGISTRY_PUBLIC_HOST
  export REGISTRY_PUBLIC_PORT
  export REGISTRY_USERNAME
  export REGISTRY_PASSWORD
  # Red Hat Catalogs
  export OPENSHIFT_RELEASE_VERSION
  export OPENSHIFT_OPERATORS_VERSION
  # Core & Dependencies
  export MIRROR_MAS_CORE
  export MIRROR_COMMONSERVICES
  export MIRROR_UDS
  export MIRROR_SLS
  export MIRROR_TRUSTSTOREMGR
  export MIRROR_MONGOCE
  # Apps & Dependencies
  export MIRROR_MAS_ASSIST
  export MIRROR_MAS_HPUTILITIES
  export MIRROR_MAS_IOT
  export MIRROR_MAS_MANAGE
  export MIRROR_MAS_MONITOR
  export MIRROR_MAS_PREDICT
  export MIRROR_MAS_OPTIMIZER
  export MIRROR_MAS_VISUALINSPECTION
  export MIRROR_DB2U
  # Authentication
  export IBM_ENTITLEMENT_KEY
  export REDHAT_CONNECT_USERNAME
  export REDHAT_CONNECT_PASSWORD

  echo
  reset_colors
  echo_h2 "Review Settings"

  echo "${TEXT_DIM}"
  echo_h2 "Target Registry Connection" "    "
  echo_reset_dim "Registry Host ......................... ${COLOR_MAGENTA}${REGISTRY_PUBLIC_HOST}"
  echo_reset_dim "Registry Port ......................... ${COLOR_MAGENTA}${REGISTRY_PUBLIC_PORT}"
  reset_colors

  echo "${TEXT_DIM}"
  echo_h2 "Target Registry Authentication" "    "
  echo_reset_dim "Registry Username ..................... ${COLOR_MAGENTA}${REGISTRY_USERNAME}"
  echo_reset_dim "Registry Password ..................... ${COLOR_MAGENTA}${REGISTRY_PASSWORD:0:4}<snip>"
  reset_colors

  echo "${TEXT_DIM}"
  echo_h2 "Red Hat Release Catalog" "    "
  if [[ "$MIRROR_RH_RELEASE" == "true" ]]
  then
    echo_reset_dim "Catalog Version ....................... ${COLOR_MAGENTA}${OPENSHIFT_RELEASE_VERSION}"
    echo_reset_dim "Authentication ........................ ${COLOR_MAGENTA}${REDHAT_CONNECT_USERNAME}/${REDHAT_CONNECT_PASSWORD:0:4}<snip>"
  else
    echo_reset_dim "${COLOR_RED}Skip"
  fi
  reset_colors

  echo "${TEXT_DIM}"
  echo_h2 "Red Hat Operator Catalog" "    "
  if [[ "$MIRROR_RH_OPERATORS" == "true" ]]
  then
    echo_reset_dim "Catalog Version ....................... ${COLOR_MAGENTA}${OPENSHIFT_OPERATORS_VERSION}"
    echo_reset_dim "Red Hat Connect Authentication ........ ${COLOR_MAGENTA}${REDHAT_CONNECT_USERNAME}/${REDHAT_CONNECT_PASSWORD:0:4}<snip>"
  else
    echo_reset_dim "${COLOR_RED}Skip"
  fi
  reset_colors

  echo "${TEXT_DIM}"
  echo_h2 "IBM Operator Catalog" "    "
  if [[ "$MIRROR_MAS_CORE" == "true" || "$MIRROR_MAS_ASSIST" == "true" || "$MIRROR_MAS_HPUTILITIES" == "true" || "$MIRROR_MAS_IOT" == "true" \
        || "$MIRROR_MAS_MANAGE" == "true" || "$MIRROR_MAS_MONITOR" == "true" || "$MIRROR_MAS_PREDICT" == "true" \
        || "$MIRROR_MAS_OPTIMIZER" == "true" || "$MIRROR_MAS_VISUALINSPECTION" == "true" ]]
  then
    echo_reset_dim "Catalog Version ..................... ${COLOR_MAGENTA}${MAS_CATALOG_VERSION}"
    echo_reset_dim "IBM Authentication .................. ${COLOR_MAGENTA}cp/${IBM_ENTITLEMENT_KEY:0:4}<snip>"

    # Core
    show_mirror_status "IBM Maximo Application Suite Core ..." $MIRROR_MAS_CORE

    # Applications
    show_mirror_status "IBM Maximo Assist ..................." $MIRROR_MAS_ASSIST
    show_mirror_status "IBM Maximo IoT ......................" $MIRROR_MAS_IOT
    show_mirror_status "IBM Maximo Manage ..................." $MIRROR_MAS_MANAGE
    show_mirror_status "IBM Maximo Monitor .................." $MIRROR_MAS_MONITOR
    show_mirror_status "IBM Maximo Predict .................." $MIRROR_MAS_PREDICT
    show_mirror_status "IBM Maximo Optimizer ................" $MIRROR_MAS_OPTIMIZER
    show_mirror_status "IBM Maximo Visual Inspection ........" $MIRROR_MAS_VISUALINSPECTION

    # Core Dependencies
    if [[ "$MIRROR_MAS_CORE" == "true" ]]; then
      show_mirror_status " + IBM Cloud Pak Foundation Services " $MIRROR_COMMONSERVICES
      show_mirror_status " + IBM User Data Services ..........." $MIRROR_UDS
      show_mirror_status " + IBM Suite License Service ........" $MIRROR_SLS
      show_mirror_status " + IBM Truststore Manager ..........." $MIRROR_TRUSTSTOREMGR
      show_mirror_status " + MongoDb Community Edition ........" $MIRROR_MONGOCE
    fi
    # IoT & Manage Dependencies
    if [[ "$MIRROR_MAS_IOT" == "true" || "$MIRROR_MAS_MANAGE" == "true" ]]; then
      show_mirror_status " + IBM Db2 .......................... " $MIRROR_DB2U
    fi
  else
    echo_reset_dim "${COLOR_RED}Skip"
  fi
  reset_colors

  echo
  reset_colors
  if [[ "$NO_CONFIRM" != "true" ]]; then
    prompt_for_confirm "Proceed with these settings" || exit 0
  fi

  echo
  echo_h2 "4. Run Mirror Process"
  TIMESTAMP=$(date "+%Y%m%d-%H%M%S")
  LOG_PREFIX="$LOG_DIR/mirror-$TIMESTAMP"

  mirror_one_thing $MIRROR_RH_RELEASE           "Red Hat Release"                    "$LOG_PREFIX-ocp-release.log"   mirror_openshift_release
  mirror_one_thing $MIRROR_RH_OPERATORS         "Red Hat Operators"                  "$LOG_PREFIX-ocp-operators.log" mirror_openshift_operators

  mirror_one_thing $MIRROR_MAS_CORE             "IBM Maximo Application Suite Core"  "$LOG_PREFIX-core.log"             mirror_core
  mirror_one_thing $MIRROR_MAS_ASSIST           "IBM Maximo Assist"                  "$LOG_PREFIX-assist.log"           mirror_add_assist
  mirror_one_thing $MIRROR_MAS_HPUTILITIES      "IBM Maximo HP Utilties"             "$LOG_PREFIX-hputilties.log"       mirror_add_hputilities
  mirror_one_thing $MIRROR_MAS_IOT              "IBM Maximo IoT"                     "$LOG_PREFIX-iot.log"              mirror_add_iot
  mirror_one_thing $MIRROR_MAS_MANAGE           "IBM Maximo Manage"                  "$LOG_PREFIX-manage.log"           mirror_add_manage
  mirror_one_thing $MIRROR_MAS_MONITOR          "IBM Maximo Monitor"                 "$LOG_PREFIX-monitor.log"          mirror_add_monitor
  mirror_one_thing $MIRROR_MAS_PREDICT          "IBM Maximo Predict"                 "$LOG_PREFIX-predict.log"          mirror_add_predict
  mirror_one_thing $MIRROR_MAS_OPTIMIZER        "IBM Maximo Optimizer"               "$LOG_PREFIX-optimizer.log"        mirror_add_optimizer
  mirror_one_thing $MIRROR_MAS_VISUALINSPECTION "IBM Maximo Visual Inspection"       "$LOG_PREFIX-visualinspection.log" mirror_add_visualinspection
}
