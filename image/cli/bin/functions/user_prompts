 #!/bin/bash

function prompt_for_ocp_version() {
  echo
  echo "OCP Version:"
  echo "  1. 4.10 EUS (MAS 8.7-8.8)"
  echo "  2. 4.8 EUS  (MAS 8.6-8.8)"
  prompt_for_input "Select Version" OCP_VERSION_SELECTION "1"

  case $OCP_VERSION_SELECTION in
    1|4.10|4.10\ EUS)
      export OCP_VERSION=4.10_openshift
      ;;

    2|4.8|4.8\ EUS)
      export OCP_VERSION=4.8_openshift
      ;;

    *)
      export OCP_VERSION=$OCP_VERSION_SELECTION
      ;;
  esac
 }



function prompt_aws_access_key_id() {
if [[ -z "$AWS_ACCESS_KEY_ID" ]]; then
    echo ""
    echo_h2 "AWS Access Key ID"
    echo "Provide your AWS API Key ID (if you have not set the AWS_ACCESS_KEY_ID"
    echo "environment variable) which will be used to provision an AWS instance."
    prompt_for_input "AWS API Key ID" AWS_ACCESS_KEY_ID && export AWS_ACCESS_KEY_ID
  else
    prompt_for_confirm_default_yes "Re-use saved AWS API Key ID Starting '$AWS_ACCESS_KEY_ID'?" REUSE_AWS_AUTH
    if [[ "$REUSE_AWS_AUTH" == "false" ]]; then
      prompt_for_input "AWS Access Key ID" AWS_ACCESS_KEY_ID && export AWS_ACCESS_KEY_ID
    fi
  fi
}


function prompt_aws_secret_access_key() {
  if [[ -z "$AWS_SECRET_ACCESS_KEY" ]]; then
    echo ""
    echo_h2 "AWS Secret Access Key"
    echo "Provide your AWS Secret Access Key (if you have not set the AWS_SECRET_ACCESS_KEY"
    echo "environment variable) which will be used to provision an AWS instance."
    echo ""
    prompt_for_input "AWS Secret Access Key" AWS_SECRET_ACCESS_KEY && export AWS_SECRET_ACCESS_KEY
  else
    prompt_for_confirm_default_yes "Re-use saved AWS Secret Access Key Starting '$AWS_SECRET_ACCESS_KEY'?" REUSE_AWS_AUTH
    if [[ "$REUSE_AWS_AUTH" == "false" ]]; then
      prompt_for_input "AWS Secret Access Key" AWS_SECRET_ACCESS_KEY && export AWS_SECRET_ACCESS_KEY
    fi
  fi

}

function prompt_aws_cluster_configuration() {
  echo ""
  echo_h2 "AWS Cluster Configuration"
  prompt_for_input "Cluster Name" CLUSTER_NAME && export CLUSTER_NAME
}