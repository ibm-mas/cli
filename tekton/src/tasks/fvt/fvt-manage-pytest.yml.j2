---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mas-fvt-manage-pytest
spec:
  params:
    # Control the image pull policy for the FVT container image
    - name: image_pull_policy
      type: string
      default: IfNotPresent

    # Test Container Information
    # -------------------------------------------------------------------------
    - name: fvt_image_registry
      type: string
      description: FVT Container Image Registry (required)
    - name: fvt_image_namespace
      type: string
      description: FVT Image namespace
      default: mas-devops
    - name: fvt_image_name
      type: string
      description: FVT Container Image
    - name: fvt_image_digest
      type: string
      description: FVT Container Image Digest

    # Test Framework Information
    # -------------------------------------------------------------------------
    - name: fvt_enable_debug
      type: string
      description: Turn on debug logging (verbose mode)
      default: "true"
    - name: fvt_test_suite_prefix
      type: string
      description: text to prefix fvt_test_suite in devops database followed by hyphen
      default: ""
    - name: fvt_test_suite
      type: string
      description: If the FVT container image contains multiple suites, use this to control the suite that will be executed
      default: ""
    - name: fvt_mas_appws_component
      type: string
      description: Manage product that will be tested by this task. Use official names as expected by Manage operators
      default: "base"
    - name: product_id
      type: string
      description: Product ID under test
      default: ibm-mas
    - name: product_channel
      type: string
      description: "Subscription channel for the product (todo: have the test code look this up instead)"
      default: ""
    - name: mas_instance_id
      type: string
      description: Instance ID of the target test environment

  stepTemplate:
    name: 'fvt-manage-pytest'
    env:
      - name: PRODUCT_ID
        value: $(params.product_id)
      - name: PRODUCT_CHANNEL
        value: $(params.product_channel)

      - name: DEVOPS_MONGO_URI
        valueFrom:
          secretKeyRef:
            name: mas-devops
            key: DEVOPS_MONGO_URI
            optional: true
      - name: BUILD_NUM
        valueFrom:
          secretKeyRef:
            name: mas-devops
            key: DEVOPS_BUILD_NUMBER
            optional: true

      - name: IBMADMIN_ENABLED
        value: "true"

      - name: NAMESPACE
        value: "mas-$(params.mas_instance_id)-core"
      - name: INSTANCE_ID
        value: "$(params.mas_instance_id)"
      - name: WORKSPACE_ID
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: MAS_WORKSPACE_ID
            optional: false

      - name: FVT_TEST_SUITE_PREFIX
        value: $(params.fvt_test_suite_prefix)
      - name: FVT_TEST_SUITE
        value: $(params.fvt_test_suite)
      - name: FVT_MAS_APPWS_COMPONENT
        value: $(params.fvt_mas_appws_component)

      - name: FVT_ENABLE_DEBUG
        value: "$(params.fvt_enable_debug)"

      - name: ARTIFACTORY_TOKEN
        valueFrom:
          secretKeyRef:
            name: mas-fvt
            key: FVT_ARTIFACTORY_TOKEN
            optional: false
      - name: ARTIFACTORY_UPLOAD_DIR
        valueFrom:
          secretKeyRef:
            name: mas-devops
            key: ARTIFACTORY_UPLOAD_DIR
            optional: true

      # Black and white listing
      - name: FVT_BLACKLIST
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: FVT_BLACKLIST
            optional: false
      - name: FVT_WHITELIST
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: FVT_WHITELIST
            optional: false
      - name: FVT_BLACKLIST_IS
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: FVT_BLACKLIST_IS
            optional: false
      - name: FVT_WHITELIST_IS
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: FVT_WHITELIST_IS
            optional: false

      # Test Data
      - name: LDAP_URL
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: LDAP_URL
            optional: false
      - name: LDAP_BASE_DN
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: LDAP_BASE_DN
            optional: false
      - name: LDAP_BIND_DN
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: LDAP_BIND_DN
            optional: false
      - name: LDAP_BIND_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: LDAP_BIND_PASSWORD
            optional: false
      - name: LDAP_USER_MAP
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: LDAP_USER_MAP
            optional: false
      - name: LDAP_CERT_ALIAS
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: LDAP_CERT_ALIAS
            optional: false
      - name: LDAP_CRT
        valueFrom:
          secretKeyRef:
            name: mas-fvt-manage
            key: LDAP_CRT
            optional: false


  steps:
    - image: '$(params.fvt_image_registry)/$(params.fvt_image_namespace)/$(params.fvt_image_name)@$(params.fvt_image_digest)'
      imagePullPolicy: $(params.image_pull_policy)
      timeout: 120m  # Ensure bad FVTs don't run forever
      onError: continue  # Ensure bad FVTs don't break the pipeline
      resources: {}
      workingDir: /opt/ibm/test/src
      volumeMounts:
        - mountPath: /dev/shm
          name: dshm
  volumes:
    - name: dshm
      emptyDir:
        medium: Memory

  workspaces:
    - name: configs
