#!/bin/bash

function configure_ocp_for_mirror() {
  echo
  echo_h2 "1. Configure Target Mirror"

  if [[ $OUTPUT_DIR == "" ]]; then
    export OUTPUT_DIR="$HOME/mirror_to_registry"
  fi
  prompt_for_input "Input directory" OUTPUT_DIR
  export OUTPUT_DIR
  export LOG_DIR=${OUTPUT_DIR}/log
  mkdir -p $LOG_DIR

  prompt_for_input "Mirror Registry Host" REGISTRY_PRIVATE_HOST && export REGISTRY_PRIVATE_HOST
  prompt_for_input "Mirror Registry Port" REGISTRY_PRIVATE_PORT && export REGISTRY_PRIVATE_PORT
  prompt_for_confirm "Mirror Registry secure" REGISTRY_SECURE
  export REGISTRY_SECURE
  prompt_for_input "Mirror Registry CA File" REGISTRY_PRIVATE_CA_FILE && export REGISTRY_PRIVATE_CA_FILE

  echo
  echo_h2 "2. Configure for OpenShift Release"
  prompt_for_confirm "Configure for OpenShift Release" CONFIG_OPENSHIFT_RELEASE
  if [[ $CONFIG_OPENSHIFT_RELEASE == "true" ]]; then
    prompt_for_input "Red Hat OpenShift Release" OPENSHIFT_RELEASE_VERSION
    export OPENSHIFT_RELEASE_VERSION
  fi

  prompt_for_confirm "Configure for four OpenShift standard operator catalogs" CONFIG_OPENSHIFT_OPERATORS

  prompt_for_confirm "Configure IBM Foundational Services Images" CONFIG_COMMONSERVICES
  if [[ $CONFIG_COMMONSERVICES == "true" ]]; then
    export PROMPT_FOR_ENTITLEMENT_KEY=true
  fi

  prompt_for_confirm "Configure IBM User Data Services Images" CONFIG_UDS
  if [[ $CONFIG_UDS == "true" ]]; then
    export PROMPT_FOR_ENTITLEMENT_KEY=true
    export PROMPT_FOR_REDHAT_CONNECT=true
  fi

  prompt_for_confirm "Configure IBM Suite License Service Images" CONFIG_SLS
  if [[ $CONFIG_SLS == "true" ]]; then
    export PROMPT_FOR_ENTITLEMENT_KEY=true
  fi

  prompt_for_confirm "Configure IBM Truststore Manager Images" CONFIG_TRUSTSTOREMGR
  if [[ $CONFIG_TRUSTSTOREMGR == "true" ]]; then
    export PROMPT_FOR_ENTITLEMENT_KEY=true
  fi

  prompt_for_confirm "Configure IBM Maximo Application Suite Core Images" CONFIG_MASCORE
  if [[ $CONFIG_MASCORE == "true" ]]; then
    export PROMPT_FOR_ENTITLEMENT_KEY=true
  fi

  prompt_for_confirm "Configure IBM Maximo Application Suite Manage Images" CONFIG_MASMANAGE
  if [[ $CONFIG_MASMANAGE == "true" ]]; then
    export PROMPT_FOR_ENTITLEMENT_KEY=true
  fi

  prompt_for_confirm "Configure Third Party Images (e.g. MongoDb CE)" CONFIG_THIRDPARTY

  if [[ $PROMPT_FOR_ENTITLEMENT_KEY == "true" ]]; then
    prompt_for_input "IBM Entitlement Key" IBM_ENTITLEMENT_KEY
    export IBM_ENTITLEMENT_KEY
  fi

  if [[ $PROMPT_FOR_REDHAT_CONNECT == "true" ]]; then
    prompt_for_input "Red Hat Connect Username" REDHAT_CONNECT_USERNAME
    prompt_for_input "Red Hat Connect Password" REDHAT_CONNECT_PASSWORD
    export REDHAT_CONNECT_USERNAME
    export REDHAT_CONNECT_PASSWORD
  fi

  if [[ $PROMPT_FOR_QUAY == "true" ]]; then
    prompt_for_input "Quay Username" QUAY_USERNAME
    prompt_for_input "Quay Password" QUAY_PASSWORD
    export QUAY_USERNAME
    export QUAY_PASSWORD
  fi

  echo
  echo_h2 "3. Confirm Options"
  prompt_for_confirm "Proceed with these settings" || exit 0

  echo
  echo_h2 "4. Run Configure Process"
  echo "WARNING: This may take a long time"
  [ "$CONFIG_OPENSHIFT_RELEASE" == "true" ]   && ansible-playbook ibm.mas_airgap.config_openshift_release
  [ "$CONFIG_OPENSHIFT_OPERATORS" == "true" ] && ansible-playbook ibm.mas_airgap.config_openshift_operators
  [ "$CONFIG_COMMONSERVICES" == "true" ]      && ansible-playbook ibm.mas_airgap.config_common_services
  [ "$CONFIG_UDS" == "true" ]                 && ansible-playbook ibm.mas_airgap.config_uds
  [ "$CONFIG_SLS" == "true" ]                 && ansible-playbook ibm.mas_airgap.config_sls
  [ "$CONFIG_TRUSTSTOREMGR" == "true" ]       && ansible-playbook ibm.mas_airgap.config_truststore_mgr
  [ "$CONFIG_MASCORE" == "true" ]             && ansible-playbook ibm.mas_airgap.config_mas_core
  [ "$CONFIG_MASMANAGE" == "true" ]           && ansible-playbook ibm.mas_airgap.config_mas_manage
# [ "$CONFIG_THIRDPARTY" == "true" ]          && ROLE_NAME=thirdparty_config ansible-playbook ibm.mas_airgap.run_role

  true
}
