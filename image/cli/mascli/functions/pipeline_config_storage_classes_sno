#!/bin/bash

# STORAGE_CLASS_RWO
# -----------------
# RWO: Usually this role is fulfilled by file storage classes; used by:
# - cluster monitoring (alert manager)
# - Db2 (meta and backup volumes)
#
# - prometheus_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - prometheus_alertmgr_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - prometheus_userworkload_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - grafana_instance_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - db2_data_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - db2_logs_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - db2_temp_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - kafka_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - mongodb_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - uds_storage_class [ibmc-block-bronze, ocs-storagecluster-ceph-rbd, managed-premium] (doesn't really need to be bronze)

# Unknown/TBC
# - appconnect_storage_class - doesn't support auto-select storage classes :(
# - cpd_metadata_storage_class [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]
# - cpd_primary_storage_class [ibmc-file-gold-gid, ocs-storagecluster-cephfs, azurefiles-premium]
# - cpd_service_storage_class [ibmc-file-gold-gid, ocs-storagecluster-cephfs, azurefiles-premium] / WD: [ibmc-block-gold, ocs-storagecluster-ceph-rbd, managed-premium]

function config_pipeline_storage_classes_sno() {
  if [[ "$SNO_MODE" == "true" ]]; then
    echo
    echo_h2 "6a. Configure Storage Class Usage"
    echo "${TEXT_DIM}Maximo Application Suite and it's dependencies require storage classes that support ReadWriteOnce (RWO) access mode:"
    echo "  - ReadWriteOnce volumes can be mounted as read-write by multiple pods on a single node."
    echo ""
    reset_colors

    # 4. AWS
    if [[ "$STORAGE_CLASS_RWX" == "" ]]; then
      oc get storageclass gp2 &>> $LOGFILE
      if [[ $? == "0" ]]; then
        echo -e "${COLOR_GREEN}Storage provider auto-detected: AWS gp2${COLOR_RESET}"
        echo "${TEXT_DIM}  - Storage class (ReadWriteOnce): gp2"
        #echo "${TEXT_DIM}  - Storage class (ReadWriteMany): efs"
        STORAGE_CLASS_PROVIDER=aws
        STORAGE_CLASS_RWO=gp2
        #STORAGE_CLASS_RWX=efs 
        STORAGE_CLASS_RWX=gp2
      fi
    fi
    reset_colors

    echo "${TEXT_DIM}  - SNO MODE is set to ${SNO_MODE}"
    PIPELINE_STORAGE_CLASS=$STORAGE_CLASS_RWO
    PIPELINE_STORAGE_ACCESSMODE="ReadWriteOnce"
  
    OVERRIDE_STORAGE_CLASSES=false
    if [[ "$STORAGE_CLASS_RWO" != "" ]]; then
      echo
      prompt_for_confirm "Choose your own storage classes anyway?" OVERRIDE_STORAGE_CLASSES
    fi

    # 5. You choose then ...
    if [[ "$STORAGE_CLASS_RWO" == "" || "$OVERRIDE_STORAGE_CLASSES" == "true" ]]; then
      STORAGE_CLASS_PROVIDER=custom
      echo ""
      echo "${COLOR_YELLOW}Select the ReadWriteOnce storage classes to use from the list below:"
      oc get storageclasses -o jsonpath='{range .items[*]}{" - "}{.metadata.name}{"\n"}{end}'
      echo ""
      prompt_for_input "ReadWriteOnce (RWO) storage class" STORAGE_CLASS_RWO

      STORAGE_CLASS_RWX=$STORAGE_CLASS_RWO
      # We prefer to use ReadWriteMany, but we can cope with ReadWriteOnce if necessary
      PIPELINE_STORAGE_CLASS=$STORAGE_CLASS_RWO
      PIPELINE_STORAGE_ACCESSMODE="ReadWriteOnce"
    fi
  fi
}
