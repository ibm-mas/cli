#!/bin/bash

function install_config_advanced() {
  echo
  echo_h2 "Advanced Settings"
  echo "${TEXT_DIM}Customize cluster monitoring storage settings, ingress certificate secret, workload scaling profile and default namespaces for MAS dependencies."
  echo
  reset_colors
  if prompt_for_confirm "Configure Advanced Settings?"; then
    echo
    install_config_workload_scale

    if prompt_for_confirm "Change Cluster monitoring storage defaults?"; then
      if [[ "$CLUSTER_MONITORING_INCLUDE_GRAFANA" == "True" ]]; then
        prompt_for_input "+ Grafana Storage Size" GRAFANA_INSTANCE_STORAGE_SIZE "10Gi"
      fi
      prompt_for_input "+ Prometheus Retention Period" PROMETHEUS_RETENTION_PERIOD "15d"
      prompt_for_input "+ Prometheus Storage Size" PROMETHEUS_STORAGE_SIZE "300Gi"
      prompt_for_input "+ Prometheus Alert Mgr Storage Size" PROMETHEUS_ALERTMGR_STORAGE_SIZE "300Gi"
      prompt_for_input "+ Prometheus User Workload Retention Period" PROMETHEUS_USERWORKLOAD_RETENTION_PERIOD "15d"
      prompt_for_input "+ Prometheus User Workload Storage Size" PROMETHEUS_USERWORKLOAD_STORAGE_SIZE "300Gi"
    fi
    echo

    if prompt_for_confirm "Change default install namespaces?"; then
      if [[ "$DB2_ACTION_SYSTEM" == "install" || "$DB2_ACTION_MANAGE" == "install" ]]; then
        prompt_for_input "+ Db2 Namespace" DB2_NAMESPACE "db2u"
      fi
      if [[ "$KAFKA_ACTION_SYSTEM" == "install" && ("$KAFKA_PROVIDER" == "strimzi" || "$KAFKA_PROVIDER" == "redhat") ]]; then
        if [[ "$KAFKA_PROVIDER" == "strimzi" ]]; then
          KAFKA_NAMESPACE="strimzi"
        else
          KAFKA_NAMESPACE="amq-streams"
        fi
        prompt_for_input "+ Kafka Namespace" KAFKA_NAMESPACE $KAFKA_NAMESPACE
      fi
      if [[ "$CLUSTER_MONITORING_INCLUDE_GRAFANA" == "True" ]]; then
        prompt_for_input "+ Grafana Namespace" GRAFANA_NAMESPACE "grafana"
      fi
      prompt_for_input "+ MongoDB Namespace" MONGODB_NAMESPACE "mongoce"
    fi
    echo

    if prompt_for_confirm "Change default cluster ingress certificate secret name?"; then
        prompt_for_input "+ Cluster ingress certificate secret name" OCP_INGRESS_TLS_SECRET_NAME $OCP_INGRESS_TLS_SECRET_NAME
    fi

    prompt_for_confirm_default_yes "Trust Default CAs?" MAS_TRUST_DEFAULT_CAS
  else
    clear_mas_workload_scale_envs
  fi
}
