#!/bin/bash

function echo_reset_dim() {
  echo "${COLOR_RESET}${TEXT_DIM}    $1"
}

function pipeline_show_config() {
  if [[ ! -e "$CONFIG_DIR/pipelinerun-$MAS_INSTANCE_ID.yaml" ]]; then
    echo_warning "No pipelinerun configuration exists for '$MAS_INSTANCE_ID'"
    exit 1
  fi

  reset_colors
  echo
  echo_h2 "Review Settings"
  echo "${TEXT_DIM}"
  echo_h4 "IBM Maximo Application Suite" "    "
  echo_reset_dim "Instance ID ............... ${COLOR_MAGENTA}${MAS_INSTANCE_ID}"
  echo_reset_dim "Workspace ID .............. ${COLOR_MAGENTA}${MAS_WORKSPACE_ID}"
  echo_reset_dim "Workspace Name ............ ${COLOR_MAGENTA}${MAS_WORKSPACE_NAME}"
  if [[ "${USE_NON_PROD_MODE}" == "true" ]]; then
    echo_reset_dim "Operation Mode ............ ${COLOR_MAGENTA}Non-production"
  else
    echo_reset_dim "Operation Mode ............ ${COLOR_MAGENTA}Production"
  fi

  if [[ "${MAS_DOMAIN}" != "" ]]; then
    echo_reset_dim "Domain Name ............... ${COLOR_MAGENTA}${MAS_DOMAIN}"
    echo_reset_dim "DNS Provider .............. ${COLOR_MAGENTA}${DNS_PROVIDER:-Manually configured}"
    echo_reset_dim "Certificate Issuer ........ ${COLOR_MAGENTA}${MAS_CLUSTER_ISSUER:-Self-Signed}"
  fi
  echo_reset_dim "Catalog Version ........... ${COLOR_MAGENTA}${MAS_CATALOG_VERSION}"
  echo_reset_dim "Subscription Channel ...... ${COLOR_MAGENTA}${MAS_CHANNEL}"
  echo_reset_dim "IBM Entitled Registry ..... ${COLOR_MAGENTA}${MAS_ICR_CP}"
  echo_reset_dim "IBM Open Registry ......... ${COLOR_MAGENTA}${MAS_ICR_CPOPEN}"
  echo_reset_dim "IBM Entitlement Key ....... ${COLOR_MAGENTA}${IBM_ENTITLEMENT_KEY:0:8}<snip>"
  if [[ "${DEV_MODE}" == "true" ]]; then
    echo_reset_dim "Artifactory Username ...... ${COLOR_MAGENTA}${ARTIFACTORY_USERNAME}<snip>"
    echo_reset_dim "Artifactory Token ......... ${COLOR_MAGENTA}${ARTIFACTORY_TOKEN:0:8}<snip>"
  fi

  reset_colors
  echo "${TEXT_DIM}"
  echo_h4 "IBM Maximo Application Suite Applications" "    "
  if [[ "${MAS_APP_CHANNEL_IOT}" == '' ]]
  then echo_reset_dim "IoT ....................... ${COLOR_RED}Skip Installation"
  else echo_reset_dim "IoT ....................... ${COLOR_MAGENTA}${MAS_APP_CHANNEL_IOT}"
  fi

  if [[ "${MAS_APP_CHANNEL_MONITOR}" == '' ]]
  then echo_reset_dim " - Monitor ................ ${COLOR_RED}Skip Installation"
  else echo_reset_dim " - Monitor ................ ${COLOR_MAGENTA}${MAS_APP_CHANNEL_MONITOR}"
  fi

  if [[ "${MAS_APP_CHANNEL_MANAGE}" == '' ]]
  then echo_reset_dim "Manage .................... ${COLOR_RED}Skip Installation"
  else
    echo_reset_dim "Manage .................... ${COLOR_MAGENTA}${MAS_APP_CHANNEL_MANAGE} (${MAS_APPWS_BINDINGS_JDBC_MANAGE} JDBC Config)"
    
    if [[ "${MAS_APPWS_COMPONENTS}" != '' ]]
    then echo_reset_dim " - Components ............. ${COLOR_MAGENTA}${MAS_APPWS_COMPONENTS}"
    fi

    if [[ "$MAS_APP_SETTINGS_SERVER_BUNDLES_SIZE" == "jms" || "$MAS_APP_SETTINGS_SERVER_BUNDLES_SIZE" == "snojms" ]]
    then echo_reset_dim " - Configure JMS .......... ${COLOR_MAGENTA}true"
    fi

    echo_reset_dim " - Include Demo Data ...... ${COLOR_MAGENTA}${MAS_APP_SETTINGS_DEMODATA}"
  fi

  if [[ "${MAS_APP_CHANNEL_PREDICT}" == '' ]]
  then echo_reset_dim " - Predict ................ ${COLOR_RED}Skip Installation"
  else echo_reset_dim " - Predict ................ ${COLOR_MAGENTA}${MAS_APP_CHANNEL_PREDICT}"
  fi

  if [[ "${MAS_APP_CHANNEL_OPTIMIZER}" == '' ]]
  then echo_reset_dim "Optimizer ................. ${COLOR_RED}Skip Installation"
  else echo_reset_dim "Optimizer ................. ${COLOR_MAGENTA}${MAS_APP_CHANNEL_OPTIMIZER} (${MAS_APP_PLAN_OPTIMIZER})"
  fi

  if [[ "${MAS_APP_CHANNEL_ASSIST}" == '' ]]
  then echo_reset_dim "Assist .................... ${COLOR_RED}Skip Installation"
  else echo_reset_dim "Assist .................... ${COLOR_MAGENTA}${MAS_APP_CHANNEL_ASSIST}"
  fi

  if [[ "${MAS_APP_CHANNEL_VISUALINSPECTION}" == '' ]]
  then echo_reset_dim "Visual Inspection ......... ${COLOR_RED}Skip Installation"
  else echo_reset_dim "Visual Inspection ......... ${COLOR_MAGENTA}${MAS_APP_CHANNEL_VISUALINSPECTION}"
  fi

  reset_colors
  echo "${TEXT_DIM}"
  echo_h4 "IBM Suite License Service" "    "
  echo_reset_dim "License ID ................ ${COLOR_MAGENTA}${SLS_LICENSE_ID}"
  echo_reset_dim "License File .............. ${COLOR_MAGENTA}${SLS_LICENSE_FILE_LOCAL}"
  echo_reset_dim "IBM Entitled Registry ..... ${COLOR_MAGENTA}${SLS_ICR_CP}"
  echo_reset_dim "IBM Open Registry ......... ${COLOR_MAGENTA}${SLS_ICR_CPOPEN}"

  reset_colors
  echo "${TEXT_DIM}"
  echo_h4 "MongoDB" "    "
  echo_reset_dim "Install Namespace ......... ${COLOR_MAGENTA}${MONGODB_NAMESPACE:-<default>}"

  reset_colors
  echo "${TEXT_DIM}"
  echo_h4 "IBM User Data Services" "    "
  echo_reset_dim "Contact Email ............. ${COLOR_MAGENTA}${UDS_CONTACT_EMAIL}"
  echo_reset_dim "First Name ................ ${COLOR_MAGENTA}${UDS_CONTACT_FIRSTNAME}"
  echo_reset_dim "Last Name ................. ${COLOR_MAGENTA}${UDS_CONTACT_LASTNAME}"

  if [[ "$DEPLOY_CP4D" == "run" ]]; then
    reset_colors
    echo "${TEXT_DIM}"
    echo_h4 "IBM Cloud Pak for Data" "    "
    echo_reset_dim "Entitlement Key ........... ${COLOR_MAGENTA}${IBM_ENTITLEMENT_KEY:0:8}<snip>"
    echo_reset_dim "Product Version ........... ${COLOR_MAGENTA}${CP4D_VERSION}"
    if [[ "${MAS_APP_CHANNEL_PREDICT}" != '' || "${MAS_APP_CHANNEL_ASSIST}" != '' ]]
    then
      echo
      if [[ "${MAS_APP_CHANNEL_PREDICT}" != '' ]]
      then
        echo_reset_dim " - Watson Studio .......... ${COLOR_MAGENTA}required for Predict"
        echo_reset_dim " - Watson Machine Learning  ${COLOR_MAGENTA}required for Predict"
        echo_reset_dim " - Analytics Engine ....... ${COLOR_MAGENTA}required for Predict"
      fi
      if [[ "${MAS_APP_CHANNEL_ASSIST}" != '' ]]
      then echo_reset_dim " - Watson Discovery ....... ${COLOR_MAGENTA}required for Assist"
      fi
      if [[ "${CPD_INSTALL_COGNOS}" != '' || "${CPD_INSTALL_SPSS}" != '' || "${CPD_INSTALL_OPENSCALE}" == '' ]]
      then
        if [[ "${CPD_INSTALL_OPENSCALE}" == 'true' ]]
        then echo_reset_dim " - Watson Openscale ....... ${COLOR_MAGENTA}optional for Predict"      
        fi
        if [[ "${CPD_INSTALL_SPSS}" == 'true' ]]
        then echo_reset_dim " - SPSS Modeler ........... ${COLOR_MAGENTA}optional for Predict"      
        fi
        if [[ "${CPD_INSTALL_COGNOS}" == 'true' ]]
        then echo_reset_dim " - Cognos Analytics ....... ${COLOR_MAGENTA}optional for Manage"
        fi
      fi
    fi
  fi

  if [[ "$DB2_ACTION_SYSTEM" == "install" || "$DB2_ACTION_MANAGE" == "install" ]]; then
    reset_colors
    echo "${TEXT_DIM}"
    echo_h4 "IBM Db2" "    "
    echo_reset_dim "Install Namespace ......... ${COLOR_MAGENTA}${DB2_NAMESPACE:-<default>}"
    echo_reset_dim "Subscription Channel ...... ${COLOR_MAGENTA}${DB2_CHANNEL}"

    echo_reset_dim "System Instance ........... ${COLOR_MAGENTA}${DB2_ACTION_SYSTEM}"
    echo_reset_dim "Dedicated Manage Instance . ${COLOR_MAGENTA}${DB2_ACTION_MANAGE}"

    echo_reset_dim "CPU Request ............... ${COLOR_MAGENTA}${DB2_CPU_REQUESTS:-<default>}"
    echo_reset_dim "CPU Limit ................. ${COLOR_MAGENTA}${DB2_CPU_LIMITS:-<default>}"
    echo_reset_dim "Memory Request ............ ${COLOR_MAGENTA}${DB2_MEMORY_REQUESTS:-<default>}"
    echo_reset_dim "Memory Limit .............. ${COLOR_MAGENTA}${DB2_MEMORY_LIMITS:-<default>}"

    echo_reset_dim "Meta Storage .............. ${COLOR_MAGENTA}${DB2_META_STORAGE_SIZE:-<default>}"
    echo_reset_dim "Data Storage .............. ${COLOR_MAGENTA}${DB2_DATA_STORAGE_SIZE:-<default>}"
    echo_reset_dim "Backup Storage ............ ${COLOR_MAGENTA}${DB2_BACKUP_STORAGE_SIZE:-<default>}"
    echo_reset_dim "Temp Storage .............. ${COLOR_MAGENTA}${DB2_TEMP_STORAGE_SIZE:-<default>}"
    echo_reset_dim "Transaction Logs Storage .. ${COLOR_MAGENTA}${DB2_LOGS_STORAGE_SIZE:-<default>}"

    if [[ "$DB2_SET_AFFINITY" == "true" ]]
      then echo_reset_dim "Node Affinity ............. ${COLOR_MAGENTA}${DB2_AFFINITY_KEY}=${DB2_AFFINITY_VALUE}"
      else echo_reset_dim "Node Affinity ............. ${COLOR_MAGENTA}None"
    fi

    if [[ "$DB2_SET_TOLERATIONS" == "true" ]]
      then echo_reset_dim "Node Tolerations .......... ${COLOR_MAGENTA}${DB2_TOLERATE_KEY}=${DB2_TOLERATE_VALUE} @ ${DB2_TOLERATE_EFFECT}"
      else echo_reset_dim "Node Tolerations .......... ${COLOR_MAGENTA}None"
    fi
  fi

  if [[ "$KAFKA_ACTION_SYSTEM" == "install" && ("$KAFKA_PROVIDER" == "strimzi" || "$KAFKA_PROVIDER" == "redhat") ]]; then
    reset_colors
    echo "${TEXT_DIM}"
    echo_h4 "Kafka" "    "
    echo_reset_dim "Install Namespace ......... ${COLOR_MAGENTA}${KAFKA_NAMESPACE:-<default>}"
    echo_reset_dim "Kafka Provider ............ ${COLOR_MAGENTA}${KAFKA_PROVIDER}"
  fi

  if [[ "$KAFKA_ACTION_SYSTEM" == "install" && "$KAFKA_PROVIDER" == "ibm" ]]; then
    reset_colors
    echo "${TEXT_DIM}"
    echo_h4 "Kafka - IBM Cloud Event Streams" "    "
    echo_reset_dim "Resource group ............ ${COLOR_MAGENTA}${EVENTSTREAMS_RESOURCEGROUP}"
    echo_reset_dim "Instance name ............. ${COLOR_MAGENTA}${EVENTSTREAMS_NAME}"
    echo_reset_dim "Instance location ......... ${COLOR_MAGENTA}${EVENTSTREAMS_LOCATION}"
  fi

  if [[ "$KAFKA_ACTION_SYSTEM" == "install" && "$KAFKA_PROVIDER" == "aws" ]]; then
    reset_colors
    echo "${TEXT_DIM}"
    echo_h4 "Kafka - AWS MSK" "    "
    echo_reset_dim "VPC ID .................... ${COLOR_MAGENTA}${VPC_ID}"
    echo_reset_dim "Cluster name .............. ${COLOR_MAGENTA}${KAFKA_CLUSTER_NAME}"
    echo_reset_dim "Instance region ........... ${COLOR_MAGENTA}${AWS_REGION}"
    echo_reset_dim "Instance username ......... ${COLOR_MAGENTA}${AWS_KAFKA_USER_NAME}"
    echo_reset_dim "Instance type ............. ${COLOR_MAGENTA}${AWS_MSK_INSTANCE_TYPE}"
    echo_reset_dim "Number of broker nodes .... ${COLOR_MAGENTA}${AWS_MSK_INSTANCE_NUMBER}"
    echo_reset_dim "Storage size (GB) ......... ${COLOR_MAGENTA}${AWS_MSK_VOLUME_SIZE}"
    echo_reset_dim "Availability Zone 1 CIDR .. ${COLOR_MAGENTA}${AWS_MSK_CIDR_AZ1}"
    echo_reset_dim "Availability Zone 2 CIDR .. ${COLOR_MAGENTA}${AWS_MSK_CIDR_AZ2}"
    echo_reset_dim "Availability Zone 3 CIDR .. ${COLOR_MAGENTA}${AWS_MSK_CIDR_AZ3}"
    echo_reset_dim "Ingress CIDR .............. ${COLOR_MAGENTA}${AWS_MSK_INGRESS_CIDR}"
    echo_reset_dim "Egress CIDR ............... ${COLOR_MAGENTA}${AWS_MSK_EGRESS_CIDR}"
  fi

  reset_colors
  echo "${TEXT_DIM}"
  echo_h4 "Cluster Monitoring" "    "
  if [[ "${CLUSTER_MONITORING_INCLUDE_GRAFANA}" == 'False' ]]
    then echo_reset_dim "Include Grafana ........... ${COLOR_RED}Package not available"
    else echo_reset_dim "Include Grafana ........... ${COLOR_MAGENTA}Yes"
  fi

  reset_colors
  echo "${TEXT_DIM}"
  echo_h4 "Storage Class Configuration" "    "
  echo_reset_dim "Storage Class Provider .... ${COLOR_MAGENTA}${STORAGE_CLASS_PROVIDER}"
  if [[ "$STORAGE_CLASS_PROVIDER" == "custom" ]]; then
    echo_reset_dim "ReadWriteOnce ............. ${COLOR_MAGENTA}${STORAGE_CLASS_RWO}"
    echo_reset_dim "ReadWriteMany ............. ${COLOR_MAGENTA}${STORAGE_CLASS_RWX}"
  fi

  reset_colors
  echo "${TEXT_DIM}"
  echo_h4 "Workload Scale Configuration" "    "
  if [[ -n "${MAS_WORKLOAD_SCALE_PROFILE}" ]]; then
    if [[ "$MAS_WORKLOAD_SCALE_PROFILE" == "Custom" ]]; then
      echo_reset_dim "Workload Scale Profile .... ${COLOR_MAGENTA}${MAS_WORKLOAD_SCALE_PROFILE}"
      echo_reset_dim "Configuration(s) .......... ${COLOR_MAGENTA}${MAS_POD_TEMPLATES_DIR}"
    else
      echo_reset_dim "Workload Scale Profile .... ${COLOR_MAGENTA}${MAS_WORKLOAD_SCALE_PROFILE}"
    fi
  else
    echo_reset_dim "Workload Scale Profile .... ${COLOR_MAGENTA}Burstable"
  fi

  reset_colors
  echo "${TEXT_RESET}"

  if [ "$NO_CONFIRM" != "true" ]; then
    prompt_for_confirm "Proceed with these settings" || exit 0
  fi
}
