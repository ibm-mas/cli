- hosts: localhost
  any_errors_fatal: true
  vars:
    mas_tekton_version: latest

    params_src_dir: src/params
    params_tmp_dir: tmp/upgrade-test-helper

    pipeline_src_dir: src/pipelines
    pipeline_target_dir: target/pipelines

    pipelinerun_src_dir: src/pipelineruns
    pipelinerun_target_dir: target/pipelineruns

    task_src_dir: src/tasks/fvt/upgrade-test
    task_target_dir: target/tasks
  tasks:

    # 0. Prepare tmp and target directory for the pipeline build
    # -------------------------------------------------------------------------
    - name: Create tmp directory
      file:
        path: "{{ params_tmp_dir }}"
        state: directory
    - name: Create target directory (pipelines)
      file:
        path: "{{ pipeline_target_dir }}"
        state: directory
    - name: Create target directory (tasks)
      file:
        path: "{{ task_target_dir }}"
        state: directory


    # 1. Load parameter lists into Ansible variables
    # -------------------------------------------------------------------------
    # This could be done in one step, but using a template lookup, but generating
    # the intermediate files and processing this in two steps allows for easier
    # debugging when things are not as expected.
    - name: "Generate intermediate files"
      ansible.builtin.template:
        src: "src/utils/params-to-dict.yml.j2"
        dest: "{{ params_tmp_dir }}/{{ item }}.yml"
      with_items:
        - common
        - fvt
        - install-appconnect
        - install-db2
        - install
        - upgrade

    - name: "Load intermediate files to variables"
      include_vars:
        file: "{{ params_tmp_dir }}/{{ item }}.yml"
        name: "{{ item }}_params_definition"
      with_items:
        - common
        - fvt
        - install-appconnect
        - install-db2
        - install
        - upgrade


    # 2. Combine common + install + fvt + upgrade lists for upgrade-with-fvt
    # -------------------------------------------------------------------------
    - name: "Load upgrade-test raw parameters list into a variable"
      ansible.builtin.set_fact:
        upgrade_test_raw_params_definition: "{{ common_params_definition.params + install_params_definition.params + fvt_params_definition.params + upgrade_params_definition.params }}"


    # 3. Load Source & Target Upgrade Test attributes
    # -------------------------------------------------------------------------
    # Used to rename from/to parameters properly in upgrade-test pipeline
    - name: "Load source target parameters"
      ansible.builtin.set_fact:
        params_source_target_list: "{{ params_source_target_list | default([]) + [item] }}"
      with_lines: cat "{{ params_src_dir }}/upgrade-test-helper/source-target.txt"


    # 4. Not sure what this means
    # -------------------------------------------------------------------------
    # Run-pipeline task parameters that should not be created in run-pipeline/taskdefs because they will be manually set
    - name: "Load manual setting run-pipeline parameters"
      ansible.builtin.set_fact:
        param_manual_setting_list: "{{ param_manual_setting_list | default([]) + [item] }}"
      with_lines: cat "{{ pipeline_src_dir }}/taskdefs/run-pipeline/manual-setting.txt"


    # 5. Load parameter list for upgrade-with-fvt into Ansible variables
    # -------------------------------------------------------------------------
    - name: "Generate intermediate files"
      ansible.builtin.template:
        src: "src/utils/params-to-dict.yml.j2"
        dest: "{{ params_tmp_dir }}/{{ item }}.yml"
      with_items:
        - upgrade-test

    - name: "Load intermediate files to variables"
      include_vars:
        file: "{{ params_tmp_dir }}/{{ item }}.yml"
        name: "{{ item }}_params_definition"
      with_items:
        - upgrade-test


    # 6. Generate Upgrade Test Pipeline
    # -------------------------------------------------------------------------
    # This pipeline requires the upgrade_test_raw_params_definition variable generated in step 1.5
    - name: Generate Upgrade Test Pipeline
      ansible.builtin.template:
        src: "{{ pipeline_src_dir }}/upgrade-with-fvt.yml.j2"
        dest: "{{ pipeline_target_dir }}/upgrade-with-fvt.yaml"


    # 7. Generate Upgrade Test PipelineRun template
    # -------------------------------------------------------------------------
    - name: Generate install PipelineRun template
      ansible.builtin.template:
        src: "{{ pipelinerun_src_dir }}/{{ item }}.yml.j2"
        dest: "{{ pipelinerun_target_dir }}/{{ item }}.yml.j2"
      with_items:
        - upgrade-with-fvt


    # 8. Generate Upgrade Test Tasks
    # -------------------------------------------------------------------------
    # These tasks require the *_params_definition variables generated in step 1.1 - 1.4
    - name: "Generate Tasks"
      ansible.builtin.template:
        src: "{{ task_src_dir }}/{{ item }}.yml.j2"
        dest: "{{ task_target_dir }}/{{ item }}.yaml"
      with_items:
        - fvt-install-run-pipeline
        - fvt-run-pipeline
        - fvt-upgrade-run-pipeline
