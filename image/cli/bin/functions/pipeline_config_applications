#!/bin/bash


function channel_select_iot() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_IOT=8.5.x
      ;;
      8.6.x|8.7.x)
      MAS_APP_CHANNEL_IOT=8.4.x
      ;;
      *)
      prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_IOT
      ;;
    esac
  else
    # Only supporting MAS 8.8 airgap install at present
    MAS_APP_CHANNEL_IOT=8.5.x
  fi
  true
}

function channel_select_monitor() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_MONITOR=8.8.x
      ;;
      8.7.x)
      MAS_APP_CHANNEL_MONITOR=8.7.x
      ;;
      8.6.x)
      MAS_APP_CHANNEL_MONITOR=8.6.x
      ;;
      *)
        prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_MONITOR
        ;;
    esac
  else
    MAS_APP_CHANNEL_MONITOR=8.8.x
    echo_warning "Sorry, air gap install of this application is not supported yet"
    exit 1
  fi
  true
}

function channel_select_safety() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_SAFETY=8.3.x
      ;;
      8.6.x|8.7.x)
      MAS_APP_CHANNEL_SAFETY=8.2.x
      ;;
      *)
      prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_SAFETY
      ;;
    esac
  else
    MAS_APP_CHANNEL_SAFETY=8.3.x
    echo_warning "Sorry, air gap install of this application is not supported yet"
    exit 1
  fi
  true
}

function channel_select_manage() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_MANAGE=8.4.x
      ;;
      8.7.x)
      MAS_APP_CHANNEL_MANAGE=8.3.x
      ;;
      8.6.x)
      MAS_APP_CHANNEL_MANAGE=8.2.x
      ;;
      *)
      prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_MANAGE
      ;;
    esac
  else
    # Only supporting MAS 8.8 airgap install at present
    MAS_APP_CHANNEL_MANAGE=8.4.x
  fi
  true
}

function channel_select_predict() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_PREDICT=8.6.x
      ;;
      8.7.x)
      MAS_APP_CHANNEL_PREDICT=8.5.x
      ;;
      8.6.x)
      MAS_APP_CHANNEL_PREDICT=8.4.x
      ;;
      *)
      prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_PREDICT
      ;;
    esac
  else
    MAS_APP_CHANNEL_PREDICT=8.6.x
    echo_warning "Sorry, air gap install of this application is not supported yet"
    exit 1
  fi
  true
}

function channel_select_hputilities() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_HPUTILITIES=8.4.x
      ;;
      8.7.x)
      MAS_APP_CHANNEL_HPUTILITIES=8.3.x
      ;;
      8.6.x)
      MAS_APP_CHANNEL_HPUTILITIES=8.2.x
      ;;
      *)
      prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_HPUTILITIES
      ;;
    esac
  else
    MAS_APP_CHANNEL_HPUTILITIES=8.4.x
    echo_warning "Sorry, air gap install of this application is not supported yet"
    exit 1
  fi
  true
}

function channel_select_optimizer() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_OPTIMIZER=8.2.x
      ;;
      *)
      prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_OPTIMIZER
      ;;
    esac
  else
    MAS_APP_CHANNEL_OPTIMIZER=8.2.x
    echo_warning "Sorry, air gap install of this application is not supported yet"
    exit 1
  fi
  true
}

function channel_select_assist() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_ASSIST=8.5.x
      ;;
      8.7.x)
      MAS_APP_CHANNEL_ASSIST=8.4.x
      ;;
      8.6.x)
      MAS_APP_CHANNEL_ASSIST=8.3.x
      ;;
      *)
      prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_ASSIST
      ;;
    esac
  else
    MAS_APP_CHANNEL_ASSIST=8.5.x
    echo_warning "Sorry, air gap install of this application is not supported yet"
    exit 1
  fi
  true
}

function channel_select_visualinspection() {
  if [[ -z "$AIRGAP_MODE" ]]; then
    case $MAS_CHANNEL in
      8.8.x)
      MAS_APP_CHANNEL_VISUALINSPECTION=8.6.x
      ;;
      8.7.x)
      MAS_APP_CHANNEL_VISUALINSPECTION=8.5.x
      ;;
      8.6.x)
      MAS_APP_CHANNEL_VISUALINSPECTION=8.4.x
      ;;
      *)
      prompt_for_input 'Custom Subscription Channel' MAS_APP_CHANNEL_VISUALINSPECTION
      ;;
    esac
  else
    MAS_APP_CHANNEL_VISUALINSPECTION=8.6.x
    echo_warning "Sorry, air gap install of this application is not supported yet"
    exit 1
  fi
  true
}


function config_pipeline_applications() {
  echo
  echo_h2 "5. Application Selection"
  # Default all applications to "do not deploy"
  MAS_APP_SOURCE_IOT='ibm-operator-catalog';              MAS_APP_CHANNEL_IOT=''
  MAS_APP_SOURCE_MONITOR='ibm-operator-catalog';          MAS_APP_CHANNEL_MONITOR=''
  MAS_APP_SOURCE_SAFETY='ibm-operator-catalog';           MAS_APP_CHANNEL_SAFETY=''
  MAS_APP_SOURCE_MANAGE='ibm-operator-catalog';           MAS_APP_CHANNEL_MANAGE=''
  MAS_APP_SOURCE_PREDICT='ibm-operator-catalog';          MAS_APP_CHANNEL_PREDICT=''
  MAS_APP_SOURCE_ASSIST='ibm-operator-catalog';           MAS_APP_CHANNEL_ASSIST=''
  MAS_APP_SOURCE_HPUTILITIES='ibm-operator-catalog';      MAS_APP_CHANNEL_HPUTILITIES=''
  MAS_APP_SOURCE_VISUALINSPECTION='ibm-operator-catalog'; MAS_APP_CHANNEL_VISUALINSPECTION=''
  MAS_APP_SOURCE_OPTIMIZER='ibm-operator-catalog';        MAS_APP_CHANNEL_OPTIMIZER='';        MAS_APP_PLAN_OPTIMIZER=''

  # Applications supported in air gap and online installs
  if prompt_for_confirm "Install IoT"; then
    channel_select_iot || exit 1
  fi

  # Applications only supported in online installs
  if [[ -z "$AIRGAP_MODE" ]]; then
    # Applications that require IoT
    if [[ "$MAS_APP_CHANNEL_IOT" != '' ]]; then
      # Monitor
      if prompt_for_confirm "Install Monitor"; then
        channel_select_monitor || exit 1
      fi
      # Safety
      if prompt_for_confirm "Install Safety"; then
        channel_select_safety || exit 1
      fi
    fi
  fi

  # Manage
  if prompt_for_confirm "Install Manage"; then
    channel_select_manage || exit 1
  fi

  # Applications only supported in online installs
  if [[ -z "$AIRGAP_MODE" ]]; then
    # Applications that require Manage
    # TODO: these applications require Health actuallt,
    # need to review this code when add-ons selection are in place
    if [[ "$MAS_APP_CHANNEL_MANAGE" != '' ]]; then
      # Predict
      if prompt_for_confirm "Install Predict"; then
        channel_select_predict || exit 1
      fi
      # Health & Predict Utilities
      if prompt_for_confirm "Install Health & Predict - Utilities"; then
        channel_select_hputilities || exit 1
      fi
    fi

    # Assist
    if prompt_for_confirm "Install Assist"; then
      channel_select_assist || exit 1
    fi

    # Assist Dependencies
    if [[ "$MAS_APP_CHANNEL_ASSIST" != '' ]]; then
      while : ; do
        prompt_for_input 'COS Provider [ibm/ocs]' COS_TYPE "ibm"
        [[ "$COS_TYPE" != "ibm" && "$COS_TYPE" != "ocs" ]] || break
      done
      prompt_for_input "IBM Cloud API Key" IBMCLOUD_APIKEY $IBMCLOUD_APIKEY
      prompt_for_input "IBM Cloud Resource Group" IBMCLOUD_RESOURCEGROUP $IBMCLOUD_RESOURCEGROUP "Default"
    fi

    # Optimizer can only be installed from 8.8 on
    if [[ "$MAS_CHANNEL" != '8.6.x' && "$MAS_CHANNEL" != '8.7.x' ]]; then
      if prompt_for_confirm "Install Optimizer"; then
        channel_select_optimizer || exit 1
        # Optimizer install Plan + Validation
        while : ; do
          prompt_for_input 'Optimizer Install Plan [full/limited]' MAS_APP_PLAN_OPTIMIZER "full"
          [[ "$MAS_APP_PLAN_OPTIMIZER" != "full" && "$MAS_APP_PLAN_OPTIMIZER" != "limited" ]] || break
        done
      fi
    fi

    # Maximo Visual Inspection
    if prompt_for_confirm "Install Visual Inspection"; then
      channel_select_visualinspection || exit 1
    fi

    if [[ "$MAS_APP_CHANNEL_PREDICT" != "" || "$MAS_APP_CHANNEL_HPUTILITIES" != "" || "$MAS_APP_CHANNEL_ASSIST" != "" ]]; then
      case $MAS_CHANNEL in
        8.8.x)
          # Predict 8.6  was tested on 4.0.9
          # Breaking changes introduced in CP4D v4.5.0 prevent use of a newer version of CP4D
          CP4D_VERSION=4.0.9
          ;;
        8.7.x)
          # Predict 8.5  was tested on 4.0.6 and 4.0.7
          # Breaking changes introduced in CP4D v4.0.8 prevent use of a newer version of CP4D
          CP4D_VERSION=4.0.7
          ;;
        8.6.x)
          # Predict 8.4 was tested on 4.0.3
          # Breaking changes introduced in CP4D v4.0.4 prevent use of a newer version of CP4D
          CP4D_VERSION=4.0.3
          ;;
        *)
          echo
          echo "One or more selected applications require Cloud Pak for Data"
          prompt_for_input 'Cloud Pak for Data product version' CP4D_VERSION "4.0.9"
          ;;
      esac
    fi

  fi
}
