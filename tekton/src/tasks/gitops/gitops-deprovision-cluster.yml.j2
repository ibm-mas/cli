---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gitops-deprovision-cluster
spec:
  params:
    - name: cluster_name
      type: string
    - name: account
      type: string
    - name: cluster_url
      type: string
      default: ""
    - name: secrets_path
      type: string
    - name: git_branch
      type: string
    - name: github_org
      type: string
    - name: github_repo
      type: string
    - name: github_host
      type: string
    - name: git_commit_msg
      type: string
    - name: avp_aws_secret_region
      type: string
    - name: argocd_url
      type: string
      default: ""
    - name: argocd_check
      type: string
      default: "false"
  stepTemplate:
    name: gitops-deprovision-cluster
    env:
      - name: CLUSTER_NAME
        value: $(params.cluster_name)
      - name: ACCOUNT
        value: $(params.account)
      - name: OCP_SERVER
        value: $(params.cluster_url)
      - name: SECRET_PATH
        value: $(params.secrets_path)
      - name: GIT_BRANCH
        value: $(params.git_branch)
      - name: GITHUB_ORG
        value: $(params.github_org)
      - name: GITHUB_HOST
        value: $(params.github_host)
      - name: GITHUB_REPO
        value: $(params.github_repo)
      - name: GIT_COMMIT_MSG
        value: $(params.git_commit_msg)
      - name: SM_AWS_REGION
        value: $(params.avp_aws_secret_region)
      - name: ARGOCD_URL
        value: $(params.argocd_url)
      - name: ARGOCD_CHECK
        value: $(params.argocd_check)
    envFrom:
      - configMapRef:
          name: environment-properties
          optional: true
      - secretRef:
          name: secure-properties
  steps:
    - args:
      - |-
        git config --global user.name "MAS Automation"
        git config --global user.email "mas_automation@email.com"
        git config --global user.password $GITHUB_PAT

        ROSA_CONFIG=/workspace/configs/tmp-rosa/rosa-$(params.cluster_name)-details.yaml
        if [ -f $ROSA_CONFIG ]; then
          export OCP_SERVER=$(cat $ROSA_CONFIG | yq -r '.data.api_url')
          export OCP_USERNAME=$(cat $ROSA_CONFIG | yq -r '.data.username')
          export ROSA_CLUSTER_ADMIN_PASSWORD=$(cat $ROSA_CONFIG | yq -r '.data.admin_password')
          oc login -u $OCP_USERNAME -p $ROSA_CLUSTER_ADMIN_PASSWORD $OCP_SERVER --insecure-skip-tls-verify
          OC_RC=$?
          if [ $OC_RC -ne 0 ]; then
            echo "oc login failed so assume there is no cluster to deprovision, exiting.."
            exit 0
          fi
        elif [ -n $OCP_SERVER ]; then
          oc login -u $OCP_USERNAME -p $OCP_PASSWORD $OCP_SERVER --insecure-skip-tls-verify
          OC_RC=$?
          if [ $OC_RC -ne 0 ]; then
            echo "oc login failed so assume there is no cluster to deprovision, exiting.."
            exit 0
          fi
        else
          aws configure set aws_access_key_id $SM_AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $SM_AWS_SECRET_ACCESS_KEY
          aws configure set default.region $SM_AWS_REGION
          export CLUSTER_TYPE=rosa
          ROLE_NAME=ocp_login ansible-playbook ibm.mas_devops.run_role 
          OC_RC=$?
          if [ $OC_RC -ne 0 ]; then
            echo "oc login failed so assume there is no cluster to deprovision, exiting.."
            exit 0
          fi
        fi
        echo "Set k8s context"
        export K8S_AUTH_CONTEXT=$(oc whoami -c)
        
        if [ -z $ARGOCD_URL ] || [ -z $ARGOCD_USERNAME ] || [ -z $ARGOCD_PASSWORD ]; then
          export ARGOCD_URL=$(oc get route  openshift-gitops-server -n openshift-gitops -ojsonpath='{.spec.host}' --context $K8S_AUTH_CONTEXT)
          export ARGOCD_USERNAME=admin
          export ARGOCD_PASSWORD=$(oc get secret openshift-gitops-cluster -n openshift-gitops -ojsonpath='{.data.admin\.password}' --context $K8S_AUTH_CONTEXT | base64 -d ; echo)
        fi

        mkdir -p /tmp/deprovision-cluster
        mas gitops-deprovision-cluster -a $ACCOUNT -c $CLUSTER_NAME \
        --dir /tmp/deprovision-cluster \
        --github-push \
        --github-host $GITHUB_HOST \
        --github-org  $GITHUB_ORG \
        --github-repo $GITHUB_REPO \
        --git-branch $GIT_BRANCH \
        --secrets-path $SECRET_PATH
      command:
        - /bin/sh
        - -c
      name: gitops-deprovision-cluster
      imagePullPolicy: IfNotPresent
      image: quay.io/ibmmas/cli:7.10.0-pre.mascore1425
  workspaces:
    - name: configs
