#!/bin/bash

function mirror_to_registry() {
  echo
  echo_h2 "1. Configure Target Mirror"
  prompt_for_input "Mirror Registry Host" REGISTRY_PUBLIC_HOST
  prompt_for_input "Mirror Registry Port" REGISTRY_PUBLIC_PORT
  prompt_for_input "Mirror Registry Username" REGISTRY_PUBLIC_USERNAME
  prompt_for_input "Mirror Registry Password" REGISTRY_PUBLIC_PASSWORD
  export REGISTRY_PUBLIC_HOST
  export REGISTRY_PUBLIC_PORT
  export REGISTRY_PUBLIC_USERNAME
  export REGISTRY_PUBLIC_PASSWORD

  echo
  echo_h2 "2. Configure Images to Mirror"
  prompt_for_confirm "Mirror OpenShift Release Images" MIRROR_OPENSHIFT_RELEASE
  if [[ $MIRROR_OPENSHIFT_RELEASE == "true" ]]; then
    prompt_for_input "Red Hat OpenShift Release" OPENSHIFT_RELEASE
    export OPENSHIFT_RELEASE
  fi
  prompt_for_confirm "Mirror the four OpenShift standard operator catalogs" MIRROR_OPENSHIFT_OPERATORS
  if [[ $MIRROR_OPENSHIFT_OPERATORS == "true" ]]; then
    prompt_for_input "Red Hat OpenShift standard operator catalogs version" OPENSHIFT_OPERATORS
    export OPENSHIFT_OPERATORS
  fi
  prompt_for_confirm "Mirror IBM Foundational Services Images" MIRROR_COMMONSERVICES
  prompt_for_confirm "Mirror IBM User Data Services Images" MIRROR_UDS
  prompt_for_confirm "Mirror IBM Suite License Service Images" MIRROR_SLS
  prompt_for_confirm "Mirror IBM Truststore Manager Images" MIRROR_TRUSTSTOREMGR
  prompt_for_confirm "Mirror IBM Maximo Application Suite Core Images" MIRROR_MASCORE
  prompt_for_confirm "Mirror IBM Maximo Application Suite Manage Images" MIRROR_MANAGE
  prompt_for_confirm "Mirror Third Party Images (e.g. MongoDb CE)" MIRROR_THIRDPARTY

  echo
  echo_h2 "3. Configure Authentication for Mirroring"
  prompt_for_input "IBM Entitlement Key" IBM_ENTITLEMENT_KEY
  export IBM_ENTITLEMENT_KEY
  if [[ $MIRROR_UDS == "true" ]]; then
    prompt_for_input "Red Hat Connect Username" REDHAT_CONNECT_USERNAME
    prompt_for_input "Red Hat Connect Password" REDHAT_CONNECT_PASSWORD
    export REDHAT_CONNECT_USERNAME
    export REDHAT_CONNECT_PASSWORD
  fi

  echo
  prompt_for_confirm "Proceed with these settings" || exit 0

  echo
  echo_h2 "4. Run Mirror Process"
  echo "WARNING: This may take a long time"
  [ "$MIRROR_OPENSHIFT_RELEASE" == "true" ] && ansible-playbook ibm.mas_airgap.mirror_openshift_release
  [ "$MIRROR_OPENSHIFT_OPERATORS" == "true" ] && ansible-playbook ibm.mas_airgap.mirror_openshift_operators
  [ "$MIRROR_COMMONSERVICES" == "true" ] && ansible-playbook ibm.mas_airgap.mirror_common_services
  [ "$MIRROR_UDS" == "true" ]            && ansible-playbook ibm.mas_airgap.mirror_uds
  [ "$MIRROR_SLS" == "true" ]            && ansible-playbook ibm.mas_airgap.mirror_sls
  [ "$MIRROR_TRUSTSTOREMGR" == "true" ]  && ansible-playbook ibm.mas_airgap.mirror_truststore_mgr
  [ "$MIRROR_MASCORE" == "true" ]        && ansible-playbook ibm.mas_airgap.mirror_mas_core
  [ "$MIRROR_MASMANAGE" == "true" ]      && ansible-playbook ibm.mas_airgap.mirror_mas_manage
  [ "$MIRROR_THIRDPARTY" == "true" ]     && ROLE_NAME=thirdparty_mirror ansible-playbook ibm.mas_airgap.run_role

  true
}

