#!/bin/bash

function update_help() {
  [[ -n "$1" ]] && echo_warning "$1"
  reset_colors
  cat << EOM
Usage:
  mas update [options]
Where ${COLOR_YELLOW}specified${TEXT_RESET} each option may also be defined by setting the appropriate environment variable.
When no options are specified on the command line, interactive-mode will be enabled by default.

Maximo Operator Catalog Selection (Required):
  -c, --catalog ${COLOR_YELLOW}MAS_CATALOG_VERSION${TEXT_RESET}     Maximo Operator Catalog Version (e.g. v8-221129)

Update Dependencies (Optional):
  --db2u-namespace ${COLOR_YELLOW}DB2_NAMESPACE${TEXT_RESET}        DB2 namespace where instances update will be performed

Other Commands:
      --no-confirm                      Mirror images without prompting for confirmation
  -h, --help                            Show this help message
EOM
  [[ -n "$1" ]] && exit 1 || exit 0
}


function update_noninteractive() {

  detect_airgap
  while [[ $# -gt 0 ]]
  do
    key="$1"
    shift
    case $key in
      -c|--catalog)
        MAS_CATALOG_VERSION=$1 && shift
        ;;
      --db2u-namespace)
        DB2_NAMESPACE=$1 && shift
        ;;
      --no-confirm)
        NO_CONFIRM=true
        ;;
      -h|--help)
        update_help
        ;;
      *)
        # unknown option
        echo -e "${COLOR_RED}Usage Error: Unsupported option \"${key}\"${COLOR_RESET}\n"
        update_help
        exit 1
        ;;
      esac
  done

  # Check all args have been set
  [[ -z "$MAS_CATALOG_VERSION" ]] && update_help "MAS_CATALOG_VERSION is not set"
}

function update_interactive() {
  connect
  detect_airgap

  echo
  echo_h2 "Select IBM Maximo Operator Catalog Version"
  choose_catalog_version
  echo

  echo_h2 "Dependencies Update"
  echo -e "${COLOR_GREEN}IBM Common Services Operator will be updated by default as needed.${COLOR_RESET}"
  
  # Detect db2 in cluster and prompt for namespace
  oc get Operator db2u-operator.ibm-common-services > /dev/null 2>&1
  if [ "$?" == "0" ]; then
    prompt_for_input "DB2u operator has been detected. Db2u namespace to update?" DB2_NAMESPACE "db2u"
  fi

  # Detect OCS/ODF Storage Cluster in cluster and set action
  oc get StorageCluster -A > /dev/null 2>&1
  if [ "$?" == "0" ]; then
    echo -e "${COLOR_GREEN}OCS/ODF Storage Cluster has been detected and will be updated by default as needed.${COLOR_RESET}"
  fi
}


function update() {
  # Take the first parameter off (it will be "update")
  shift
  if [[ $# -gt 0 ]]; then
    update_noninteractive "$@"
  else
    update_interactive
  fi

  export MAS_CATALOG_VERSION
  export DB2_NAMESPACE
  echo
  reset_colors
  echo_h2 "Review Settings"

  echo "${TEXT_DIM}"
  echo_h4 "IBM Operator Catalog" "    "
  echo_reset_dim "Catalog Version ..................... ${COLOR_MAGENTA}${MAS_CATALOG_VERSION}"

  echo
  reset_colors
  if [[ "$NO_CONFIRM" != "true" ]]; then
    prompt_for_confirm "Proceed with these settings" || exit 0
  fi

  echo
  echo_h2 "Launch Update"

  # Create namespace, install MAS Tekton definitions, configure RBAC
  pipeline_install_tasks_shared_namespace || exit 1

  # Replace ALL environment variables in templates
  eval "echo \"$(cat $DIR/templates/pipelinerun-update.yaml)\"" > $CONFIG_DIR/pipelinerun-update.yaml

  # Start pipeline execution
  oc -n mas-pipelines create -f $CONFIG_DIR/pipelinerun-update.yaml &>> $LOGFILE || exit 1
  echo -e "${COLOR_GREEN}Update started successfully${COLOR_RESET}"
  echo -e "\nView progress:\n  ${COLOR_CYAN}${TEXT_UNDERLINE}https://${OCP_CONSOLE_ROUTE}/pipelines/ns/mas-pipelines${TEXT_RESET}${COLOR_RESET}"
  echo

}
