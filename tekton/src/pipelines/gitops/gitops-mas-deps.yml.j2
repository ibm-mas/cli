---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
{% if wait_for_provision == true %}
  name: gitops-mas-deps-after-provision
{% else %}
  name: gitops-mas-deps
{% endif %}
spec:
  description: MAS Cluster off-cluster dependencies
  workspaces:
    - name: configs
  params:
{% if wait_for_provision == true %}
      # Name of the PipelineRun to wait for
    - name: pipelinerun_name
      type: string
    - name: ignore_failure
      type: string
      default: "False"
      description: Set to 'True' or 'False' (case-sensitive) to configure whether this pipeline continue if the pipeline we are waiting for has failed.
{% endif %}
    - name: cluster_name
      type: string
    - name: account
      type: string
    - name: mas_instance_id
      type: string
    - name: secrets_path
      type: string
    - name: avp_aws_secret_region
      type: string
    - name: avp_aws_secret_key
      type: string
    - name: avp_aws_access_key
      type: string
    - name: github_pat
      type: string

    - name: vpc_ipv4_cidr
      type: string
    - name: mongo_provider
      type: string
      default: aws
    - name: aws_docdb_instance_number
      type: string
      default: 3
    - name: aws_docdb_engine_version
      type: string
      default: 4.0.0

    - name: kafka_provider
      type: string
      default: aws
    - name: kafka_version
      type: string
      default: 3.3.1
    - name: kafka_action
      type: string
    - name: kafkacfg_file_name
      type: string
      default: ""
    - name: aws_msk_instance_type
      type: string
      default: ""

    - name: efs_action
      type: string
      description: efs action to be performed (provision or deprovision)
      default: ""
    - name: cloud_provider
      type: string
      default: aws
      
    - name: cos_type
      type: string
      description: COS Provider (ibm or ocs)
      default: ""
    - name: ibmcloud_resourcegroup
      type: string
      description: Name of an existing COS Resource Group in IBM Cloud account
      default: ""
    - name: cos_action
      type: string
      description: COS action to be performed (provision or deprovision)
      default: ""

    - name: ibmcloud_apikey
      type: string
      default: ""

  tasks:
{% if wait_for_provision == true %}
    # 0. Wait for the provsion pipeline to complete
    # -------------------------------------------------------------------------
    - name: wait-for-provision
      params:
        - name: pipelinerun_name
          value: $(params.pipelinerun_name)
        - name: ignore_failure
          value: $(params.ignore_failure)
      taskRef:
        kind: Task
        name: mas-fvt-wait-for-pipelinerun
{% endif %}
    - name: gitops-mongo
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-provision
{% endif %}
      params:
        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: secrets_path
          value: $(params.secrets_path)
        - name: avp_aws_secret_region
          value: $(params.avp_aws_secret_region)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: vpc_ipv4_cidr
          value: $(params.vpc_ipv4_cidr)
        - name: mongo_provider
          value: $(params.mongo_provider)
        - name: aws_docdb_instance_number
          value: $(params.aws_docdb_instance_number)
        - name: aws_docdb_engine_version
          value: $(params.aws_docdb_engine_version)
      taskRef:
        kind: Task
        name: gitops-mongo
      workspaces:
        - name: configs
          workspace: configs

    # 2. Kafka
    # -------------------------------------------------------------------------
    - name: gitops-kafka
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-provision
{% endif %}
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}

        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)

        - name: mas_instance_id
          value: $(params.mas_instance_id)

        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)

        - name: kafka_provider
          value: $(params.kafka_provider)
        - name: kafka_version
          value: $(params.kafka_version)
        - name: vpc_ipv4_cidr
          value: $(params.vpc_ipv4_cidr)
        - name: kafkacfg_file_name
          value: $(params.kafkacfg_file_name)
        - name: aws_msk_instance_type
          value: $(params.aws_msk_instance_type)

      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-kafka
      when:
        - input: "$(params.kafka_action)"
          operator: notin
          values: [""]

    # Install Cloud Object Storage (COS)
    - name: gitops-cos
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-provision
{% endif %}
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        
        - name: github_pat
          value: $(params.github_pat)

        - name: cluster_name
          value: $(params.cluster_name)
        - name: account
          value: $(params.account)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)

        - name: mas_instance_id
          value: $(params.mas_instance_id)

        - name: cos_action
          value: $(params.cos_action)
        - name: cos_type
          value: $(params.cos_type)
        - name: ibmcloud_resourcegroup
          value: $(params.ibmcloud_resourcegroup)
        - name: ibmcloud_apikey
          value: $(params.ibmcloud_apikey)

      workspaces:
        - name: configs
          workspace: configs

      taskRef:
        kind: Task
        name: gitops-cos
      when:
        - input: "$(params.cos_action)"
          operator: notin
          values: [""]
        - input: "$(params.cos_action)"
          operator: in
          values: ["provision"]

    # Install AWS Elastic File Service (EFS)
    - name: gitops-efs
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-provision
{% endif %}
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        - name: cluster_name
          value: $(params.cluster_name)
        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: cloud_provider
          value: $(params.cloud_provider)
        - name: avp_aws_secret_key
          value: $(params.avp_aws_secret_key)
        - name: avp_aws_access_key
          value: $(params.avp_aws_access_key)
        - name: efs_action
          value: $(params.efs_action)

      workspaces:
        - name: configs
          workspace: configs

      taskRef:
        kind: Task
        name: gitops-efs
      when:
        - input: "$(params.efs_action)"
          operator: notin
          values: [""]
        - input: "$(params.efs_action)"
          operator: in
          values: ["provision"]
