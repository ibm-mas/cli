---
# Don't edit install.yaml directly -- modify install.yml.j2, and the content in parts/, then run "ansible-playbook generate-install.yaml"
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mas-install-with-fvt
spec:
  workspaces:
    # The generated configuration files
    - name: shared-configs
    # Any pre-generated configs that will be copied into the shared-configs workspace during suite-install
    - name: shared-additional-configs
    # The SLS entitlement key file that will be installed during install-sls.
    - name: shared-entitlement
    # Shared storage to hold mustgather output for tasks
    - name: shared-mustgather
    # Pre-generated certificates that will be copied into certs folder of shared-configs workspace to be used by suite-certs task
    - name: shared-certificates
    # PodTemplates configurations
    - name: shared-pod-templates

  params:
    # 1. Common Parameters
    # -------------------------------------------------------------------------
    {{ lookup('template', params_src_dir ~ '/common.yml.j2') | indent(4) }}

    # 2. Installation
    # -------------------------------------------------------------------------
    {{ lookup('template', params_src_dir ~ '/install-common.yml.j2') | indent(4)  }}
    {{ lookup('template', params_src_dir ~ '/install.yml.j2') | indent(4) }}

    # 3. Additional Params for FVT
    # -------------------------------------------------------------------------
    {{ lookup('template', params_src_dir ~ '/fvt.yml.j2') | indent(4) }}

    - name: launchfvt_core
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Core FVT Pipeline after suite-verify completes"
    - name: launchfvt_assist
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Assist FVT Pipeline after app-cfg-assist completes"
    - name: launchfvt_iot
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the IoT FVT Pipeline after app-cfg-iot completes"
    - name: launchfvt_manage
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Manage FVT Pipeline after app-cfg-manage completes (does not control the additional Industry Solution, Mobile, or Regression Manage suites)"
    - name: launchfvt_monitor
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Manage FVT Pipeline after app-cfg-monitor completes"
    - name: launchfvt_optimizer
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Optimizer FVT Pipeline after app-cfg-optimizer completes"
    - name: launchfvt_predict
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Predict FVT Pipeline after app-cfg-predict completes"
    - name: launchfvt_visualinspection
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Visual Inspection FVT Pipeline after app-cfg-visualinspection completes"

  tasks:
    # Content
    # -------
    # 1. Setup Cluster-wide Dependencies & Configure Cluster Monitoring
    # 2. Install Universal Dependencies
    # 3. Cloud Pak for Data
    # 4. Other Dependecies
    # 5. Install & Configure IBM MAS
    # 6. Install & Configure IoT
    # 7. Install & Configure Monitor
    # 8. Install & Configure Manage
    # 9. Install & Configure Predict
    # 10. Install & Configure Optimizer
    # 11. Install & Configure Health & Predict Utilities
    # 12. Install & Configure Assist
    # 13. Install & Configure Visual Inspection

    {{ lookup('template', 'taskdefs/cluster-setup/ocp-verify.yml.j2', template_vars={'name': 'pre-install-check', 'devops_suite_name': 'pre-install-check'}) | indent(4) }}

    # 1. Setup Cluster-wide Dependencies & Configure Cluster Monitoring
    # -------------------------------------------------------------------------
    # 1.1 IBM Operator Catalog
    {{ lookup('template', 'taskdefs/cluster-setup/ibm-catalogs.yml.j2') | indent(4) }}
      runAfter:
        - pre-install-check

    # 1.2 IBM Cloud Pak Foundational Services
    {{ lookup('template', 'taskdefs/cluster-setup/common-services.yml.j2') | indent(4) }}
      runAfter:
        - ibm-catalogs

    # 1.3 IBM Certificate Manager
    {{ lookup('template', 'taskdefs/cluster-setup/cert-manager.yml.j2') | indent(4) }}
      runAfter:
        - common-services

    # 1.4 Configure Cluster Monitoring
    {{ lookup('template', 'taskdefs/cluster-setup/cluster-monitoring.yml.j2') | indent(4) }}
      runAfter:
        - pre-install-check

    # 1.5 Configure Turbonomic
    {{ lookup('template', 'taskdefs/cluster-setup/turbonomic.yml.j2') | indent(4) }}
      runAfter:
        - pre-install-check


    # 2. Install Universal Dependencies
    # -------------------------------------------------------------------------
    # 2.1 MongoDb
    {{ lookup('template', 'taskdefs/dependencies/mongo.yml.j2') | indent(4) }}
      runAfter:
        - cert-manager

    # 2.2 AMQStreams (Kafka)
    {{ lookup('template', 'taskdefs/dependencies/kafka.yml.j2') | indent(4) }}
      runAfter:
        - cluster-monitoring

    # 2.3 Db2
    # 2.3.1 System Db2
    {{ lookup('template', 'taskdefs/dependencies/db2.yml.j2', template_vars={'suffix': 'system'}) | indent(4) }}
      runAfter:
        - cert-manager

    # 2.3.2 Dedicated Manage Db2
    {{ lookup('template', 'taskdefs/dependencies/db2.yml.j2', template_vars={'suffix': 'manage'}) | indent(4) }}
      runAfter:
        - db2-system

    # 2.4 IBM SLS
    {{ lookup('template', 'taskdefs/dependencies/sls.yml.j2') | indent(4) }}
      runAfter:
        - mongodb

    # 2.5 UDS
    {{ lookup('template', 'taskdefs/dependencies/uds.yml.j2') | indent(4) }}
      runAfter:
        - common-services


    # 3. Cloud Pak for Data
    # -------------------------------------------------------------------------
    # 3.1 Cloud Pak for Data Platform
    {{ lookup('template', 'taskdefs/cp4d/cp4d-platform.yml.j2') | indent(4) }}
      runAfter:
        - common-services

    # 3.2 Watson Studio
    {{ lookup('template', 'taskdefs/cp4d/cp4d-wsl.yml.j2') | indent(4) }}
      runAfter:
        - cp4d

    # 3.3 Watson Machine Learning
    {{ lookup('template', 'taskdefs/cp4d/cp4d-wml.yml.j2') | indent(4) }}
      runAfter:
        - cp4d

    # 3.4 Analytics Service (Spark)
    {{ lookup('template', 'taskdefs/cp4d/cp4d-spark.yml.j2') | indent(4) }}
      runAfter:
        - cp4d

    # 3.5 Watson OpenScale
    {{ lookup('template', 'taskdefs/cp4d/cp4d-aiopenscale.yml.j2') | indent(4) }}
      runAfter:
        - cp4d

    # 3.6 SPSS Statistics
    {{ lookup('template', 'taskdefs/cp4d/cp4d-spss.yml.j2') | indent(4) }}
      runAfter:
        - cp4d

    # 3.7 Watson Discovery
    {{ lookup('template', 'taskdefs/cp4d/cp4d-discovery.yml.j2') | indent(4) }}
      runAfter:
        - cp4d

    # 3.8 Cognos Analytics
    {{ lookup('template', 'taskdefs/cp4d/cp4d-cognos.yml.j2') | indent(4) }}
      runAfter:
        - cp4d

    # 3.9 Configure Watson Studio in MAS
    {{ lookup('template', 'taskdefs/core/suite-config-wsl.yml.j2') | indent(4) }}
      runAfter:
        - launchfvt-core
        - watson-studio


    # 4. Other Dependecies
    # -------------------------------------------------------------------------
    # 4.1 Install Cloud Object Storage (COS)
    {{ lookup('template', 'taskdefs/dependencies/cos.yml.j2') | indent(4) }}
      runAfter:
        - pre-install-check

    # 4.2 Configure COS in MAS
    {{ lookup('template', 'taskdefs/core/suite-config-cos.yml.j2') | indent(4) }}
      runAfter:
        - launchfvt-core
        - cos

    # 4.3 Nvidia GPU Operator
    {{ lookup('template', 'taskdefs/dependencies/nvidia.yml.j2') | indent(4) }}
      runAfter:
        - pre-install-check


    # 5. Install & Configure IBM MAS
    # -------------------------------------------------------------------------
    # 5.1 Configure Workspace
    {{ lookup('template', 'taskdefs/core/gencfg-workspace.yml.j2') | indent(4) }}
      runAfter:
        - pre-install-check

    # 5.2 DNS Setup
    {{ lookup('template', 'taskdefs/core/suite-dns.yml.j2') | indent(4) }}
      runAfter:
        - cert-manager

    # 5.3 Manual Certificates
    {{ lookup('template', 'taskdefs/core/suite-certs.yml.j2') | indent(4) }}
      runAfter:
        - suite-dns

    # 5.4 Suite Installation
    {{ lookup('template', 'taskdefs/core/suite-install.yml.j2') | indent(4) }}
      runAfter:
        - sls
        - uds
        - gencfg-workspace
        - suite-certs

    # 5.5 Suite Configuration
    {{ lookup('template', 'taskdefs/core/suite-config.yml.j2') | indent(4) }}
      runAfter:
        - suite-install

    # 5.6 Suite Verification
    {{ lookup('template', 'taskdefs/core/suite-verify.yml.j2') | indent(4) }}
      runAfter:
        - suite-config

    # 5.7 Configure Db2 in MAS
    {{ lookup('template', 'taskdefs/core/suite-config-db2.yml.j2') | indent(4) }}
      runAfter:
        - launchfvt-core
        - db2-manage  # db2-manage already waits for db2-system so we don't need to list both

    # 5.7 Configure Kafka in MAS
    {{ lookup('template', 'taskdefs/core/suite-config-kafka.yml.j2') | indent(4) }}
      runAfter:
        - launchfvt-core
        - kafka


    # 6. Install & Configure IoT
    # -------------------------------------------------------------------------
    # 6.1 Install IoT
    {{ lookup('template', 'taskdefs/apps/iot-app.yml.j2') | indent(4) }}
      runAfter:
        - suite-config-db2
        - suite-config-kafka

    # 6.2 Configure IoT workspace
    {{ lookup('template', 'taskdefs/apps/iot-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-iot


    # 7. Install & Configure Monitor
    # -------------------------------------------------------------------------
    # 7.1 Install Monitor
    {{ lookup('template', 'taskdefs/apps/monitor-app.yml.j2') | indent(4) }}
      runAfter:
        - app-cfg-iot

    # 7.2 Configure Monitor workspace
    {{ lookup('template', 'taskdefs/apps/monitor-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-monitor


    # 8. Install & Configure Manage
    # -------------------------------------------------------------------------
    # 8.1. Prepare database for Maxinst
    {{ lookup('template', 'taskdefs/apps/db2-setup-system.yml.j2') | indent(4) }}
      runAfter:
        - suite-config-db2
    {{ lookup('template', 'taskdefs/apps/db2-setup-manage.yml.j2') | indent(4) }}
      runAfter:
        - suite-config-db2

    # 8.2 Manage Install
    {{ lookup('template', 'taskdefs/apps/manage-app.yml.j2') | indent(4) }}
      runAfter:
        - suite-db2-setup-system
        - suite-db2-setup-manage
        - suite-config-watson-studio

    # 8.3 Configure Manage workspace
    {{ lookup('template', 'taskdefs/apps/manage-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-manage

    # 9. Install & Configure Predict
    # -------------------------------------------------------------------------
    # 9.1 Predict Install
    {{ lookup('template', 'taskdefs/apps/predict-app.yml.j2') | indent(4) }}
      runAfter:
        - app-cfg-manage
        - app-cfg-monitor
        - suite-config-watson-studio
        - watson-machine-learning
        - analytics-service
        - aiopenscale
        - spss

    # 9.2 Configure Predict workspace
    {{ lookup('template', 'taskdefs/apps/predict-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-predict


    # 10. Install & Configure Optimizer
    # -------------------------------------------------------------------------
    # 10.1 Optimizer Install
    {{ lookup('template', 'taskdefs/apps/optimizer-app.yml.j2') | indent(4) }}
      runAfter:
        - launchfvt-core

    # 10.2 Configure Optimizer workspace
    {{ lookup('template', 'taskdefs/apps/optimizer-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-optimizer


    # 11. Install & Configure Assist
    # -------------------------------------------------------------------------
    # 11.1 Assist Install
    {{ lookup('template', 'taskdefs/apps/assist-app.yml.j2') | indent(4) }}
      runAfter:
        - suite-config-cos

    # 11.2 Configure Watson Discovery in MAS
    {{ lookup('template', 'taskdefs/core/suite-config-discovery.yml.j2') | indent(4) }}
      runAfter:
        - app-install-assist
        - discovery

    # 11.3 Configure Assist workspace
    {{ lookup('template', 'taskdefs/apps/assist-workspace.yml.j2') | indent(4) }}
      runAfter:
        - suite-config-discovery


    # 12. Install & Configure Visual Inspection
    # -------------------------------------------------------------------------
    # 12.1 MVI Install
    {{ lookup('template', 'taskdefs/apps/visualinspection-app.yml.j2') | indent(4) }}
      runAfter:
        - nvidia-gpu
        - launchfvt-core

    # 12.2 Configure MVI workspace
    {{ lookup('template', 'taskdefs/apps/visualinspection-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-visualinspection


    # 13. MAS Core FVT
    # -------------------------------------------------------------------------
    - name: launchfvt-core
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-core"
      taskRef:
        kind: Task
        name: mas-launchfvt-core
      when:
        - input: $(params.launchfvt_core)
          operator: in
          values: ["true", "True"]
      runAfter:
        - suite-verify


    # 14. Application FVT - Assist
    # -------------------------------------------------------------------------
    - name: launchfvt-assist
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-assist"
      taskRef:
        kind: Task
        name: mas-launchfvt-assist
      when:
        - input: $(params.launchfvt_assist)
          operator: in
          values: ["true", "True"]
      runAfter:
        - app-cfg-assist


    # 15. Application FVT - IoT
    # -------------------------------------------------------------------------
    - name: launchfvt-iot
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-iot"
      taskRef:
        kind: Task
        name: mas-launchfvt-iot
      when:
        - input: $(params.launchfvt_iot)
          operator: in
          values: ["true", "True"]
      runAfter:
        - app-cfg-iot


    # 16. Application FVT - Manage
    # -------------------------------------------------------------------------
    - name: launchfvt-manage
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-manage"
      taskRef:
        kind: Task
        name: mas-launchfvt-manage
      when:
        - input: $(params.launchfvt_manage)
          operator: in
          values: ["true", "True"]
      runAfter:
        - app-cfg-manage


    # 17. Application FVT - Monitor
    # -------------------------------------------------------------------------
    - name: launchfvt-monitor
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-monitor"
      taskRef:
        kind: Task
        name: mas-launchfvt-monitor
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
      runAfter:
        - app-cfg-monitor
        # When Manage is being installed as well we want to make sure that we
        # wait until Manage FVT has already ran
        - launchfvt-manage

    # 18. Application FVT - Predict
    # -------------------------------------------------------------------------
    # Predict FVT has a dependency on fvt-manage-setup in the Manage FVT pipeline
    # We can't run Predict FVT unless Manage FVT has already ran
    - name: launchfvt-predict
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-predict"
      taskRef:
        kind: Task
        name: mas-launchfvt-predict
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
      runAfter:
        - app-cfg-predict
        - launchfvt-manage


    # 19. Application FVT - Visual Inspection
    # -------------------------------------------------------------------------
    - name: launchfvt-visualinspection
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-visualinspection"
      taskRef:
        kind: Task
        name: mas-launchfvt-visualinspection
      when:
        - input: $(params.launchfvt_visualinspection)
          operator: in
          values: ["true", "True"]
      runAfter:
        - app-cfg-visualinspection


    # 20. Application FVT - Optimizer
    # -------------------------------------------------------------------------
    # Optimizer FVT has a dependency on fvt-manage-setup in the Manage FVT pipeline
    # We can't run Optimizer FVT unless Manage FVT has already ran
    - name: launchfvt-optimizer
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-optimizer"
      taskRef:
        kind: Task
        name: mas-launchfvt-optimizer
      when:
        - input: $(params.launchfvt_optimizer)
          operator: in
          values: ["true", "True"]
      runAfter:
        - app-cfg-optimizer
        - launchfvt-manage

    # 21. SLS FVT
    # -------------------------------------------------------------------------
    {{ lookup('template', 'taskdefs/fvt-sls/sls.yml.j2') | indent(4) }}
      runAfter:
        - suite-verify


  finally:
    # Collect must-gather
    # -------------------------------------------------------------------------
    - name: must-gather
      taskRef:
        kind: Task
        name: mas-devops-must-gather
      params:
        - name: base_output_dir
          value: "/workspace/mustgather/$(context.pipelineRun.name)"
      workspaces:
        - name: mustgather
          workspace: shared-mustgather

    # Finalize the record in the FVT database
    # -------------------------------------------------------------------------
    - name: finalize
      taskRef:
        kind: Task
        name: mas-fvt-finalize
