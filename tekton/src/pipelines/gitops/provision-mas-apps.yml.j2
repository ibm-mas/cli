---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
{% if wait_for_provision == true %}
  name: gitops-provision-mas-apps-after-provision
{% else %}
  name: gitops-provision-mas-apps
{% endif %}
spec:
  workspaces:
    - name: configs
    - name: shared-certificates
    - name: shared-gitops-configs
  description: Provision MAS GitOps Instance
  params:
{% if wait_for_provision == true %}
      # Name of the PipelineRun to wait for
    - name: pipelinerun_name
      type: string
    - name: second_pipelinerun_name
      type: string
    - name: ignore_failure
      type: string
      default: "False"
      description: Set to 'True' or 'False' (case-sensitive) to configure whether this pipeline continue if the pipeline we are waiting for has failed.
    - name: remote_ocp_cluster
      type: string
      default: ""
    - name: remote_ocp_type
      type: string
      default: "rosa"
    - name: remote_rosa_token
      type: string
      default: ""
    - name: remote_rosa_cluster_admin_password
      type: string
      default: ""
    - name: aws_region
      type: string
      default: ""
    - name: aws_secret_access_key
      type: string
      default: ""
    - name: aws_access_key_id
      type: string
      default: ""
    - name: argocd_remove_deny_window
      type: string
      default: "True"
{% endif %}
    - name: cluster_name
      type: string
    - name: account
      type: string
    - name: image_pull_policy
      type: string
    - name: secrets_path
      type: string
    - name: avp_aws_secret_region
      type: string
    - name: avp_aws_secret_key
      type: string
    - name: avp_aws_access_key
      type: string

    # 1. Gitops git Parameters
    # -------------------------------------------------------------------------
    {{ lookup('template', params_src_dir ~ '/gitops-git.yml.j2') | indent(4) }}

    - name: dns_provider
      type: string
      default: cis
    - name: mas_domain
      type: string
    - name: cis_subdomain
      type: string
    - name: mas_manual_cert_mgmt
      type: string
    - name: cis_proxy
      type: string
    - name: cis_crn
      type: string
    - name: cis_apikey
      type: string
    - name: mas_config_dir
      type: string

    - name: github_url
      type: string
    - name: mas_instance_id
      type: string
    - name: mas_workspace_id
      type: string

    - name: kafka_provider
      type: string
      default: aws
    - name: kafka_version
      type: string
      default: 3.3.1
    - name: kafka_action
      type: string
    - name: vpc_ipv4_cidr
      type: string
    - name: icr_cp
      type: string
    - name: icr_cp_open
      type: string
    - name: kafkacfg_file_name
      type: string
      default: ""

    - name: db2_meta_storage_class
      type: string
    - name: db2_temp_storage_class
      type: string
    - name: db2_logs_storage_class
      type: string
    - name: db2_data_storage_class
      type: string
    - name: db2_backup_storage_class
      type: string
    - name: db2_version
      type: string
    - name: db2_action
      type: string
    - name: db2_instance_registry_yaml_manage
      type: string
      default: ""
    - name: db2_instance_dbm_config_yaml_manage
      type: string
      default: ""
    - name: db2_database_db_config_yaml_manage
      type: string
      default: ""
    - name: db2_instance_registry_yaml_iot
      type: string
      default: ""
    - name: db2_instance_dbm_config_yaml_iot
      type: string
      default: ""
    - name: db2_database_db_config_yaml_iot
      type: string
      default: ""

    - name: tls_version
      type: string
      default: TLSv1.2
    - name: db2_ldap_username
      type: string
    - name: db2_ldap_password
      type: string

    - name: custom_labels
      type: string

    - name: default_block_storage_class
      type: string
    - name: default_file_storage_class
      type: string
      
    - name: mas_app_channel_iot
      type: string
    - name: mas_app_catalog_source_iot
      type: string
      default: ibm-operator-catalog
    - name: mas_app_api_version_iot
      type: string
      default: iot.ibm.com/v1
    - name: mas_app_kind_iot
      type: string
      default: IoT
    - name: mas_appws_api_version_iot
      type: string
      default: iot.ibm.com/v1
    - name: mas_appws_kind_iot
      type: string
      default: IoTWorkspace
    - name: mas_app_spec_yaml_iot
      type: string
    - name: mas_appws_spec_yaml_iot
      type: string

    - name: mas_app_channel_manage
      type: string
    - name: mas_app_catalog_source_manage
      type: string
      default: ibm-operator-catalog
    - name: mas_app_api_version_manage
      type: string
      default: apps.mas.ibm.com/v1
    - name: mas_app_kind_manage
      type: string
      default: ManageApp
    - name: mas_appws_api_version_manage
      type: string
      default: apps.mas.ibm.com/v1
    - name: mas_appws_kind_manage
      type: string
      default: ManageWorkspace
    - name: mas_app_spec_yaml_manage
      type: string
    - name: mas_appws_spec_yaml_manage
      type: string

    - name: mas_app_channel_monitor
      type: string
    - name: mas_app_catalog_source_monitor
      type: string
      default: ibm-operator-catalog
    - name: mas_app_api_version_monitor
      type: string
      default: apps.mas.ibm.com/v1
    - name: mas_app_kind_monitor
      type: string
      default: MonitorApp
    - name: mas_appws_api_version_monitor
      type: string
      default: apps.mas.ibm.com/v1
    - name: mas_appws_kind_monitor
      type: string
      default: MonitorWorkspace
    - name: mas_app_spec_yaml_monitor
      type: string
    - name: mas_appws_spec_yaml_monitor
      type: string

    - name: mas_app_channel_visualinspection
      type: string
    - name: mas_app_catalog_source_visualinspection
      type: string
      default: ibm-operator-catalog
    - name: mas_app_api_version_visualinspection
      type: string
      default: apps.mas.ibm.com/v1
    - name: mas_app_kind_visualinspection
      type: string
      default: VisualInspectionApp
    - name: mas_appws_api_version_visualinspection
      type: string
      default: apps.mas.ibm.com/v1
    - name: mas_appws_kind_visualinspection
      type: string
      default: VisualInspectionAppWorkspace
    - name: mas_app_spec_yaml_visualinspection
      type: string
    - name: mas_appws_spec_yaml_visualinspection
      type: string

    - name: mas_app_channel_optimizer
      type: string
    - name: mas_app_catalog_source_optimizer
      type: string
      default: ibm-operator-catalog
    - name: mas_app_api_version_optimizer
      type: string
      default: apps.mas.ibm.com/v1
    - name: mas_app_kind_optimizer
      type: string
      default: OptimizerApp
    - name: mas_appws_api_version_optimizer
      type: string
      default: apps.mas.ibm.com/v1
    - name: mas_appws_kind_optimizer
      type: string
      default: OptimizerWorkspace
    - name: mas_app_spec_yaml_optimizer
      type: string
    - name: mas_appws_spec_yaml_optimizer
      type: string

  tasks:
{% if wait_for_provision == true %}
    # 0. Wait for the fvt start pipeline to complete
    # -------------------------------------------------------------------------
    - name: wait-for-fvt-start
      params:
        - name: pipelinerun_name
          value: $(params.pipelinerun_name)
        - name: ignore_failure
          value: $(params.ignore_failure)
      taskRef:
        kind: Task
        name: mas-fvt-wait-for-pipelinerun

    # 1. Wait for the remote fvt pipeline to complete
    # -------------------------------------------------------------------------
    - name: wait-for-fvt-complete
      runAfter:
        - wait-for-fvt-start
      params:
        - name: pipelinerun_name
          value: $(params.second_pipelinerun_name)
        - name: ignore_failure
          value: $(params.ignore_failure)
        - name: remote_ocp_cluster
          value: $(params.remote_ocp_cluster)
        - name: remote_ocp_type
          value: $(params.remote_ocp_type)
        - name: remote_rosa_token
          value: $(params.remote_rosa_token)
        - name: remote_rosa_cluster_admin_password
          value: $(params.remote_rosa_cluster_admin_password)
        - name: aws_region
          value: $(params.aws_region)
        - name: aws_secret_access_key
          value: $(params.aws_secret_access_key)
        - name: aws_access_key_id
          value: $(params.aws_access_key_id)
        - name: argocd_remove_deny_window
          value: $(params.argocd_remove_deny_window)
      taskRef:
        kind: Task
        name: mas-fvt-wait-for-pipelinerun
{% endif %}

    # 2. Kafka
    # -------------------------------------------------------------------------
    - name: gitops-kafka
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-fvt-complete
{% endif %}
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}

        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)

        - name: kafka_provider
          value: $(params.kafka_provider)
        - name: kafka_version
          value: $(params.kafka_version)
        - name: vpc_ipv4_cidr
          value: $(params.vpc_ipv4_cidr)
        - name: kafkacfg_file_name
          value: $(params.kafkacfg_file_name)

      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-kafka
      when:
        - input: "$(params.kafka_action)"
          operator: notin
          values: [""]

    - name: gitops-kafka-config
      runAfter:
        - gitops-kafka
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}

        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)

      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-kafka-config
      when:
        - input: "$(params.kafka_action)"
          operator: notin
          values: [""]

    # 3. DB2 for IoT and Manage
    # -------------------------------------------------------------------------
    # 3.1 DB2 for IoT
    - name: gitops-db2u-database-iot
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-fvt-complete
{% endif %}
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}

        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: iot

        - name: db2_meta_storage_class
          value: $(params.db2_meta_storage_class)
        - name: db2_temp_storage_class
          value: $(params.db2_temp_storage_class)
        - name: db2_logs_storage_class
          value: $(params.db2_logs_storage_class)
        - name: db2_data_storage_class
          value: $(params.db2_data_storage_class)
        - name: db2_backup_storage_class
          value: $(params.db2_backup_storage_class)
        - name: db2_version
          value: $(params.db2_version)
        - name: db2_instance_registry_yaml
          value: $(params.db2_instance_registry_yaml_iot)
        - name: db2_instance_dbm_config_yaml
          value: $(params.db2_instance_dbm_config_yaml_iot)
        - name: db2_database_db_config_yaml
          value: $(params.db2_database_db_config_yaml_iot)

      workspaces:
        - name: configs
          workspace: configs
        - name: shared-gitops-configs
          workspace: shared-gitops-configs
      taskRef:
        kind: Task
        name: gitops-db2u-database
      when:
        - input: "$(params.db2_action)"
          operator: notin
          values: [""]
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]

    - name: gitops-db2u-config-iot
      runAfter:
        - gitops-db2u-database-iot
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}

        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: iot
        - name: mas_config_scope
          value: system

        - name: db2_ldap_username
          value: $(params.db2_ldap_username)
        - name: db2_ldap_password
          value: $(params.db2_ldap_password)
        - name: tls_version
          value: $(params.tls_version)

      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-db2u-config
      when:
        - input: "$(params.db2_action)"
          operator: notin
          values: [""]
        - input: "$(params.mas_app_channel_iot)"
          operator: notin
          values: [""]

    # 3.2 DB2 for Manage
    - name: gitops-db2u-database-manage
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-fvt-complete
{% endif %}
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}

        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: manage

        - name: db2_meta_storage_class
          value: $(params.db2_meta_storage_class)
        - name: db2_temp_storage_class
          value: $(params.db2_temp_storage_class)
        - name: db2_logs_storage_class
          value: $(params.db2_logs_storage_class)
        - name: db2_data_storage_class
          value: $(params.db2_data_storage_class)
        - name: db2_backup_storage_class
          value: $(params.db2_backup_storage_class)
        - name: db2_version
          value: $(params.db2_version)
        - name: db2_instance_registry_yaml
          value: $(params.db2_instance_registry_yaml_manage)
        - name: db2_instance_dbm_config_yaml
          value: $(params.db2_instance_dbm_config_yaml_manage)
        - name: db2_database_db_config_yaml
          value: $(params.db2_database_db_config_yaml_manage)

      workspaces:
        - name: configs
          workspace: configs
        - name: shared-gitops-configs
          workspace: shared-gitops-configs
      taskRef:
        kind: Task
        name: gitops-db2u-database
      when:
        - input: "$(params.db2_action)"
          operator: notin
          values: [""]
        - input: "$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
    - name: gitops-db2u-config-manage
      runAfter:
        - gitops-db2u-database-manage
      params:
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/gitops-params.yml.j2') | indent(8) }}

        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/secrets-params.yml.j2') | indent(8) }}
        
        {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/common/git-params.yml.j2') | indent(8) }}

        - name: mas_instance_id
          value: $(params.mas_instance_id)
        - name: mas_app_id
          value: manage
        - name: mas_config_scope
          value: wsapp
        - name: mas_workspace_id
          value: $(params.mas_workspace_id)

        - name: db2_ldap_username
          value: $(params.db2_ldap_username)
        - name: db2_ldap_password
          value: $(params.db2_ldap_password)
        - name: tls_version
          value: $(params.tls_version)
      workspaces:
        - name: configs
          workspace: configs
      taskRef:
        kind: Task
        name: gitops-db2u-config
      when:
        - input: "$(params.db2_action)"
          operator: notin
          values: [""]
        - input: "$(params.mas_app_channel_manage)"
          operator: notin
          values: [""]
      
    # 4. Install & Configure IoT
    # -------------------------------------------------------------------------
    # 4.1 Install IoT
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/iot-app.yml.j2') | indent(4) }}
      runAfter:
        - gitops-kafka-config
        - gitops-db2u-config-iot

    # 4.2 Configure IoT workspace
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/iot-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-iot

    # 5. Install & Configure Manage
    # -------------------------------------------------------------------------
    # 5.1 Install Manage
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/manage-app.yml.j2') | indent(4) }}
      runAfter:
        - gitops-db2u-config-manage

    # 5.2 Configure Manage workspace
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/manage-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-manage

    # 6. Install & Configure Monitor
    # -------------------------------------------------------------------------
    # 6.1 Install Monitor
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/monitor-app.yml.j2') | indent(4) }}
      runAfter:
        - app-cfg-iot

    # 6.2 Configure Monitor workspace
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/monitor-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-monitor

    # 7. Install & Configure VisualInspection
    # -------------------------------------------------------------------------
    # 7.1 Install VisualInspection
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/visualinspection-app.yml.j2') | indent(4) }}
{% if wait_for_provision == true %}
      runAfter:
        - wait-for-fvt-complete
{% endif %}

    # 7.2 Configure VisualInspection workspace
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/visualinspection-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-visualinspection

    # 8. Install & Configure Optimizer
    # -------------------------------------------------------------------------
    # 8.1 Install Optimizer
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/optimizer-app.yml.j2') | indent(4) }}
      runAfter:
        - app-cfg-manage

    # 8.2 Configure Optimizer workspace
    {{ lookup('template', pipeline_src_dir ~ '/taskdefs/gitops/apps/optimizer-workspace.yml.j2') | indent(4) }}
      runAfter:
        - app-install-optimizer

