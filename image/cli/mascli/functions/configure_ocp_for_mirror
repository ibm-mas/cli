#!/bin/bash

function configure_ocp_for_mirror_help() {
  [[ -n "$1" ]] && echo_warning "$1"
  reset_colors
  cat << EOM
Usage:
  mas configure-ocp-for-mirror [options]

Where ${COLOR_YELLOW}specified${TEXT_RESET} each option may also be defined by setting the appropriate environment variable.
When no options are specified on the command line, interactive-mode will be enabled by default.

Private Registry Details (Required):
  -H, --host ${COLOR_YELLOW}REGISTRY_PRIVATE_HOST${TEXT_RESET}        Hostname of the private registry
  -P, --port ${COLOR_YELLOW}REGISTRY_PRIVATE_PORT${TEXT_RESET}        Port number for the private registry
  -c, --ca-file ${COLOR_YELLOW}REGISTRY_PRIVATE_CA_FILE${TEXT_RESET}  Location of the CA file for the private registry

Private Registry Authentication (Optional):
  -u, --username ${COLOR_YELLOW}REGISTRY_USERNAME${TEXT_RESET}    Username to authenticate to the private registry
  -p, --password ${COLOR_YELLOW}REGISTRY_PASSWORD${TEXT_RESET}    Password to authenticate to the private registry

Other Commands:
      --no-confirm                        Provision the cluster without prompting for confirmation
  -h, --help                              Show this help message

EOM
  [[ -n "$1" ]] && exit 1 || exit 0
}


function configure_ocp_for_mirror_noninteractive() {
  while [[ $# -gt 0 ]]
  do
    key="$1"
    shift
    case $key in
      -H|--host)
        REGISTRY_PRIVATE_HOST=$1 && shift
        ;;
      -P|--port)
        REGISTRY_PRIVATE_PORT=$1 && shift
        ;;
      -c|--ca-file)
        REGISTRY_PRIVATE_CA_FILE=$1 && shift
        ;;
      -u|--username)
        REGISTRY_USERNAME=$1 && shift
        ;;
      -p|--password)
        REGISTRY_PASSWORD=$1 && shift
        ;;
      --no-confirm)
        NO_CONFIRM=true
        ;;
      -h|--help)
        configure_ocp_for_mirror_help
        ;;
      *)
        # unknown option
        echo -e "${COLOR_RED}Usage Error: Unsupported option \"${key}\"${COLOR_RESET}\n"
        configure_ocp_for_mirror_help
        exit 1
        ;;
      esac
  done

  # Check all args have been set
  [[ -z "$REGISTRY_PRIVATE_HOST" ]] && configure_ocp_for_mirror_help "REGISTRY_PRIVATE_HOST is not set"
  [[ -z "$REGISTRY_PRIVATE_PORT" ]] && configure_ocp_for_mirror_help "REGISTRY_PRIVATE_PORT is not set"
  [[ -z "$REGISTRY_PRIVATE_CA_FILE" ]] && configure_ocp_for_mirror_help "REGISTRY_PRIVATE_CA_FILE is not set"
  if [[ ! -e $REGISTRY_PRIVATE_CA_FILE ]]; then
    echo_warning "Certificate file '$REGISTRY_PRIVATE_CA_FILE' does not exist"
    exit 1
  fi

  confirm_connection
}

function configure_ocp_for_mirror_interactive() {
  connect

  echo
  echo_h2 "Configure Target Mirror"
  prompt_for_input "Mirror Registry Host" REGISTRY_PRIVATE_HOST && export REGISTRY_PRIVATE_HOST
  prompt_for_input "Mirror Registry Port" REGISTRY_PRIVATE_PORT && export REGISTRY_PRIVATE_PORT
  prompt_for_input "Mirror Registry CA File" REGISTRY_PRIVATE_CA_FILE && export REGISTRY_PRIVATE_CA_FILE
  if [[ ! -e $REGISTRY_PRIVATE_CA_FILE ]]; then
    echo_warning "Certificate file '$REGISTRY_PRIVATE_CA_FILE' does not exist"
    exit 1
  fi

  echo
  echo_h2 "Configure Authentication"
  prompt_for_input "Mirror Registry Username" REGISTRY_USERNAME && export REGISTRY_USERNAME
  prompt_for_input "Mirror Registry Password" REGISTRY_PASSWORD && export REGISTRY_PASSWORD

}

function configure_ocp_for_mirror() {
  # Take the first parameter off (it will be configure-ocp-for-mirror)
  shift
  if [[ $# -gt 0 ]]; then
    configure_ocp_for_mirror_noninteractive "$@"
  else
    configure_ocp_for_mirror_interactive
  fi

  # Ensure all environment variables are available to ansible-playbook
  export REGISTRY_PRIVATE_HOST
  export REGISTRY_PRIVATE_PORT
  export REGISTRY_PRIVATE_CA_FILE

  export REGISTRY_USERNAME
  export REGISTRY_PASSWORD

  echo
  reset_colors
  echo_h2 "Review Settings"
  echo "${TEXT_DIM}"
  echo_h2 "Private Registry Connection" "    "
  echo_reset_dim "Host ...................... ${COLOR_MAGENTA}${REGISTRY_PRIVATE_HOST}"
  echo_reset_dim "Port ...................... ${COLOR_MAGENTA}${REGISTRY_PRIVATE_PORT}"
  echo_reset_dim "CA File ................... ${COLOR_MAGENTA}${REGISTRY_PRIVATE_CA_FILE}"
  reset_colors
  echo "${TEXT_DIM}"
  echo_h2 "Private Registry Authentication" "    "
  echo_reset_dim "Username .................. ${COLOR_MAGENTA}${REGISTRY_USERNAME}"
  echo_reset_dim "Password .................. ${COLOR_MAGENTA}${REGISTRY_PASSWORD:0:8}<snip>"
  reset_colors

  echo
  reset_colors
  if [[ "$NO_CONFIRM" != "true" ]]; then
    prompt_for_confirm "Proceed with these settings" || exit 0
  fi

  echo
  echo_h2 "Configure Image Content Source Policy"
  ROLE_NAME=ocp_contentsourcepolicy ansible-playbook ibm.mas_airgap.run_role || exit 1

}
