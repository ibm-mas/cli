name: Release CLI
on:
  release:
    types: [ published ]

permissions:
  contents: read

jobs:
  build-cli:
    runs-on: ubuntu-latest
    steps:
      # 1. Initialize the build
      # -------------------------------------------------------------------------------------------
      - name: Checkout
        uses: actions/checkout@v4
        # Without this option, we don't get the tag information
        with:
          fetch-depth: 0

      - name: Initialise the build system
        run: |
          chmod u+x $GITHUB_WORKSPACE/build/bin/*.sh
          $GITHUB_WORKSPACE/build/bin/initbuild.sh
          source $GITHUB_WORKSPACE/build/bin/.functions.sh

      # 2. Tekton
      # -------------------------------------------------------------------------------------------
      - name: Build the Tekton definitions
        run: $GITHUB_WORKSPACE/build/bin/build-tekton.sh

      - name: Upload Tekton definitions
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/tekton/target/ibm-mas-tekton.yaml
          asset_name: ibm-mas-tekton-${{ env.VERSION }}.yaml
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload definition to Artifactory
        env:
          ARTIFACTORY_GENERIC_RELEASE_URL: ${{ secrets.ARTIFACTORY_GENERIC_RELEASE_URL }}
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
        run: |
          $GITHUB_WORKSPACE/build/bin/artifactory-release.sh $GITHUB_WORKSPACE/tekton/target/ibm-mas-tekton.yaml
          $GITHUB_WORKSPACE/build/bin/artifactory-release.sh $GITHUB_WORKSPACE/tekton/target/ibm-mas-tekton-fvt.yaml

      # 3. Python Package
      # -------------------------------------------------------------------------------------------
      - name: Build the Python package
        run: |
          sed -i "s#__version__ = \"100.0.0\"#__version__ = \"${{ env.VERSION_NOPREREL }}\"#g" ${GITHUB_WORKSPACE}/python/src/mas/cli/__init__.py
          cat ${GITHUB_WORKSPACE}/python/src/mas/cli/__init__.py
          mkdir -p $GITHUB_WORKSPACE/python/src/mas/cli/templates
          cp $GITHUB_WORKSPACE/tekton/target/ibm-mas-tekton.yaml $GITHUB_WORKSPACE/python/src/mas/cli/templates/ibm-mas-tekton.yaml
          cd $GITHUB_WORKSPACE/python
          python -m pip install --upgrade pip
          pip install .[dev]
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src --count --exit-zero --max-complexity=10 --max-line-length=200 --statistics
          python -m build
          cp $GITHUB_WORKSPACE/python/dist/mas_cli-${{ env.VERSION_NOPREREL }}.tar.gz $GITHUB_WORKSPACE/image/cli/install/mas_cli.tar.gz

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: python/dist

      # 4. CLI installer
      # -------------------------------------------------------------------------------------------
      - name: Build the cli package
        run: |
          $GITHUB_WORKSPACE/build/bin/build-cli.sh

      - name: Upload the cli
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/ibm-mas-cli-${{ env.VERSION }}.tgz
          asset_name: ibm-mas-cli-${{ env.VERSION }}.tgz
          tag: ${{ github.ref }}
          overwrite: true

      # 5. CLI container image
      # -------------------------------------------------------------------------------------------
      - name: Build the docker image
        run: |
          $GITHUB_WORKSPACE/build/bin/docker-build.sh -n ibmmas -i cli
          docker tag ibmmas/cli quay.io/ibmmas/cli:${{ env.DOCKER_TAG }}
          docker tag ibmmas/cli quay.io/ibmmas/cli:latest

      # https://github.com/marketplace/actions/push-to-registry
      - name: Push the docker image
        id: push_to_quay
        run: |
          docker images
          docker login --username "${{ secrets.QUAYIO_USERNAME }}" --password "${{ secrets.QUAYIO_PASSWORD }}" quay.io
          docker push quay.io/ibmmas/cli:${{ env.DOCKER_TAG }}
          docker push quay.io/ibmmas/cli:latest
        # Old version ...
        # uses: redhat-actions/push-to-registry@v2
        # with:
        #   tags: quay.io/ibmmas/cli:${{ env.DOCKER_TAG }} quay.io/ibmmas/cli:latest
        #   username: ${{ secrets.QUAYIO_USERNAME }}
        #   password: ${{ secrets.QUAYIO_PASSWORD }}

      # 6. OWASP Dependency Check
      # -------------------------------------------------------------------------------------------
      - name: Perform dependency check
        uses: dependency-check/Dependency-Check_Action@main
        id: owasp-depcheck
        with:
          project: 'cli'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload dependency check results
        uses: actions/upload-artifact@v3
        with:
           name: OWASP dependency check report
           path: ${{github.workspace}}/reports
           retention-days: 90
