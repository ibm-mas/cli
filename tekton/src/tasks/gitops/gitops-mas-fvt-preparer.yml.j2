---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gitops-mas-fvt-preparer
spec:
  params:
    - name: cluster_name
      type: string
    - name: pipeline_storage_class
      type: string
    - name: aws_region
      type: string
    - name: aws_secret_access_key
      type: string
    - name: aws_access_key_id
      type: string
    - name: fvt_pipeline_name
      type: string
    - name: cli_version
      type: string
    - name: fvt_artifactory_username
      type: string
    - name: fvt_artifactory_token
      type: string
    - name: fvt_config
      type: string
    - name: fvt_version_core
      type: string
    - name: ivt_version_core
      type: string
    - name: fvt_digest_core
      type: string
    - name: ivt_digest_core
      type: string
    - name: fvt_blacklist_core
      type: string
    - name: fvt_whitelist_core
      type: string
    - name: ddp_apikey
      type: string
    - name: partium_username
      type: string
    - name: partium_password
      type: string

    - name: artifactory_generic_release_url
      type: string
    - name: fvt_ansible_version
      type: string
    - name: artifactory_auth_header
      type: string
    - name: devops_mongo_uri
      type: string

    - name: fvt_image_registry
      type: string
      default: ""
    - name: image_pull_policy
      type: string
      default: ""

    - name: mas_instance_id
      type: string
      default: ""
    - name: mas_workspace_id
      type: string
      default: ""
    - name: mas_channel
      type: string
      default: ""

    - name: launchfvt_core
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Core FVT Pipeline after suite-verify completes"
    - name: launchfvt_assist
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Assist FVT Pipeline after app-cfg-assist completes"
    - name: launchfvt_iot
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the IoT FVT Pipeline after app-cfg-iot completes"
    - name: launchfvt_manage
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Manage FVT Pipeline after app-cfg-manage completes (does not control the additional Industry Solution, Mobile, or Regression Manage suites)"
    - name: launchfvt_monitor
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Manage FVT Pipeline after app-cfg-monitor completes"
    - name: launchfvt_optimizer
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Optimizer FVT Pipeline after app-cfg-optimizer completes"
    - name: launchfvt_predict
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Predict FVT Pipeline after app-cfg-predict completes"
    - name: launchfvt_visualinspection
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Visual Inspection FVT Pipeline after app-cfg-visualinspection completes"

  stepTemplate:
    name: gitops-mas-fvt-preparer
    env:
      - name: CLUSTER_NAME
        value: $(params.cluster_name)
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: PIPELINE_STORAGE_CLASS
        value: $(params.pipeline_storage_class)
      - name: AWS_REGION
        value: $(params.aws_region)
      - name: AWS_SECRET_ACCESS_KEY
        value: $(params.aws_secret_access_key)
      - name: AWS_ACCESS_KEY_ID
        value: $(params.aws_access_key_id)
      - name: FVT_PIPELINE_NAME
        value: $(params.fvt_pipeline_name)
      - name: CLI_VERSION
        value: $(params.cli_version)
      - name: FVT_ARTIFACTORY_USERNAME
        value: $(params.fvt_artifactory_username)
      - name: FVT_ARTIFACTORY_TOKEN
        value: $(params.fvt_artifactory_token)
      - name: FVT_CONFIG
        value: $(params.fvt_config)
      - name: FVT_IMAGE_REGISTRY
        value: $(params.fvt_image_registry)
      - name: FVT_VERSION_CORE
        value: $(params.fvt_version_core)
      - name: IVT_VERSION_CORE
        value: $(params.ivt_version_core)
      - name: ARTIFACTORY_GENERIC_RELEASE_URL
        value: $(params.artifactory_generic_release_url)
      - name: FVT_ANSIBLE_VERSION
        value: $(params.fvt_ansible_version)
      - name: ARTIFACTORY_AUTH_HEADER
        value: $(params.artifactory_auth_header)
      - name: DEVOPS_MONGO_URI
        value: $(params.devops_mongo_uri)
      - name: DDP_APIKEY
        value: $(params.ddp_apikey)
      - name: PARTIUM_USERNAME
        value: $(params.partium_username)
      - name: PARTIUM_PASSWORD
        value: $(params.partium_password)
      - name: MAS_WORKSPACE_ID
        value: $(params.mas_workspace_id)
      - name: MAS_CHANNEL
        value: $(params.mas_channel)
      - name: FVT_DIGEST_CORE
        value: $(params.fvt_digest_core)
      - name: IVT_DIGEST_CORE
        value: $(params.ivt_digest_core)
      - name: FVT_BLACKLIST_CORE
        value: $(params.fvt_blacklist_core)
      - name: FVT_WHITELIST_CORE
        value: $(params.fvt_whitelist_core)

  steps:
    - args:
      - |-

        export ROSA_CONFIG=/workspace/configs/tmp-rosa/rosa-$(params.cluster_name)-details.yaml
        export OCP_SERVER=$(cat $ROSA_CONFIG | yq -r '.data.api_url')
        export OCP_USERNAME=$(cat $ROSA_CONFIG | yq -r '.data.username')
        export ROSA_CLUSTER_ADMIN_PASSWORD=$(cat $ROSA_CONFIG | yq -r '.data.admin_password')
        oc login -u $OCP_USERNAME -p $ROSA_CLUSTER_ADMIN_PASSWORD $OCP_SERVER --insecure-skip-tls-verify
        OC_RC=$?
        if [ $OC_RC -ne 0 ]; then
          echo "oc login failed, exiting with error.."
          exit 1
        fi

        echo "Set k8s context"
        export K8S_AUTH_CONTEXT=$(oc whoami -c)

        export MAS_CONFIG_DIR=/tmp/additional-configs
        mkdir -p $MAS_CONFIG_DIR

        cp -rL /workspace/shared-entitlement/. /tmp/additional-configs/
        cp -rL /workspace/shared-additional-configs/. /tmp/additional-configs/
        cp -rL /workspace/shared-gitops-configs/. /tmp/additional-configs/

        echo "Installing ibm.mas_fvt ansible collection (with retries)"
        wget --header="$ARTIFACTORY_AUTH_HEADER" ${ARTIFACTORY_GENERIC_RELEASE_URL}/maximoappsuite/ansible-fvt/${FVT_ANSIBLE_VERSION}/ibm-mas_fvt-${FVT_ANSIBLE_VERSION}.tar.gz || exit 1

        MAX_ATTEMPTS=5
        ATTEMPT=1
        until ansible-galaxy collection install ibm-mas_fvt-${FVT_ANSIBLE_VERSION}.tar.gz; [[ $? -eq 0 ]];
        do
          if [[ $ATTEMPT -eq $MAX_ATTEMPTS ]]; then
            echo "All $MAX_ATTEMPTS attempts to install the collection have failed"
            break
          fi
          echo "Attempt $ATTEMPT failed.  Sleeping for 30 seconds before retry"
          sleep 30
          ((ATTEMPT++))
        done

        echo "Setting up ArgoCD sync window to allow FVT tests to run without interuption"
        if [ -z $ARGOCD_URL ] || [ -z $ARGOCD_USERNAME ] || [ -z $ARGOCD_PASSWORD ]; then
          export ARGOCD_URL=$(oc get route  openshift-gitops-server -n openshift-gitops -ojsonpath='{.spec.host}')
          export ARGOCD_USERNAME=admin
          export ARGOCD_PASSWORD=$(oc get secret openshift-gitops-cluster -n openshift-gitops -ojsonpath='{.data.admin\.password}' | base64 -d ; echo)
        fi
        echo "argo:argocd login : ARGOCD_URL=$ARGOCD_URL ARGOCD_USERNAME=$ARGOCD_USERNAME ARGOCD_PASSWORD=${ARGOCD_PASSWORD:0:8}<snip> ..."    
        argocd login $ARGOCD_URL --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
        echo "argo:argocd proj windows add $MAS_INSTANCE_ID --kind deny --schedule * * * * * --duration 4h --applications *"  
        argocd proj windows add $MAS_INSTANCE_ID --kind deny --schedule "* * * * *" --duration 4h --applications "*"

        mas gitops-mas-fvt-preparer --pipeline-storage-class ${PIPELINE_STORAGE_CLASS} \
        --dir $MAS_CONFIG_DIR
      command:
        - /bin/sh
        - -c
      name: gitops-mas-fvt-preparer
      imagePullPolicy: Always
      image: quay.io/ibmmas/cli:7.10.0-pre.ajw-mascore781
  workspaces:
    - name: configs
    - name: shared-entitlement
    - name: shared-additional-configs
    - name: shared-gitops-configs
