#!/bin/bash

# Usage: mas install

function trap_exit {
  save_config
}

function trap_int {
  # Reset any modifications made to the terminal
  tset

  echo
  echo
  save_config
  exit 0
}

trap trap_exit EXIT
trap trap_int INT


export CLI_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export CONFIG_DIR="$HOME/.ibm-mas/config"
export LOG_DIR="$HOME/.ibm-mas/logs"
export LOGFILE=$LOG_DIR/mas.log

# Note: "latest" is overwritten with the actual version at build time
export VERSION="${VERSION:-latest}"

mkdir -p $LOG_DIR
mkdir -p $CONFIG_DIR

# General purpose internals
. $CLI_DIR/functions/internal/pipelines_install_operator
. $CLI_DIR/functions/internal/pipelines_install_tasks
. $CLI_DIR/functions/internal/connect
. $CLI_DIR/functions/internal/utils
. $CLI_DIR/functions/internal/save_config
# MAS provisioning support
. $CLI_DIR/functions/provision_fyre
. $CLI_DIR/functions/provision_roks
. $CLI_DIR/functions/provision_aws
# Airgap support
. $CLI_DIR/functions/setup_registry
. $CLI_DIR/functions/teardown_registry
. $CLI_DIR/functions/mirror_images
. $CLI_DIR/functions/mirror_redhat
. $CLI_DIR/functions/configure_airgap
# Manage OIDC for configtool
. $CLI_DIR/functions/configtool_oidc
# Must Gather
. $CLI_DIR/functions/must_gather

# TODO: The path from the CLI the installation of the Ansible collection should be configurable
MAS_DEVOPS_COLLECTION_PATH=${MAS_DEVOPS_COLLECTION_PATH:-ansible-devops}

case $1 in
  fyre|provision-fyre)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! provision-fyre                                                            !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite FYRE Cluster Provisioner (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET}"
    echo
    reset_colors
    provision_fyre "$@"
    ;;

  roks|provision-roks)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! provision-roks                                                            !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite ROKS Cluster Provisioner (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET}"
    echo
    reset_colors
    provision_roks "$@"
    ;;

  aws|provision-aws)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! provision-aws                                                             !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite AWS Cluster Provisioner (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET}"
    echo
    reset_colors
    provision_aws "$@"
    ;;

  oidc|configtool-oidc)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! configtool-oidc                                                           !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite OIDC for Configuration Tool (v${VERSION})${TEXT_RESET}"
    echo
    reset_colors
    configtool_oidc "$@"
    ;;

  registry|setup-registry)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! setup-registry                                                            !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite Air Gap Registry Setup (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET}"
    echo
    reset_colors
    connect
    setup_mirror_registry
    ;;

  delete-registry)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! delete-registry                                                           !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite Air Gap Registry Tear Down (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET}"
    echo
    reset_colors
    connect
    teardown_mirror_registry
    ;;

  mirror|mirror-images|mirror-ibm-images)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! mirror-ibm-images                                                         !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite Air Gap Image Mirror (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET}"
    echo
    reset_colors
    mirror_to_registry "$@"
    ;;

  mirror-redhat|mirror-redhat-images)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! mirror-redhat-images                                                      !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite Air Gap Red Hat Image Mirror (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET}"
    echo
    reset_colors
    mirror_redhat "$@"
    ;;

  configure-airgap)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! configure-airgap                                                          !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite Air Gap OCP Setup (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET}"
    echo
    reset_colors
    configure_ocp_for_mirror "$@"
    ;;

  install)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! install                                                                   !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    # Take the first parameter off (it will be "install")
    shift
    # Run the new Python-based install
    mas-cli install "$@"
    ;;

  update)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! update                                                                    !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE

    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite Update Manager (v${VERSION})${TEXT_RESET}"
    echo "Powered by ${COLOR_CYAN}${TEXT_UNDERLINE}https://github.com/ibm-mas/ansible-devops/${TEXT_RESET} and ${COLOR_CYAN}${TEXT_UNDERLINE}https://tekton.dev/${TEXT_RESET}"
    # Take the first parameter off (it will be "update")
    shift
    # Run the new Python-based install
    mas-cli update "$@"
    ;;

  upgrade)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! upgrade                                                                   !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    # Take the first parameter off (it will be "upgrade")
    shift
    # Run the new Python-based upgrade
    mas-cli upgrade "$@"
    ;;

  uninstall)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! uninstall                                                                 !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    # Take the first parameter off (it will be "uninstall")
    shift
    # Run the new Python-based upgrade
    mas-cli uninstall "$@"
    ;;

  mustgather|must-gather)
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "!! must-gather                                                               !!" >> $LOGFILE
    echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" >> $LOGFILE
    echo "${TEXT_UNDERLINE}IBM Maximo Application Suite Must-Gather Tool (v${VERSION})${TEXT_RESET}"
    echo
    mustgather "$@"
    ;;

  *)
    echo "unknown parameter"
    exit 1
    ;;
esac
