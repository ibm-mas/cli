---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gitops-mas-fvt-preparer
spec:
  params:
    - name: cluster_name
      type: string
    - name: cluster_url
      type: string
      default: ""
    - name: devops_build_number
      type: string
    - name: pipeline_storage_class
      type: string
    - name: aws_region
      type: string
    - name: fvt_pipeline_name
      type: string
    - name: cli_version
      type: string
    - name: fvt_config
      type: string
    - name: argocd_url
      type: string
      default: ""
    - name: argocd_check
      type: string
      default: "false"

    - name: fvt_version_core
      type: string
    - name: ivt_version_core
      type: string
    - name: fvt_version_ctf
      type: string
    - name: fvt_version_assist
      type: string
    - name: fvt_version_health
      type: string
    - name: fvt_version_iot
      type: string
    - name: fvt_version_optimizer
      type: string
    - name: fvt_version_manage
      type: string
    - name: fvt_manage_automation_version
      type: string
    - name: fvt_version_manage_civil
      type: string
    - name: fvt_version_mobile
      type: string
    - name: fvt_version_mobilefoundation
      type: string
    - name: fvt_version_servicerequests
      type: string
    - name: fvt_version_inspection
      type: string
    - name: fvt_version_technician
      type: string
    - name: fvt_version_asset_manager
      type: string
    - name: fvt_version_inventorycounting
      type: string
    - name: fvt_version_data_dictionary
      type: string

    - name: fvt_blacklist_core
      type: string
    - name: fvt_whitelist_core
      type: string

    - name: artifactory_generic_release_url
      type: string
    - name: fvt_ansible_version
      type: string

    - name: fvt_image_registry
      type: string
      default: ""
    - name: image_pull_policy
      type: string
      default: ""

    - name: mas_instance_id
      type: string
      default: ""
    - name: mas_workspace_id
      type: string
      default: ""
    - name: mas_channel
      type: string
      default: ""

    - name: launchfvt_core
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Core FVT Pipeline after suite-verify completes"
    - name: launchfvt_assist
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Assist FVT Pipeline after app-cfg-assist completes"
    - name: launchfvt_iot
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the IoT FVT Pipeline after app-cfg-iot completes"
    - name: launchfvt_manage
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Manage FVT Pipeline after app-cfg-manage completes (does not control the additional Industry Solution, Mobile, or Regression Manage suites)"
    - name: launchfvt_monitor
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Manage FVT Pipeline after app-cfg-monitor completes"
    - name: launchfvt_optimizer
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Optimizer FVT Pipeline after app-cfg-optimizer completes"
    - name: launchfvt_predict
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Predict FVT Pipeline after app-cfg-predict completes"
    - name: launchfvt_visualinspection
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Visual Inspection FVT Pipeline after app-cfg-visualinspection completes"
    - name: launchfvt_mobile
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable lauch of the Mobile FVT Pipeline after app-cfg-manage completes"

    - name: mas_app_channel_iot
      type: string
      default: ""
    - name: mas_app_channel_manage
      type: string
      default: ""
    - name: mas_app_channel_monitor
      type: string
      default: ""
    - name: mas_app_channel_visualinspection
      type: string
      default: ""
    - name: mas_app_channel_assist
      type: string
      default: ""
    - name: mas_app_channel_optimizer
      type: string
      default: ""
    - name: mas_app_channel_predict
      type: string
      default: ""

  stepTemplate:
    name: gitops-mas-fvt-preparer
    env:
      - name: CLUSTER_NAME
        value: $(params.cluster_name)
      - name: OCP_SERVER
        value: $(params.cluster_url)
      - name: TRAVIS_BUILD_NUMBER
        value: $(params.devops_build_number)
      - name: DEVOPS_BUILD_NUMBER
        value: $(params.devops_build_number)
      - name: MAS_INSTANCE_ID
        value: $(params.mas_instance_id)
      - name: PIPELINE_STORAGE_CLASS
        value: $(params.pipeline_storage_class)
      - name: AWS_REGION
        value: $(params.aws_region)
      - name: FVT_PIPELINE_NAME
        value: $(params.fvt_pipeline_name)
      - name: CLI_VERSION
        value: $(params.cli_version)
      - name: FVT_CONFIG
        value: $(params.fvt_config)
      - name: FVT_IMAGE_REGISTRY
        value: $(params.fvt_image_registry)
      - name: ARTIFACTORY_GENERIC_RELEASE_URL
        value: $(params.artifactory_generic_release_url)
      - name: FVT_ANSIBLE_VERSION
        value: $(params.fvt_ansible_version)
      - name: MAS_WORKSPACE_ID
        value: $(params.mas_workspace_id)
      - name: MAS_CHANNEL
        value: $(params.mas_channel)
      - name: FVT_VERSION_CORE
        value: $(params.fvt_version_core)
      - name: IVT_VERSION_CORE
        value: $(params.ivt_version_core)
      - name: FVT_VERSION_CTF
        value: $(params.fvt_version_ctf)
      - name: FVT_VERSION_ASSIST
        value: $(params.fvt_version_assist)
      - name: FVT_VERSION_HEALTH
        value: $(params.fvt_version_health)
      - name: FVT_VERSION_IOT
        value: $(params.fvt_version_iot)
      - name: FVT_VERSION_OPTIMIZER
        value: $(params.fvt_version_optimizer)
      - name: FVT_VERSION_MANAGE
        value: $(params.fvt_version_manage)
      - name: FVT_MANAGE_AUTOMATION_VERSION
        value: $(params.fvt_manage_automation_version)
      - name: FVT_VERSION_MANAGE_CIVIL
        value: $(params.fvt_version_manage_civil)
      - name: FVT_VERSION_MOBILE
        value: $(params.fvt_version_mobile)
      - name: FVT_VERSION_MOBILEFOUNDATION
        value: $(params.fvt_version_mobilefoundation)
      - name: FVT_VERSION_SERVICEREQUESTS
        value: $(params.fvt_version_servicerequests)
      - name: FVT_VERSION_INSPECTION
        value: $(params.fvt_version_inspection)
      - name: FVT_VERSION_TECHNICIAN
        value: $(params.fvt_version_technician)
      - name: FVT_VERSION_ASSET_MANAGER
        value: $(params.fvt_version_asset_manager)
      - name: FVT_VERSION_INVENTORYCOUNTING
        value: $(params.fvt_version_inventorycounting)
      - name: FVT_VERSION_DATA_DICTIONARY
        value: $(params.fvt_version_data_dictionary)
      - name: FVT_BLACKLIST_CORE
        value: $(params.fvt_blacklist_core)
      - name: FVT_WHITELIST_CORE
        value: $(params.fvt_whitelist_core)
      - name: LAUNCHFVT_CORE
        value: $(params.launchfvt_core)
      - name: LAUNCHFVT_ASSIST
        value: $(params.launchfvt_assist)
      - name: LAUNCHFVT_IOT
        value: $(params.launchfvt_iot)
      - name: LAUNCHFVT_MANAGE
        value: $(params.launchfvt_manage)
      - name: LAUNCHFVT_MOBILE
        value: $(params.launchfvt_mobile)
      - name: LAUNCHFVT_MONITOR
        value: $(params.launchfvt_monitor)
      - name: LAUNCHFVT_OPTIMIZER
        value: $(params.launchfvt_optimizer)
      - name: LAUNCHFVT_PREDICT
        value: $(params.launchfvt_predict)
      - name: LAUNCHFVT_VISUALINSPECTION
        value: $(params.launchfvt_visualinspection)
      - name: MAS_APP_CHANNEL_IOT
        value: $(params.mas_app_channel_iot)
      - name: MAS_APP_CHANNEL_MANAGE
        value: $(params.mas_app_channel_manage)
      - name: MAS_APP_CHANNEL_MONITOR
        value: $(params.mas_app_channel_monitor)
      - name: MAS_APP_CHANNEL_VISUALINSPECTION
        value: $(params.mas_app_channel_visualinspection)
      - name: MAS_APP_CHANNEL_ASSIST
        value: $(params.mas_app_channel_assist)
      - name: MAS_APP_CHANNEL_OPTIMIZER
        value: $(params.mas_app_channel_optimizer)
      - name: MAS_APP_CHANNEL_PREDICT
        value: $(params.mas_app_channel_predict)
      - name: ARGOCD_URL
        value: $(params.argocd_url)
      - name: ARGOCD_CHECK
        value: $(params.argocd_check)
    envFrom:
      - configMapRef:
          name: environment-properties
          optional: true
      - secretRef:
          name: secure-properties
  steps:
    - args:
      - |-

        echo "Installing ibm.mas_fvt ansible collection (with retries)"
        wget --header="Authorization:Bearer $FVT_ARTIFACTORY_TOKEN" ${ARTIFACTORY_GENERIC_RELEASE_URL}/maximoappsuite/ansible-fvt/${FVT_ANSIBLE_VERSION}/ibm-mas_fvt-${FVT_ANSIBLE_VERSION}.tar.gz || exit 1

        MAX_ATTEMPTS=5
        ATTEMPT=1
        until ansible-galaxy collection install ibm-mas_fvt-${FVT_ANSIBLE_VERSION}.tar.gz; [[ $? -eq 0 ]];
        do
          if [[ $ATTEMPT -eq $MAX_ATTEMPTS ]]; then
            echo "All $MAX_ATTEMPTS attempts to install the collection have failed"
            break
          fi
          echo "Attempt $ATTEMPT failed.  Sleeping for 30 seconds before retry"
          sleep 30
          ((ATTEMPT++))
        done

        if [ "${ARGOCD_CHECK}" == "true" ]; then
          echo "Setting up ArgoCD sync window to allow FVT tests to run without interuption"
          echo "argo:argocd login : ARGOCD_URL=$ARGOCD_URL ARGOCD_USERNAME=$ARGOCD_USERNAME ARGOCD_PASSWORD=${ARGOCD_PASSWORD:0:8}<snip> ..."    
          argocd login $ARGOCD_URL --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
          echo "argo:argocd proj windows add mas --kind deny --schedule * * * * * --duration 4h --applications *"  
          argocd proj windows add mas --kind deny --schedule "* * * * *" --duration 4h --applications "*.$MAS_INSTANCE_ID"
        fi

        #TODO Below requires oc login, Hence below logic along with adding / removing sync window need to go into sync hook ?
        mas gitops-mas-fvt-preparer --pipeline-storage-class ${PIPELINE_STORAGE_CLASS}

        # Wait for launcher to complete
        /opt/app-root/src/wait-for-pipelinerun.sh --name $MAS_INSTANCE_ID-fvt-launcher-$DEVOPS_BUILD_NUMBER --namespace mas-$MAS_INSTANCE_ID-pipelines

        if [ "${ARGOCD_CHECK}" == "true" ]; then
          # Remove argocd window
          echo "argo:argocd login : ARGOCD_URL=$ARGOCD_URL ARGOCD_USERNAME=$ARGOCD_USERNAME ARGOCD_PASSWORD=${ARGOCD_PASSWORD:0:8}<snip> ..."
          argocd login $ARGOCD_URL --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
          ARGOWINDOW=$(argocd proj windows list mas | grep "*.$MAS_INSTANCE_ID" | cut -c1-1)
          echo "argo:argocd proj windows delete mas $ARGOWINDOW"
          argocd proj windows delete mas $ARGOWINDOW
        fi


      command:
        - /bin/sh
        - -c
      name: gitops-mas-fvt-preparer
      imagePullPolicy: IfNotPresent
      image: quay.io/ibmmas/cli:7.10.0-pre.gitops
  workspaces:
    - name: configs
