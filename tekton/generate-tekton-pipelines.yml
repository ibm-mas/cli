- name: Generate Tekton Pipelines
  hosts: localhost
  any_errors_fatal: true
  vars:
    mas_tekton_version: latest

    params_src_dir: src/params
    params_tmp_dir: tmp

    pipeline_src_dir: src/pipelines
    pipeline_target_dir: target/pipelines
  tasks:

    # 1. Prepare tmp and target directory for the pipeline build
    # -------------------------------------------------------------------------
    - name: Create target directory
      ansible.builtin.file:
        path: "{{ pipeline_target_dir }}"
        state: directory

    # 2. Generate Pipelines
    # -------------------------------------------------------------------------
    - name: Generate Pipelines
      vars:
        wait_for_install: false
      ansible.builtin.template:
        src: "{{ pipeline_src_dir }}/{{ item }}.yml.j2"
        dest: "{{ pipeline_target_dir }}/{{ item }}.yaml"
      with_items:
        - db2
        - install
        - fvt-assist
        - fvt-core
        - fvt-deprovision-after
        - fvt-iot
        - fvt-manage
        - fvt-manage-is
        - fvt-manage-regr
        - fvt-mobile
        - fvt-monitor
        - fvt-optimizer
        - fvt-predict
        - fvt-sls
        - fvt-uninstall-after
        - fvt-upgrade-post
        - fvt-upgrade-pre
        - fvt-visualinspection
        - update
        - upgrade
        - rollback
        - uninstall
        - fvt-launcher
        - ivt

    # 2. Generate Pipelines
    # -------------------------------------------------------------------------
    - name: Generate Pipelines (wait-for-install versions)
      vars:
        wait_for_install: true
      ansible.builtin.template:
        src: "{{ pipeline_src_dir }}/{{ item }}.yml.j2"
        dest: "{{ pipeline_target_dir }}/{{ item }}-after-install.yaml"
      with_items:
        - update
        - upgrade
        - rollback
        - uninstall
