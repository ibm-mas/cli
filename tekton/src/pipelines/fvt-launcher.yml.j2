---
# There are various integration points in the install pipeline that we can hang FVT off
# 1. suite-verify ............... Triggered after Core install and configuration is verified
# 2. app-cfg-assist ............. Triggered after Assist is installed and configured
# 3. app-cfg-iot ................ Triggered after IoT is installed and configured
# 4. app-cfg-manage ............. Triggered after Manage is installed and configured
# 5. app-cfg-monitor ............ Triggered after Monitor is installed and configured
# 6. app-cfg-optimizer .......... Triggered after Optimizer is installed and configured
# 7. app-cfg-predict ............ Triggered after Predict is installed and configured
# 8. app-cft-visualinspection ... Triggered after Visual Inspection is installed and configured

# TODO: Manage component sub-pipelines need to be integrated (fvt-manage-civil, fvt-manage-health, fvt-manage-is)
# TODO: Mobile sub-pipelines need to be integrated (fvt-mobile) .. should this be fvt-manage-mobile, is it testing anything mobile that is outside scope of Manage application?

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mas-fvt-launcher
spec:
  params:
    - name: fvt_image_registry
      type: string
    - name: image_pull_policy
      type: string

    - name: mas_instance_id
      type: string

    - name: sync_with_install
      type: string
      default: "false"
      description: "Set this to 'true' to enable synchronization with a running MAS install pipeline"

    - name: launchfvt_core
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the SLS & Core FVT pipelines after suite-verify completes"
    - name: launchfvt_assist
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the Assist FVT pipeline after app-cfg-assist completes"
    - name: launchfvt_iot
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the IoT FVT pipeline after app-cfg-iot completes"
    - name: launchfvt_manage
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the Manage FVT pipeline after app-cfg-manage completes"
    - name: launchfvt_mobile
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the Mobile FVT pipeline after app-cfg-manage completes"
    - name: launchfvt_monitor
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the Monitor FVT pipeline after app-cfg-monitor completes"
    - name: launchfvt_optimizer
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the Optimizer FVT pipeline after app-cfg-optimizer completes"
    - name: launchfvt_predict
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the Predict FVT pipeline after app-cfg-predict completes"
    - name: launchfvt_visualinspection
      type: string
      default: "true"
      description: "Set this to any falue other than 'true' to disable launch of the Visual Inspection FVT pipeline after app-cfg-visualinspection completes"

  tasks:
    # 1. MAS Core FVT
    # -------------------------------------------------------------------------
    - name: waitfor-suite-verify
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-suite-verify
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        - name: delay
          value: "300"
        - name: max_retries
          value: "50"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_core)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]

# See: https://jsw.ibm.com/browse/IBMSLS-17
#    - name: launchfvt-sls
#      taskRef:
#        kind: Task
#        name: mas-launchfvt-sls
#      params:
#        - name: image_pull_policy
#          value: $(params.image_pull_policy)
#        - name: pipelinerun_name
#          value: "$(params.mas_instance_id)-fvt-sls"
#      when:
#        - input: $(params.launchfvt_core)
#          operator: in
#          values: ["true", "True"]
#      runAfter:
#        - waitfor-suite-verify
#
#    - name: waitforfvt-sls
#      taskRef:
#        kind: Task
#        name: mas-devops-wait-for-tekton
#      params:
#        - name: pipelinerun_name
#          value: "$(params.mas_instance_id)-fvt-sls"
#        - name: ignore_failure
#          value: "True"
#      when:
#        - input: $(params.launchfvt_core)
#          operator: in
#          values: ["true", "True"]
#      runAfter:
#        - launchfvt-sls

    - name: launchfvt-core
      taskRef:
        kind: Task
        name: mas-launchfvt-core
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-core"
      when:
        - input: $(params.launchfvt_core)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-suite-verify

    - name: waitforfvt-core
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-core"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_core)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-core

    - name: approval-suite-verify
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-suite-verify
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.launchfvt_core)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
# See: https://jsw.ibm.com/browse/IBMSLS-17
#        - waitforfvt-sls
        - waitforfvt-core


    # 2. Application FVT - Assist
    # -------------------------------------------------------------------------
    - name: waitfor-assist
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-assist
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        - name: delay
          value: "300"
        - name: max_retries
          value: "100"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_assist)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-assist
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-assist"
      taskRef:
        kind: Task
        name: mas-launchfvt-assist
      when:
        - input: $(params.launchfvt_assist)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-assist

    - name: waitforfvt-assist
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-assist"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_assist)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-assist

    - name: approval-assist
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-assist
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.launchfvt_assist)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitforfvt-assist


    # 3. Application FVT - IoT
    # -------------------------------------------------------------------------
    - name: waitfor-iot
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-iot
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        - name: delay
          value: "300"
        - name: max_retries
          value: "100"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_iot)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-iot
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-iot"
      taskRef:
        kind: Task
        name: mas-launchfvt-iot
      when:
        - input: $(params.launchfvt_iot)
          operator: in
          values: ["true", "True"]
      when:
        - input: $(params.launchfvt_iot)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-iot

    - name: waitforfvt-iot
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-iot"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_iot)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-iot

    - name: approval-iot
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-iot
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.launchfvt_iot)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitforfvt-iot


    # 5. Application FVT - Manage
    # -------------------------------------------------------------------------
    - name: waitfor-manage
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-manage
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        - name: delay
          value: "300"
        - name: max_retries
          value: "100"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_manage)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-manage
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-manage"
      taskRef:
        kind: Task
        name: mas-launchfvt-manage
      when:
        - input: $(params.launchfvt_manage)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-manage

    - name: waitforfvt-manage
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-manage"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_manage)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-manage

    - name: approval-manage
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-manage
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.launchfvt_manage)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitforfvt-manage


    # 6. Application FVT - Mobile
    # -------------------------------------------------------------------------
    # Mobile FVT pipeline is launched after Manage is installed, but we do not sync it's progress back to the install pipeline
    - name: launchfvt-mobile
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-mobile"
      taskRef:
        kind: Task
        name: mas-launchfvt-mobile
      when:
        - input: $(params.launchfvt_mobile)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-manage

    - name: waitforfvt-mobile
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-mobile"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_mobile)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-mobile


    # 7. Application FVT - Monitor
    # -------------------------------------------------------------------------
    # We only start the Monitor part of the FVT launcher after the IoT part has completed
    - name: waitfor-monitor
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-monitor
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        - name: delay
          value: "300"
        - name: max_retries
          value: "100"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-iot

    - name: launchfvt-monitor
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-monitor"
      taskRef:
        kind: Task
        name: mas-launchfvt-monitor
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-monitor

    - name: waitforfvt-monitor
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-monitor"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-monitor

    - name: approval-monitor
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-monitor
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.launchfvt_monitor)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitforfvt-monitor


    # 8. Application FVT - Optimizer
    # -------------------------------------------------------------------------
    - name: waitfor-optimizer
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-optimizer
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        - name: delay
          value: "300"
        - name: max_retries
          value: "100"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_optimizer)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-optimizer
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-optimizer"
      taskRef:
        kind: Task
        name: mas-launchfvt-optimizer
      when:
        - input: $(params.launchfvt_optimizer)
          operator: in
          values: ["true", "True"]
      when:
        - input: $(params.launchfvt_optimizer)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-optimizer

    - name: waitforfvt-optimizer
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-optimizer"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_optimizer)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-optimizer

    - name: approval-optimizer
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-optimizer
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.launchfvt_optimizer)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitforfvt-optimizer


    # 9. Application FVT - Predict
    # -------------------------------------------------------------------------
    # We only start the Predict part of the FVT launcher after the Monitor part has completed
    - name: waitfor-predict
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-predict
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        - name: delay
          value: "300"
        - name: max_retries
          value: "100"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-monitor
        - approval-manage

    - name: launchfvt-predict
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-predict"
      taskRef:
        kind: Task
        name: mas-launchfvt-predict
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-predict

    - name: waitforfvt-predict
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-predict"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-predict

    - name: approval-predict
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-predict
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.launchfvt_predict)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitforfvt-predict


    # 10. Application FVT - Visual Inspection
    # -------------------------------------------------------------------------
    - name: waitfor-visualinspection
      taskRef:
        kind: Task
        name: mas-devops-wait-for-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: namespace
          value: $(context.taskRun.namespace)
        - name: configmap_name
          value: approval-app-cfg-visualinspection
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_target_value
          value: pending
        - name: delay
          value: "300"
        - name: max_retries
          value: "100"
        - name: ignore_failure
          value: "False"
      when:
        - input: $(params.launchfvt_visualinspection)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - approval-suite-verify

    - name: launchfvt-visualinspection
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: pipelinerun_name
          value: "$(params.mas_instance_id)-fvt-visualinspection"
      taskRef:
        kind: Task
        name: mas-launchfvt-visualinspection
      when:
        - input: $(params.launchfvt_visualinspection)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitfor-visualinspection

    - name: waitforfvt-visualinspection
      taskRef:
        kind: Task
        name: mas-devops-wait-for-tekton
      params:
        - name: type
          value: pipelinerun
        - name: name
          value: "$(params.mas_instance_id)-fvt-visualinspection"
        - name: delay
          value: 300  # seconds between checking the status of the pipelinerun
        - name: retries
          value: 50  # attempts before giving up
        - name: ignore_failure
          value: "True"  # continue even if the pipeline run has not completed successfully
      when:
        - input: $(params.launchfvt_visualinspection)
          operator: in
          values: ["true", "True"]
      runAfter:
        - launchfvt-visualinspection

    - name: approval-visualinspection
      taskRef:
        kind: Task
        name: mas-devops-update-configmap
      params:
        - name: image_pull_policy
          value: $(params.image_pull_policy)
        - name: configmap_name
          value: approval-app-cfg-visualinspection
        - name: configmap_key
          value: FVT_STATUS
        - name: configmap_value
          value: approved
      when:
        - input: $(params.launchfvt_visualinspection)
          operator: in
          values: ["true", "True"]
        - input: $(params.sync_with_install)
          operator: in
          values: ["true", "True"]
      runAfter:
        - waitforfvt-visualinspection


  finally:
    # Collect must-gather
    # -------------------------------------------------------------------------
    - name: must-gather
      taskRef:
        kind: Task
        name: mas-devops-must-gather
      params:
        - name: base_output_dir
          value: "/workspace/mustgather/$(context.pipelineRun.name)"
      workspaces:
        - name: mustgather
          workspace: shared-mustgather

    # Finalize the record in the FVT database
    # -------------------------------------------------------------------------
    - name: finalize
      taskRef:
        kind: Task
        name: mas-fvt-finalize

  workspaces:
    # Shared storage to hold mustgather output for tasks
    - name: shared-mustgather
